// Code generated by go-bindata.
// sources:
// scaffold/.envrc
// scaffold/.gitignore
// scaffold/README.md
// scaffold/VERSION
// scaffold/bin/compile
// scaffold/bin/detect
// scaffold/bin/finalize
// scaffold/bin/release
// scaffold/bin/supply
// scaffold/fixtures/.gitkeep
// scaffold/fixtures/simple_test/some_file.txt
// scaffold/manifest.yml
// scaffold/scripts/brats.sh
// scaffold/scripts/build.sh
// scaffold/scripts/install_go.sh
// scaffold/scripts/install_tools.sh
// scaffold/scripts/integration.sh
// scaffold/scripts/unit.sh
// scaffold/src/LANGUAGE/Gopkg.toml
// scaffold/src/LANGUAGE/finalize/_finalize.go
// scaffold/src/LANGUAGE/finalize/_finalize_suite_test.go
// scaffold/src/LANGUAGE/finalize/_finalize_test.go
// scaffold/src/LANGUAGE/finalize/cli/_cli_suite_test.go
// scaffold/src/LANGUAGE/finalize/cli/_main.go
// scaffold/src/LANGUAGE/hooks/_hooks_debug.go
// scaffold/src/LANGUAGE/hooks/_hooks_suite_test.go
// scaffold/src/LANGUAGE/integration/_integration_suite_test.go
// scaffold/src/LANGUAGE/integration/_simple_test.go
// scaffold/src/LANGUAGE/supply/_supply.go
// scaffold/src/LANGUAGE/supply/_supply_suite_test.go
// scaffold/src/LANGUAGE/supply/_supply_test.go
// scaffold/src/LANGUAGE/supply/cli/_cli_suite_test.go
// scaffold/src/LANGUAGE/supply/cli/_main.go
// scaffold/src/LANGUAGE/vendor/.gitkeep
// DO NOT EDIT!

package packager

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Envrc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xad\x28\xc8\x2f\x2a\x51\x70\xf7\x0f\x70\x0c\xf1\xb0\x55\x09\x08\x77\xe1\x82\x0b\x39\x79\xfa\x81\x45\xf4\xf5\x92\x32\xf3\x60\xc2\x10\x75\x60\x49\x2b\x15\x10\x07\x10\x00\x00\xff\xff\x4b\xa8\xfe\x63\x42\x00\x00\x00")

func EnvrcBytes() ([]byte, error) {
	return bindataRead(
		_Envrc,
		".envrc",
	)
}

func Envrc() (*asset, error) {
	bytes, err := EnvrcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".envrc", size: 66, mode: os.FileMode(420), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x4e\xe7\xd2\x4b\xca\xcc\xe3\x2a\x4e\x4e\x4c\x4b\xcb\xcf\x49\x89\x4f\x2a\xcd\xcc\x49\x29\x48\x4c\xce\xd6\xd5\xd2\xab\xca\x2c\x00\x04\x00\x00\xff\xff\x8b\xdd\xc0\x96\x21\x00\x00\x00")

func GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_Gitignore,
		".gitignore",
	)
}

func Gitignore() (*asset, error) {
	bytes, err := GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitignore", size: 33, mode: os.FileMode(420), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x10\xe8\x61\x2b\xd0\xda\xe8\xb5\xb7\x7e\x6e\xc1\xda\xad\xe8\x92\xcb\x82\x22\x95\x65\x3a\xd6\x2a\x8b\x82\x28\x35\xf3\xbf\x1f\x28\x77\x4e\xd2\xf6\xb6\xc3\xb0\x8b\xa1\x0f\x3e\x8a\xef\xf1\xd1\x07\x07\x07\x70\x9e\x8c\x6d\xbc\xd2\x4f\xb0\x60\x0c\x70\x49\x3a\xf5\xe8\xa2\x8a\x86\x5c\x51\x4c\x11\xc6\xad\x21\x76\xb8\x0d\x2f\xe6\x04\xb5\x6c\x20\x76\x86\xc7\xa5\x9c\x1f\x41\x48\x2e\x87\xb6\x64\x2d\x6d\x04\xa8\xa9\xef\x95\x6b\xa0\x0d\xd4\xe7\xab\x29\xfa\x03\x43\x63\x02\xea\x48\x61\x38\x2d\x8a\x93\x12\xbe\x53\x0a\x1a\x73\x54\x89\xee\x39\x68\x68\x8d\x45\x30\x6e\x1f\xb8\x85\x95\xc5\xe3\xe3\x63\xad\xb8\x2b\x78\x84\x8e\x30\x39\x95\x1a\xd9\xf4\xde\x9a\x76\xc8\x70\x1f\x48\x23\xf3\x9f\x6c\x6d\x8a\x29\xe0\x11\x18\xc7\x51\x59\x0b\x4b\x49\xea\x9e\x1f\x3e\x76\x31\x7a\x3e\xad\xaa\x71\x5f\x3a\x8c\xd5\x21\x6c\x3a\xa3\x3b\xd8\x18\x6b\x41\xa5\x48\xbd\x8a\x46\x2b\x6b\x07\xd8\x7b\x17\x36\x1d\x3a\x18\x28\x81\xee\x94\x5b\xe3\x54\xa8\x41\x2e\x33\xc3\xd9\xcb\x6b\x13\x97\x63\xf9\xa8\x35\x86\x89\x49\x59\xb1\x0e\xc6\x47\xae\x5e\x4a\x5b\x45\x22\xcb\x25\x77\x99\x96\x64\x39\x7f\xd1\x7e\x47\x93\x09\xfe\x36\xf3\x18\x34\x81\x17\x9c\x15\xbd\xb0\x94\x1a\xb8\xa6\xe4\x9a\x30\x14\x0b\x6f\x49\xbd\x4a\x09\x91\x84\x4b\xd8\x0f\x05\x69\x26\x79\xb1\xc8\x28\x80\x47\x2d\x12\x9b\x08\xf5\x00\x4e\xf5\x58\x4c\xb5\xe8\x16\x74\x40\x15\xf1\x78\x9b\x74\x79\xbe\x98\xdd\x5c\xde\x9d\x5d\x7c\x59\x7d\x3d\xbb\xbd\x7a\xd8\x3d\xf8\x31\xbb\x5b\x5d\xcf\x6e\xae\x56\x77\x67\xf3\xcf\x0f\x70\x22\x09\x7c\xe2\x0e\xfa\x61\xa5\xbc\x87\xe5\x71\x0d\xaf\xe0\x23\x2d\xb1\xea\x1c\x39\x1a\xb7\x2e\x26\x97\x32\x24\x1e\xcd\xb4\xbc\x48\xd1\x2a\xe6\x6d\x73\xd7\x26\x76\xa9\x2e\x35\xf5\x95\x16\x76\xed\x48\xae\xb2\xa6\x9e\x4a\xad\xf4\x88\x3a\x84\x36\xa8\x1e\x37\x14\x9e\xa0\xa5\x20\x1e\x77\xe2\x6c\xe3\x22\xae\x43\x1e\x16\x88\xc8\x51\x5a\x3c\xa7\xbc\xfc\xf7\x73\xf1\xbf\x0d\xc6\x7d\x72\x90\x9c\x89\xa3\x92\xc5\x3b\xd3\x20\xb7\xbb\x43\x20\x88\x37\x2d\x78\x0f\xb8\x13\x34\xe1\x6f\x29\x88\x7e\x2d\x85\x7e\x44\x6b\xe5\xa0\x96\xfe\x24\xb1\xb7\x83\x4f\xd9\x20\xb0\xd4\x7f\xe5\x9c\x72\xb4\xe6\x3d\x7a\x0a\x62\x4e\x98\x31\x27\xe4\xe2\x9b\x47\x07\xca\x81\x91\xad\x3c\x97\xfd\xe2\x03\xfd\x44\x1d\x05\x03\x97\x86\xb5\x55\xa6\xc7\x50\xcc\xf7\xbc\x04\x86\x01\x7f\x79\x0c\x26\xff\xaa\x6d\x9e\x47\x47\x11\x06\x8c\x59\x0f\xd7\x60\x93\x7d\xea\x03\x35\x49\x67\x76\x89\xb1\x2c\x7e\x07\x00\x00\xff\xff\x60\xcc\xda\x0b\xf2\x05\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 1522, mode: os.FileMode(420), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _version = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x32\xd0\x33\xd0\x33\x00\x04\x00\x00\xff\xff\x86\x4b\x5b\x2e\x05\x00\x00\x00")

func versionBytes() ([]byte, error) {
	return bindataRead(
		_version,
		"VERSION",
	)
}

func version() (*asset, error) {
	bytes, err := versionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VERSION", size: 5, mode: os.FileMode(420), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binCompile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x8b\x13\x31\x14\x85\xdf\xf3\x2b\x8e\xd9\x08\xbb\xc2\x74\x46\xdf\x57\xe8\x4e\x2b\x53\x54\xb6\x6c\x77\xdf\x84\x92\x4e\xee\x30\x97\xa6\x49\x48\x32\xd5\x2a\xfe\x77\x69\xcb\x76\x47\x51\xf0\xf1\x9e\xc0\x77\xf2\xdd\x7b\xf5\xaa\x1c\x52\x2c\x37\xec\x4a\x72\x7b\x6c\x74\xea\xc5\x15\x1e\x7b\x4e\x48\x6d\xe4\x90\xc1\x09\x1a\x86\x42\xa4\x56\x67\x32\xd8\x0c\xa7\x2c\x44\xbf\x67\x43\x06\x9d\x8f\x68\xfd\x2e\xe8\xcc\x1b\xb6\x9c\x0f\xf8\xca\xb9\x47\x43\xd1\x6f\x07\x68\x67\xe0\xad\xa1\x88\x3d\xc5\xc4\xde\x25\xf8\x0e\xb5\xf5\x83\xc1\x07\x3f\x38\x13\x0f\xe2\x0a\x8b\x73\x8d\x83\xb6\x99\xa2\xd3\x99\xf7\x84\xec\x71\xfc\x56\x1a\x42\xb0\x87\x13\xe8\x38\x76\xec\xb4\xe5\xef\x24\x44\xa2\x8c\x82\x06\x8f\xc0\x81\x3a\xcd\x56\x88\xbb\xa7\xc5\xa7\xd9\x7a\xb6\x78\xb8\x55\x6f\x45\x3d\xad\x9b\xf9\x79\x78\x77\x7e\x59\x4e\xeb\x8f\xeb\xe5\xf4\xb1\xb9\x55\xd7\x86\xa3\xd3\x3b\x82\xba\x8e\xa4\x8d\x65\xb7\x45\xd1\x41\xfd\xb8\x9b\xae\x9a\xf5\xea\xfe\xe9\xa1\x9e\xbf\x2e\xdf\xfc\xbc\xb9\x11\xb3\xf9\x72\x75\xc2\x48\x75\xe1\x97\x93\xf6\xa8\xd0\x9d\x0d\xa4\x10\xbb\xad\xe1\x88\x22\x40\x5d\x6a\x5f\x32\xa9\x9e\x19\x65\x25\xc7\xf1\x88\x17\xa2\xef\xd8\xd2\xc4\x48\x21\xa8\xed\x3d\x24\x7d\x0b\x3e\x66\x5c\xea\xbf\xa8\xe6\xfe\xf3\xfc\x8f\x66\xbc\xff\x07\xa6\xac\xaa\xaa\x5a\x27\xca\x85\xa1\x90\x0a\xc3\x71\x92\x7a\x29\x84\xfa\x7d\x13\xe5\x68\xc5\x23\x90\x84\x7c\x11\x91\x23\x01\x89\xea\xaf\x88\xe7\xb3\xfc\x37\xe4\x57\x00\x00\x00\xff\xff\x2f\x90\x23\x7d\x79\x02\x00\x00")

func binCompileBytes() ([]byte, error) {
	return bindataRead(
		_binCompile,
		"bin/compile",
	)
}

func binCompile() (*asset, error) {
	bytes, err := binCompileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/compile", size: 633, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\xc5\x15\x9e\x0b\xb7\x6b\x51\x64\xca\xee\x25\x40\x66\xfd\x30\x10\x11\x5b\x12\x28\x3a\x4e\xde\x3e\xa0\xbd\x05\x9c\x78\xfc\xee\x03\x87\xaf\x71\xed\x32\x06\x2e\x23\x95\x07\x82\xef\xd9\x0d\xb0\x35\x91\x52\x54\xfc\x87\x95\xe7\xf4\x9d\x58\x4e\x6e\xb0\xc1\x25\x73\x47\x8f\xc2\x4d\x61\x90\x2c\x5c\xa8\x63\xcb\xa4\x99\x04\x55\x50\xaa\x42\x2b\x7c\x6b\xf3\x0b\x9a\x09\xbb\xa3\xf9\x78\xdf\xe3\x62\x17\x13\x4d\xe7\xe9\x0f\x57\x61\x25\xc4\x9a\x08\x99\x84\x8c\xa0\x27\x2b\x7e\xc0\xb7\x8f\x32\x77\xc4\xba\x34\xaf\x1c\x66\xc2\xc6\x9a\x77\xc0\xb7\x06\x5f\xd2\x51\xfb\x45\xb5\x37\x36\xee\xe4\xdc\x91\xb8\x77\x00\x00\x00\xff\xff\xad\x3a\x34\xb0\xe5\x00\x00\x00")

func binDetectBytes() ([]byte, error) {
	return bindataRead(
		_binDetect,
		"bin/detect",
	)
}

func binDetect() (*asset, error) {
	bytes, err := binDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/detect", size: 229, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binFinalize = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x5d\x6b\xdb\x30\x14\x7d\xbf\xbf\xe2\xce\xd5\xa0\x1d\xb8\x62\x5f\x2f\x03\x0f\xdc\x38\x73\xcc\xc2\x1c\x9c\x04\xfc\x96\x2a\xb6\x6c\x8b\x3a\x92\xd0\xc7\x18\x0b\xfe\xef\xc3\x71\xeb\x2d\xa3\x7a\x3a\x47\x3a\x9c\x73\x75\xcf\xcd\x1b\xea\xad\xa1\x47\x21\x29\x97\x3f\xf1\xc8\x6c\x07\x37\xb8\xeb\x84\x45\x5b\x19\xa1\x1d\x6a\xc3\x35\x33\xdc\x22\x93\x35\x56\x4a\x36\xa2\xf5\x23\x75\x1d\x47\xa6\x35\x36\xca\x60\xcf\xbc\xac\xba\x7b\x00\xcb\x1d\x86\xdc\x2b\xd4\x42\xf3\x86\x89\x1e\xe0\x61\x9f\xad\x93\x43\x92\x15\x11\x79\x0f\x8b\x78\xb1\x5a\x4e\xe4\x03\x24\xcb\xcd\x76\xc2\x1f\x27\x9c\x25\x65\x44\x3e\xc1\xa6\xc8\xbf\x65\xeb\x67\xd9\xf9\xf3\x97\x70\x00\xe0\xbf\xb4\x32\x0e\x2f\x66\x9b\x78\xf1\xfd\xf2\xf8\x58\x0b\x23\xd9\x89\x23\xb9\x35\x9c\xd5\xbd\x90\x4f\x18\x36\x48\xce\x0f\xf1\x76\x75\xd8\xe6\xfb\x62\xb1\x7c\x4b\xdf\x0d\x77\x8f\x60\x95\x37\x15\xc7\x80\x5c\x39\xd0\xe9\x8f\x96\x0a\x69\x1d\xeb\xfb\x43\xab\xee\x6d\x17\x80\xf2\x4e\x7b\x77\xa8\x85\x89\xc8\xed\xe9\xc9\xf1\x93\xc6\xb0\xc6\xd0\x61\x23\x24\xeb\xc5\x6f\x5e\x96\xe5\x1d\x00\xaf\x3a\x85\x41\x38\x9e\xaf\x58\x78\x29\x85\x6c\xb1\x55\x78\xf4\xa2\xaf\x67\x6d\x00\x69\x5e\xe4\xf9\x2e\x22\xa9\xca\xa6\xa0\x44\x18\xda\x2a\x4c\xf3\x4d\xbc\x5b\x45\xd7\x43\xe1\xff\xb2\x4b\x3b\xb3\x6b\xa8\x90\xfc\x9d\x8f\xbe\x84\xe0\xf9\xbc\x8e\x7f\xa4\xfb\x38\x5d\x0e\xc3\x7c\x4b\xab\x5e\x00\xbc\xaa\x7f\x5e\xc5\x98\x18\x60\x40\xe6\x66\x46\xf2\xd2\xcc\x8c\xb3\xa4\x1c\xf1\x3f\xcd\x04\xf0\x27\x00\x00\xff\xff\xef\xcb\x5f\x0b\x3b\x02\x00\x00")

func binFinalizeBytes() ([]byte, error) {
	return bindataRead(
		_binFinalize,
		"bin/finalize",
	)
}

func binFinalize() (*asset, error) {
	bytes, err := binFinalizeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/finalize", size: 571, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binRelease = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8f\x31\x6b\xfb\x30\x10\x47\x77\x7f\x8a\xdf\x3f\x06\x67\x32\xe6\xdf\x31\x94\x2c\x85\xce\x1d\x3a\x06\xc2\x49\x77\xae\x44\x6d\x49\xe8\x4e\x49\xfc\xed\x8b\xd3\x8e\x6f\x78\xf0\x5e\xff\x6f\x6a\x5a\x27\x17\xd3\x24\xe9\x06\x47\x1a\xba\x1e\x3b\x56\x59\x84\x54\xf0\xea\x5a\x5c\x78\xe4\x58\xcf\x5d\x8f\xcf\x10\x15\xea\x6b\x2c\x86\x52\xf3\x2d\xb2\x28\x66\x11\x76\xe4\xbf\xb1\x8a\x11\x93\x11\x2c\xe3\x6d\xc9\x8d\xf1\x9e\x5b\xe2\xba\x21\x26\x8e\x9e\x2c\xa6\x2f\x84\x7c\x87\x05\x01\x95\x02\x0d\xb9\x2d\x0c\x27\x90\x87\xf8\x66\xc2\x5d\x27\x3e\x64\x8c\x82\xc3\x38\x8e\x97\xc4\x32\x53\x5b\xec\x5a\x6a\xf6\xa2\x7a\xb5\xad\x88\x9e\x2e\x09\xb8\x8b\x3b\xe1\x78\x1e\x5e\xf0\x34\x3e\x7e\x73\xb5\x88\x8f\xf3\x06\xc2\x9f\x09\x35\xaa\x06\x9f\xd7\x95\x12\x63\xce\x15\xb6\x4f\x3c\xb7\xca\x5e\x3d\x0c\x90\x47\x34\xfc\x3f\x1e\xba\x9f\x00\x00\x00\xff\xff\x03\x76\xa7\xd0\x10\x01\x00\x00")

func binReleaseBytes() ([]byte, error) {
	return bindataRead(
		_binRelease,
		"bin/release",
	)
}

func binRelease() (*asset, error) {
	bytes, err := binReleaseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/release", size: 272, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binSupply = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x5f\xab\xe2\x30\x10\xc5\xdf\xe7\x53\xcc\xd6\x2c\xe8\x42\x37\xec\x9f\xd7\x2e\xd4\xb6\xd4\xb2\xb2\x95\xaa\xd0\xb7\x5a\x9b\xd8\x06\x6b\x12\x92\x74\xd9\x45\xfc\xee\x17\xad\xd7\x8b\x97\x9b\xa7\x33\xe1\x37\x73\x66\xce\xe4\x13\xdd\x0b\x49\xf7\xb5\xed\x60\x82\x9b\x4e\x58\xb4\x8d\x11\xda\xa1\x36\xea\xaf\x60\xdc\x22\xe3\x9a\x4b\xc6\x65\x23\xb8\xc5\x83\x32\x58\x4b\xac\xb5\x06\x00\xcb\x1d\xfa\x7c\x50\xa8\x85\xe6\x87\x5a\xf4\x00\xf3\x6d\xb6\x8c\xab\x38\x2b\x02\xf2\x0d\xa2\x30\x5a\x24\x63\xf1\x1d\xe2\x64\xb5\x1e\xf5\x8f\x51\x67\x71\x19\x90\x9f\x00\xfc\x9f\x56\xc6\xe1\xad\x73\x15\x46\xbf\x6f\xd0\x8e\x09\x23\xeb\x13\x47\x32\x35\xbc\x66\xbd\x90\x47\xf4\x0f\x48\xce\xf3\x70\xbd\xa8\xd6\xf9\xb6\x88\x92\xcf\xf4\xcb\x65\xb6\x03\xab\x06\xd3\x70\xf4\xc8\xd3\x04\x3a\x9e\x61\xa9\x90\xd6\xd5\x7d\x5f\xb5\xea\xab\xed\x3c\x50\x83\xd3\x83\xab\x98\x30\x01\x99\x9e\x8e\x8e\x9f\x34\xfa\x0c\x7d\x87\x76\xd0\xba\xff\x5f\x96\xe5\x0c\x78\xd3\x29\xf4\xfc\xeb\xfb\x85\xc5\x20\xa5\x90\x2d\xb6\x0a\xf7\x83\xe8\xd9\x1d\xf4\x20\xcd\x8b\x3c\xdf\x04\x24\x55\xd9\xe8\x11\x0b\x43\x5b\x85\x69\xbe\x0a\x37\x8b\xe0\x79\x1f\x7c\x8f\xdd\x72\x7f\xcc\xf4\x15\x92\xb7\xd5\xe8\x68\x81\xe7\xf3\x32\xfc\x93\x6e\xc3\x34\xb9\x5c\xee\x7f\xb4\xe9\x05\x7c\x80\xde\xcf\xbf\x5a\x79\xe8\x91\x47\xf4\xd7\xe2\x35\xfa\x87\xce\xe2\xd2\x83\x97\x00\x00\x00\xff\xff\xf3\x21\x3a\xf6\xfb\x01\x00\x00")

func binSupplyBytes() ([]byte, error) {
	return bindataRead(
		_binSupply,
		"bin/supply",
	)
}

func binSupply() (*asset, error) {
	bytes, err := binSupplyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/supply", size: 507, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fixturesGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func fixturesGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_fixturesGitkeep,
		"fixtures/.gitkeep",
	)
}

func fixturesGitkeep() (*asset, error) {
	bytes, err := fixturesGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fixtures/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fixturesSimple_testSome_fileTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x48\xcd\xc9\xc9\x57\x08\xcf\x2f\xca\x49\xd1\xe3\x02\x04\x00\x00\xff\xff\x12\xc1\x8c\xfa\x0d\x00\x00\x00")

func fixturesSimple_testSome_fileTxtBytes() ([]byte, error) {
	return bindataRead(
		_fixturesSimple_testSome_fileTxt,
		"fixtures/simple_test/some_file.txt",
	)
}

func fixturesSimple_testSome_fileTxt() (*asset, error) {
	bytes, err := fixturesSimple_testSome_fileTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fixtures/simple_test/some_file.txt", size: 13, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcf\xcd\x4a\xc3\x40\x14\xc5\xf1\xfd\x3c\x45\x5e\x20\xe9\xbe\xbb\x80\xa1\x08\x5a\xa1\xa2\xdb\xe1\x76\xee\x49\xbd\x78\x73\x33\xcc\x87\x10\x4b\xdf\x5d\x1a\x21\xba\x3b\x3f\xfe\xab\xd3\xb6\xad\x53\xb2\x4b\xa5\x0b\xf6\xcd\xf5\xfa\xd4\x1f\x0f\x6f\xfd\x61\xb8\xdd\x1c\x63\xa4\xaa\xc5\x7f\x21\x65\x99\x2d\xef\x1d\x23\xc2\x18\x16\x16\xcf\x88\x09\x81\x8a\xcc\xe6\x99\x0a\xfe\x57\xb9\xcb\x89\x05\xad\x0c\x3f\x8a\xde\xdd\x34\x6d\x73\x1a\xfa\x87\xe7\xa1\x9b\x78\xd5\xfb\x70\x7a\x7d\x7c\x39\xae\xfb\x2c\xb6\x63\x14\x84\xb2\x31\xcc\x53\x14\xc5\xe6\x5c\x63\xd4\x65\xe3\x28\x46\x2a\xdf\x7f\x3d\x41\x41\xf9\xd7\x13\x99\x8c\xc8\xa5\x5b\x26\x75\x31\xc1\x47\x0a\x9f\xeb\xc3\x1c\x92\xc4\x92\x77\xe7\x2a\xca\x5d\xfe\x70\x3f\x01\x00\x00\xff\xff\xc6\x78\x7d\xc3\x01\x01\x00\x00")

func manifestYmlBytes() ([]byte, error) {
	return bindataRead(
		_manifestYml,
		"manifest.yml",
	)
}

func manifestYml() (*asset, error) {
	bytes, err := manifestYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifest.yml", size: 257, mode: os.FileMode(420), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBratsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x51\x4b\xc3\x30\x10\xc7\xdf\xf3\x29\xce\xae\x0f\x2a\xa4\x51\x7c\x1b\xec\xa1\xd3\x31\x45\xdc\x64\xab\x4f\x22\x23\x4d\x6f\x6b\x68\x9a\x84\xdc\x75\x0a\x63\xdf\x5d\x1c\x0c\x86\x2f\x07\x77\xbf\x83\xfb\xdd\x7f\x74\xa5\x06\x4a\xaa\xb6\x5e\xa1\xdf\x43\xad\xa9\x15\x23\xa8\x90\x18\xb8\xd5\x7f\x05\xc1\x84\x3e\x5a\x87\x0d\xd4\xd6\xeb\x64\x91\x20\x6c\x4f\xa0\x1e\xac\x6b\xa2\x36\x1d\x81\x4e\x08\xdf\x21\x75\xd6\xef\x40\x13\xe0\x4f\x44\xc3\xd8\x08\x41\xc8\x20\x71\x08\x10\x6d\xc4\xad\xb6\x4e\x08\xd3\x40\x96\x5f\x43\x63\x93\xd7\x3d\x42\x96\x1f\xa6\xe5\xfa\x79\xb3\x5e\x7e\xac\x1e\x67\x9f\x77\x5f\xc7\x0c\x6e\x54\x51\x64\x82\xc2\x90\x0c\x42\x81\x7e\x9f\x8c\x28\x14\x99\x64\x23\x93\xb2\x9e\x58\x3b\xb7\xe1\x10\x1c\x15\xd4\x0a\x31\x7f\x59\xbc\xce\x97\x9b\xc5\xf2\x69\xb6\x9e\xe4\x87\xcb\x76\x2c\x1f\x8e\x67\x5e\x56\xd5\xec\xed\xbd\xba\x58\x39\x4f\xc6\xf2\xfe\x78\x32\xa3\x64\xd4\xad\xaa\x93\x66\x12\x02\x4d\x1b\x20\x5b\x0d\x1e\xa6\xe7\x57\x61\x35\x78\xb6\x3d\x42\x69\x0c\x46\xd6\xde\xe0\x29\x2e\xca\xc4\xce\xfa\x6e\x17\x40\x26\x90\x72\xeb\x74\x87\x25\x33\xf6\x91\x69\x92\xff\xbb\x06\xd2\x87\x06\x09\xf2\x4b\x51\xf1\x1b\x00\x00\xff\xff\xfe\x9d\xe5\x60\x8c\x01\x00\x00")

func scriptsBratsShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBratsSh,
		"scripts/brats.sh",
	)
}

func scriptsBratsSh() (*asset, error) {
	bytes, err := scriptsBratsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/brats.sh", size: 396, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBuildSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xb1\x4a\xc5\x30\x14\x80\xe1\x3d\x4f\x71\x8c\x77\xd0\x21\x8d\x2f\x70\x87\x2a\xa5\x0e\x62\xc1\xd2\x49\x44\xd2\xe4\xb4\x1e\x38\x26\x21\x31\xb5\x5a\xfa\xee\xa2\xe8\xe0\x78\xd7\x7f\xf8\xf8\xcf\xcf\x74\xc9\x49\x8f\xe4\x35\xfa\x05\x46\x93\x5f\x44\xc6\x37\x50\xb8\x96\x00\x91\x22\x4e\x86\x58\x08\xeb\x40\x1e\x2e\xc0\x51\xf2\xe6\x15\x41\x1e\xb6\xeb\xba\xbf\x7d\xee\xbb\xe1\xe1\xa6\x79\xbc\x7a\xda\x25\x5c\xea\xaa\x92\x22\x87\x92\x2c\x42\x85\x7e\x49\x56\x88\xb6\xeb\xfa\x23\x93\x2f\x2b\xcc\x01\xc6\x42\xec\x40\xb1\x9b\xd8\xcc\xf9\x28\x55\x06\xf5\x2e\x41\x05\xf8\x1e\xc8\x25\x46\xfe\x80\x6d\xbb\xab\xef\xdb\xa1\x6e\x9b\x7d\xff\x6d\xda\x32\x9d\x44\x4d\xe4\x0d\xd3\x27\xfe\xc7\xfe\xea\x0f\xf7\x15\x00\x00\xff\xff\x09\x7c\x6d\x88\xfa\x00\x00\x00")

func scriptsBuildShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBuildSh,
		"scripts/build.sh",
	)
}

func scriptsBuildSh() (*asset, error) {
	bytes, err := scriptsBuildShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/build.sh", size: 250, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsInstall_goSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x51\x6b\xdb\x30\x18\x7c\xd7\xaf\xf8\xea\x19\xba\x05\x64\xc7\xaa\xed\xda\x19\x19\x94\xa6\x74\x85\xd0\x80\x4b\xb7\x87\x52\x86\x2c\xc9\xb6\xa8\x6c\x19\x49\x66\x49\xb7\xfe\xf7\x91\xa4\x69\xd2\x8c\x3d\x4c\x4f\x82\xef\xb8\xef\xee\xbe\xfb\x70\x12\x96\xb2\x0b\x4b\x6a\x1b\x64\x85\x03\x2c\x06\x0d\xbd\xec\x45\x45\xa5\x42\xe8\x7a\xf1\xe3\xdb\x55\x71\x77\xb3\xb8\x9d\x7a\x51\x10\x8d\x3d\x24\x96\xbd\x36\x0e\xae\xf5\x4d\x67\x1d\x55\x6a\x26\xcd\xd4\x0b\x5d\xdb\x87\xb5\xf6\xf7\x70\x0f\xb5\x4f\x5c\x1a\xc0\x3d\xf8\x87\x58\x84\x64\x05\x0f\x70\x02\xb8\x7a\x3f\x08\x6b\xbd\x51\x52\x6b\x78\xfc\x0c\xae\x11\xdd\x7a\xf9\xdd\xd7\x0b\x92\xa4\x53\x8f\xc4\x31\x19\x8f\xf3\x84\x54\x71\x14\x8b\x9c\x8a\x94\xa4\x39\x3f\x23\x49\x9a\x9f\x13\x42\xcf\x19\xcf\xb2\xf8\x2c\xa9\x12\x96\x10\x1e\x67\x19\xe3\x79\x92\xe7\x65\x56\x56\x34\x8a\xf3\xac\xf4\xd0\x7d\x31\x9f\x36\xce\xf5\x76\x12\x86\xe5\x20\x15\xef\x29\x7b\xb2\x01\x53\x7a\xe0\x95\x1e\x3a\x6e\x56\x81\x36\x75\xc8\x45\x2f\x3a\x2e\x3a\x26\x85\x5d\x6b\xaa\xb5\xff\x6b\x6f\xeb\x25\x50\xb2\x1b\x96\x98\xb6\x3c\x8d\xf1\x66\xb2\x95\x38\x19\x4f\xb2\x97\xc0\x51\x13\xd4\xcf\x08\x09\xd6\x68\xf0\xf0\xfa\x7d\x81\x99\xfe\xd9\x29\x4d\x39\xd4\x1a\xde\x71\x79\x88\x0d\x46\x01\xb6\x80\xe7\x80\xb1\x11\xce\xac\x20\x4a\x76\x5f\xcc\x85\xa2\x2b\x20\xe0\xdf\x17\x73\xc0\x1a\x5e\x53\x7e\xdb\x32\x5b\x7c\xbf\x9d\x2f\x2e\x66\xbb\x94\xfc\x8f\xb6\xa1\x76\x68\x01\x53\x92\xa4\x47\x70\xf8\x0d\x6c\x70\x80\x39\x9c\xc2\xe9\x3a\xfd\xe8\xd3\xe6\x14\x0f\xe0\x1f\xf1\xc0\xc9\x14\xfc\x37\x63\xf0\xb8\x3b\xc7\xd6\x14\x6c\xdf\x68\x74\x55\x14\x8b\x62\x34\x82\x57\x58\x2b\x6d\x4b\x1d\x6b\x26\x50\x6b\xf7\x37\xa7\x58\xf6\x82\x39\xc1\x0f\x98\xd7\x5d\x92\x0e\x22\x54\x49\x84\x1c\x35\xb0\x7c\xae\x8e\x45\xe3\xcb\xa3\xfa\x98\xf6\x38\x86\x4a\xfe\x47\xa5\xfe\xe1\xe1\x52\x0f\x8a\x43\xa7\x1d\xf0\xfd\xb1\x0e\xf5\xfd\x09\x00\x00\xff\xff\x75\x0b\x69\xd1\x27\x03\x00\x00")

func scriptsInstall_goShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsInstall_goSh,
		"scripts/install_go.sh",
	)
}

func scriptsInstall_goSh() (*asset, error) {
	bytes, err := scriptsInstall_goShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/install_go.sh", size: 807, mode: os.FileMode(493), modTime: time.Unix(1524515494, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsInstall_toolsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x4f\x4b\x03\x31\x10\x05\xf0\x7b\x3e\xc5\x74\x2d\xa5\x15\x36\xf1\xee\x49\x45\xf0\x26\x58\x3c\x95\x22\xf9\x33\xc9\x0e\x4d\x67\x96\x64\x53\x10\xf1\xbb\x4b\xc1\xf5\xa0\x1e\x7a\x99\xb9\x3c\x7e\xef\x5d\x2d\x8c\x23\x36\xce\xd6\x41\x55\x9c\xa0\xc7\x26\x30\xd2\x88\xd1\x52\x56\xca\x07\xe8\x96\x6b\x08\x54\xd8\x1e\x11\xba\xe5\xc7\xfd\xdd\xf6\xe9\x6d\xfb\xfc\xfa\xf2\xf0\xb8\xbb\xd9\x7f\x76\xb0\x31\x5a\x77\xaa\x4a\x2b\x1e\x41\x23\x9f\x8a\x57\x8a\x22\xec\x60\x01\x7d\x04\x7d\xe6\x13\xf1\x21\x09\xec\x6f\x61\x1a\x90\xd5\xda\x07\xa8\xc5\x9b\x6b\x73\x42\x0e\x52\x4c\xa2\x69\x68\x4e\x7b\x39\x1a\xe1\x4a\xdf\xf9\xf9\xc1\x6a\x05\x49\x80\xb8\x4e\x36\xe7\x8d\x8a\xf4\xdb\x77\x8d\x72\x18\xad\x3f\xf4\xe7\x63\x13\x96\x8b\xba\x7c\x96\x16\xa2\x34\x0e\xe5\xdd\x64\x72\x3f\x8c\x99\x99\xff\xe4\x3f\x6b\xbe\x02\x00\x00\xff\xff\x59\x76\x9d\xd6\x44\x01\x00\x00")

func scriptsInstall_toolsShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsInstall_toolsSh,
		"scripts/install_tools.sh",
	)
}

func scriptsInstall_toolsSh() (*asset, error) {
	bytes, err := scriptsInstall_toolsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/install_tools.sh", size: 324, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsIntegrationSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\xcf\x4f\x6b\x32\x31\x10\x06\xf0\x7b\x3e\xc5\xbc\xeb\x1e\xde\x16\x66\x23\x2d\xf4\x20\xec\x41\xad\xd8\x52\xaa\xc5\x5d\x4f\xa5\x48\xcc\x8e\x26\x18\x93\x25\x93\xb5\x07\xf1\xbb\x17\x5a\x84\xa5\x5f\xa0\xc7\xf9\x03\xcf\xef\x19\xfc\x93\x1d\x47\xb9\xb5\x5e\x92\x3f\xc1\x56\xb1\x11\x03\x58\x75\x9e\x21\x19\x02\xeb\x13\xed\xa3\x4a\x36\x78\x48\xc4\x89\x05\x53\x02\xa4\x2e\x40\x6b\x5b\xda\x29\xeb\x84\xd0\x0d\x64\xf9\x7f\x68\x6c\xf4\xea\x48\x90\xe5\xe7\xc9\xb8\x7a\xda\x54\xcb\xf5\x6a\x3a\x7b\x1f\x7e\x5c\x32\xb8\x91\x45\x91\x09\x0e\x5d\xd4\x04\x05\xf9\x53\xd4\xa2\x90\xac\xa3\x6d\x13\x4b\xeb\x39\x29\xe7\x36\x29\x04\xc7\x05\x1b\x21\xe6\xcf\x8b\x97\xf9\x72\xb3\x58\x3e\xce\xaa\x32\x3f\xf7\xc7\x11\xde\x5f\xae\xf7\x71\x5d\xcf\x5e\xdf\xea\xde\xcb\x75\x33\xc2\xbb\xcb\xb7\x8c\xa3\x96\xb7\xb2\xd7\x43\x08\xd2\x26\x40\xb6\xea\x3c\xac\xbd\x56\xda\x50\x03\x93\xce\xba\xa6\x55\xfa\x90\x89\xbd\xf5\x87\x7d\x00\x8c\x80\xb8\x73\xea\x40\xe3\x94\xe8\xd8\x26\x2e\xf3\x5f\x19\x80\x3e\x34\xc4\x90\xf7\x79\x80\xc8\x2e\x7c\x56\x2d\xe9\xda\x44\x62\x13\x5c\x53\x3e\x0c\x01\x11\x10\x7f\xd2\xca\x9d\x72\x4c\x7d\xc7\xf4\x0f\x14\xe2\x2b\x00\x00\xff\xff\x37\xfc\x7a\x68\xfb\x01\x00\x00")

func scriptsIntegrationShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsIntegrationSh,
		"scripts/integration.sh",
	)
}

func scriptsIntegrationSh() (*asset, error) {
	bytes, err := scriptsIntegrationShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/integration.sh", size: 507, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsUnitSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\xb1\x4a\x34\x31\x10\x00\xe0\x3e\x4f\x31\xff\xde\x15\xbf\xe2\x26\xbe\x80\x85\x8a\x60\xa7\xdc\x61\x25\x72\xcc\x66\xe7\x76\x87\x8d\x93\x30\x33\xb9\x46\x7c\x77\xc1\xca\xfe\xe3\xdb\xfd\x4b\xdd\x34\x4d\x2c\x89\xe4\x02\x13\xda\x1a\x76\x70\xe8\x62\xe0\x2b\x41\x17\x76\x70\x32\x37\x38\x57\x05\x5f\xd9\x60\xea\x5c\xe6\x86\x79\x0b\xc1\xc8\x61\xa4\x5e\xa1\x71\xa3\x33\x72\x09\x21\xcf\x30\xec\xff\xc3\xcc\x2a\xf8\x49\x30\xec\xbf\x1e\xee\x8f\xcf\xa7\xe3\xcb\xdb\xe1\xf1\xe9\xfd\xf6\xe3\x7b\x80\xab\x14\xe3\x10\xac\x76\xcd\x04\x91\xe4\xa2\x39\xc4\x64\x59\xb9\xb9\x25\x16\x73\x2c\xe5\xe4\xb5\x16\x8b\xb6\xfe\x96\xa6\x39\x5d\x27\x16\xa7\x45\xd1\xb9\x4a\x8a\x31\x2c\x2c\xdb\x52\x61\x54\x18\x6d\xe3\xf6\x8a\x79\xc3\x85\xee\x26\x45\xb7\x9b\x3f\x36\xfc\x04\x00\x00\xff\xff\x47\xb5\x22\x14\xe5\x00\x00\x00")

func scriptsUnitShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsUnitSh,
		"scripts/unit.sh",
	)
}

func scriptsUnitSh() (*asset, error) {
	bytes, err := scriptsUnitShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/unit.sh", size: 229, mode: os.FileMode(493), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageGopkgToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8e\x3f\x4f\x03\x31\x0c\x47\xf7\x7c\x8a\xe8\xba\x5f\x5a\xae\xff\x84\xd4\x99\x9d\xb5\xea\xe0\xd8\xbe\x34\x6a\x12\x1f\x4e\xae\xa2\x7c\x7a\x54\x31\x00\x12\x48\x48\xcc\x7e\xef\xf9\xb7\xb0\xcf\x3c\xb2\xda\x26\xf6\xdc\xda\x54\x1f\x9d\x0b\xb1\x9d\x67\xdf\xa3\x64\x17\x24\x41\x09\x8e\x78\x72\x3e\x89\x77\x19\x6a\x63\x75\x24\x58\xdd\x93\x4c\x97\xd0\x37\xc9\xa9\xcf\x64\x16\x76\x14\xb5\xc4\x0d\x62\x62\xb2\x9f\x47\x4b\x82\x73\xe6\xd2\xa0\x45\x29\xbd\x31\xca\x2f\x73\x54\x26\x7b\xb0\xc7\xee\xdb\x2f\x09\x89\x5d\x9d\x3d\x4a\xce\x50\xa8\x76\x27\x63\x8e\x47\x94\x52\x9b\x42\x2c\xed\x74\x32\x05\x32\xdb\x83\xfd\xea\x61\x92\x99\x46\x99\x0b\xe9\xcd\xa5\xe8\xfd\x1c\x13\x4d\x80\x97\xce\x78\x85\x82\xe7\x3b\xff\x31\xbc\xfb\x4b\x4f\x4a\x8d\x2e\xc4\x72\x09\xf2\xaf\x82\x64\x0e\xf0\x4b\x41\xae\xac\x1a\x89\x7f\xf6\x39\xc1\x1b\x68\x72\x41\x26\x95\xd7\x5b\x67\x94\xaf\xb1\x46\x29\x77\x0e\x00\x3d\xec\x87\x71\xd8\xc2\x66\x03\x38\xac\xd0\xfb\xdd\x0a\x97\xdb\xcd\x7a\x07\xc3\xc3\x1e\x97\x48\xab\xed\x72\xdd\x99\xf7\x00\x00\x00\xff\xff\xaa\x83\x5b\x97\xdb\x01\x00\x00")

func srcLanguageGopkgTomlBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageGopkgToml,
		"src/LANGUAGE/Gopkg.toml",
	)
}

func srcLanguageGopkgToml() (*asset, error) {
	bytes, err := srcLanguageGopkgTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/Gopkg.toml", size: 475, mode: os.FileMode(420), modTime: time.Unix(1524668589, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalize_finalizeGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x4d\x6f\xdb\x30\x0c\x3d\x9b\xbf\x82\xf0\xc9\x2e\x06\xf9\xde\x5b\xdb\x74\x45\x81\x6e\x19\xd6\x7d\x1c\x86\x1d\x14\x9b\x56\x84\xc9\x92\x40\x53\x40\xb3\x20\xff\x7d\xb0\x63\xbb\x49\x86\x01\x3b\x35\x87\x40\x96\x1f\xdf\xe3\x7b\x34\xa3\xae\x7f\x69\x43\xd8\x5a\xaf\x9d\xfd\x4d\x00\xb6\x8b\x81\x05\x0b\xc8\x72\x1b\x72\x80\x2c\x37\x56\xb6\x69\xa3\xea\xd0\x55\xb5\x0b\xa9\x69\x43\xf2\x0d\xef\x2a\x67\x37\x9b\x64\x5d\x33\x70\xe4\x50\x02\xc8\x2e\x12\x3e\x8b\x36\xc4\x68\xbd\x10\xb7\xba\x26\xdc\x43\x56\x55\x5f\xd6\xab\xf5\x35\x3e\x13\x61\x17\x98\x30\x44\xb1\xc1\xf7\xa8\x05\xb7\x22\xb1\xbf\xae\xaa\xff\x51\xa9\x36\x2e\x6c\xaa\x4e\xf7\x42\x5c\xf5\xa3\x90\x32\x01\xb2\xdb\x01\xb0\xb2\x5c\x94\xd8\x0b\x5b\x6f\x20\x5b\x51\xfc\xeb\xa2\x7f\x6c\x5e\x2e\x6e\xce\x30\x87\xc9\xc2\x07\xed\x6d\x4b\xbd\xbc\x81\x89\x6e\x92\x1a\x6d\xdc\x38\xb7\xa2\x48\xbe\x21\x5f\xef\xbe\x11\xf7\x03\x7d\x71\x6c\xae\xc4\x1f\x3f\x5f\x1b\x6f\x75\x72\x32\x21\x16\x40\x71\xaa\xa2\x5e\x99\xde\x21\x31\x07\x2e\x21\x7b\xf4\xbd\xe8\x53\x91\x7f\x97\xcc\xa4\x63\xe9\x52\xb9\xf6\x6e\x77\x2e\x7b\x89\x9c\x33\xbc\x0b\x5d\xa7\x7d\xf3\x06\x11\xd6\x47\xa5\x31\xc1\xfb\x17\xaa\x93\xd0\xd2\x9b\x0d\xea\x3b\x5b\x21\x3e\x3b\xce\x6f\x95\x52\x17\x36\xd7\x49\x62\x92\xa2\xb1\xbc\x80\x22\x07\xc3\xba\x5b\x9e\x35\x9b\xfe\xb4\x72\xd1\x9a\x42\x9e\x03\x78\x3f\x6d\xd4\xc8\x94\x6a\x19\xfc\x2f\x1f\xd6\x7c\x80\x6c\x5a\x17\x9c\xf6\x06\xb2\x39\xb8\x39\x41\xc8\x9e\x82\xc1\xf1\x77\x75\x36\xad\xa7\x60\x86\x82\x03\x40\x9b\x7c\x8d\x45\x8b\x57\x8b\x66\x89\x9f\x93\x2f\x26\x5b\x83\x72\x3b\xc0\xd5\x2d\x19\xeb\x9f\x85\x62\x91\xdf\x05\xdf\x5a\x93\x86\xd6\x71\xbf\x7f\xba\xf9\xf8\xf0\xf5\xe6\xe1\xfe\x70\xc8\x4b\x18\xe6\x84\xc7\x41\x7d\x62\x8a\x9a\x09\x75\x8c\xd8\x06\x46\xa7\x93\xaf\xb7\xb8\x25\xa6\xf1\x4f\x29\x05\x90\x31\x49\x62\x8f\xde\x3a\x38\xc0\x9f\x00\x00\x00\xff\xff\x7a\x03\xa8\x4e\x52\x04\x00\x00")

func srcLanguageFinalize_finalizeGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalize_finalizeGo,
		"src/LANGUAGE/finalize/_finalize.go",
	)
}

func srcLanguageFinalize_finalizeGo() (*asset, error) {
	bytes, err := srcLanguageFinalize_finalizeGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/_finalize.go", size: 1106, mode: os.FileMode(420), modTime: time.Unix(1524667819, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalize_finalize_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xc1\xca\x83\x30\x10\x04\xe0\x73\xf6\x29\x96\x9c\x92\x9f\x1f\x7d\x0b\xe9\x59\xbd\x97\x34\x5d\xd3\x45\xdd\x88\xd9\x5c\x5a\xfa\xee\x45\xb0\xb7\xde\x06\x66\xf8\x66\x0b\x71\x0e\x89\x70\x62\x09\x0b\x3f\xe9\xaa\x54\x14\x80\xd7\x2d\xef\x8a\x0e\x4c\x83\x36\xb1\x3e\xea\xad\x89\x79\x6d\xb3\x14\x6e\x13\xcb\x9c\xb2\xfd\xdd\xe5\x95\x52\xb0\x00\xc6\x1e\x12\x4b\xb2\xe0\x01\xa6\x2a\x11\x47\x2a\xda\x9d\x3f\x4e\xf1\xef\x1c\x34\xa3\xc7\x17\x98\x9e\x12\x17\xa5\xbd\x0b\xbc\x5c\x82\xdc\x17\xda\xdd\x91\x3d\x98\xbe\xca\xb0\x51\x2c\x4e\xff\xd1\x7e\x05\x1c\x2a\x2b\x59\x0f\x6f\xf8\x04\x00\x00\xff\xff\x84\x15\xaf\xba\xc5\x00\x00\x00")

func srcLanguageFinalize_finalize_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalize_finalize_suite_testGo,
		"src/LANGUAGE/finalize/_finalize_suite_test.go",
	)
}

func srcLanguageFinalize_finalize_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalize_finalize_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/_finalize_suite_test.go", size: 197, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalize_finalize_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbb\x8a\xf3\x30\x10\x85\x6b\xeb\x29\x06\x55\x12\xfc\xb1\xfa\x80\x8b\x1f\x92\x85\xad\xd2\xa4\x0f\xca\x68\x2c\x0b\xdb\x1a\xaf\x2e\x7b\x25\xef\xbe\x38\xeb\x2d\x02\x5b\x0e\xdf\xe1\x3b\xc3\x59\x2c\x8e\xd6\x13\xf4\x21\xda\x29\x7c\xd2\xa5\x50\x2e\x42\x18\xe3\x79\xef\x29\x52\xb2\x85\x60\x66\x1c\x3d\x45\xd8\x65\xae\x09\xa9\xfb\x0d\xb7\x9e\x61\xb7\x73\x94\x4b\x88\xb6\x04\x8e\xdd\x9a\xcc\x77\xc7\x0f\xdb\xf4\xdd\xa3\x3e\xcc\x0b\xa7\x02\x4a\x34\x2d\x48\x1f\xca\x50\xaf\x2d\xf2\x6c\x38\xe6\x60\x7c\x88\xa3\x67\xf9\x37\xe3\x99\xbc\x95\x42\x0b\xf1\x6a\x13\x5c\xa0\x83\x03\x65\x4c\xe1\x4a\x4a\x3e\x6d\x1d\xf2\x1f\xf4\x35\xa2\xd2\xf0\x25\x9a\xe7\xa2\x64\xae\x88\x44\x2e\x3f\x80\xe6\xf8\xbe\x10\x16\xd5\xdb\x29\x93\x6e\xcf\xac\x8e\x2f\xd5\x4e\xdb\xad\x45\x73\xd3\xa2\x31\x06\xce\xa7\xc3\x69\x0f\xff\x9d\x83\xf5\xf5\x0c\x03\x25\x82\xc2\x80\x03\xe1\x08\xc8\xb1\x0f\xbe\x26\x02\x47\x0b\x45\x47\x11\x3f\xee\x25\xeb\x1a\x19\xde\x38\x8d\xe2\xa6\xc5\x77\x00\x00\x00\xff\xff\x7d\xd5\xa2\x39\x66\x01\x00\x00")

func srcLanguageFinalize_finalize_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalize_finalize_testGo,
		"src/LANGUAGE/finalize/_finalize_test.go",
	)
}

func srcLanguageFinalize_finalize_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalize_finalize_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/_finalize_test.go", size: 358, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeCli_cli_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x6a\xc3\x30\x10\x80\xe1\x59\xf7\x14\x87\x26\xa9\x14\xfb\x21\x0c\xa6\xb3\xed\xbd\xa8\xea\x55\x3d\x2c\x9d\x8c\x75\x5a\x12\xf2\xee\xc1\x90\x31\xdb\x0f\x1f\xfc\x47\x88\x7b\x48\x84\x25\xb0\x7c\x2b\x35\x05\xe0\x72\xd4\x53\xd1\x81\x19\xd0\x26\xd6\xff\xfe\x33\xc4\x5a\xc6\x2a\x8d\xc7\xc4\xb2\xa7\x6a\xdf\x5b\x2d\x94\x82\x05\x30\xf6\x3a\xb1\x24\x0b\x1e\xe0\xaf\x4b\xc4\x8d\x9a\x4e\x99\x9d\xe2\xc7\xcb\x86\xcd\xe3\x1d\xcc\x42\x89\x9b\xd2\x39\x07\xce\x5f\x41\x7e\x33\x9d\xee\x6a\x0f\x66\xe9\xb2\x1e\x14\x9b\xd3\x4f\xb4\x33\x4b\xc8\x7c\x23\x9c\x32\xe3\xda\x59\xc9\x7a\x78\xc0\x33\x00\x00\xff\xff\x09\x2d\x2d\xe4\xc0\x00\x00\x00")

func srcLanguageFinalizeCli_cli_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeCli_cli_suite_testGo,
		"src/LANGUAGE/finalize/cli/_cli_suite_test.go",
	)
}

func srcLanguageFinalizeCli_cli_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeCli_cli_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/cli/_cli_suite_test.go", size: 192, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeCli_mainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xd1\x6b\xdb\x30\x10\xc6\x9f\xa5\xbf\xe2\x66\xd8\xb0\xa1\xa8\xcb\x36\x18\xf3\xc8\x43\xd6\x66\x79\x49\x33\x68\xe8\xd3\x18\x43\xb1\xcf\x8e\xa8\x2c\x19\x49\x4e\x96\x85\xfc\xef\x43\x8e\xe2\xc4\x6b\xd7\x04\xf6\x12\x82\x74\x77\xdf\xef\xbb\xcf\xaa\x79\xf6\xc8\x4b\x84\x8a\x0b\x45\xa9\xa8\x6a\x6d\x1c\xc4\x94\x44\xdb\xed\x74\x34\x9b\x3c\x8c\x26\xe3\xdd\xee\xba\x10\x8a\x4b\xf1\x1b\x23\x4a\x7e\x42\xff\x6a\xa9\xf5\xa3\x8d\x28\x89\x74\xfb\xeb\x44\x85\x11\xa5\x24\x2a\x85\x5b\x36\x0b\x96\xe9\xea\x3a\x93\xba\xc9\x0b\xdd\xa8\xdc\x6c\xae\xa5\x58\x2c\x1a\x21\x73\x2f\x1c\xd1\x84\xd2\xa2\x51\x59\x2b\x1f\x27\xb0\xa5\x44\xea\xb2\x44\x03\xe9\x10\x4e\x2b\xd9\x0c\xd7\xd3\xf6\x26\xd6\x96\xcd\x5d\xae\x1b\x97\x50\x4a\xba\x82\x5b\x61\xae\x00\xcd\xd3\xc6\x09\xba\x2f\x27\x45\x71\x42\x89\x28\xda\xca\x57\x43\x50\x42\x7a\xcd\x20\xca\xc6\xc6\x68\x13\x47\x0f\x8a\x2f\x24\x82\xd3\x90\xa3\x43\x53\x09\x85\xd0\x0d\x84\x5c\x18\xcc\x9c\x36\x9b\x14\x5e\xdb\xa8\x15\x0d\x8d\x49\x42\x09\xd1\x96\x8d\x7f\x09\x17\x7f\x4a\x28\xd9\x51\x4a\x2a\xae\x44\x81\xd6\x3d\x4f\x37\xc3\xf5\x5d\x28\x88\xfb\x5e\xf6\x48\x57\xe0\x17\xca\x66\x7a\xdd\x4e\xbf\x9c\x5c\x6a\x9e\x9f\x40\x1f\x28\x5e\x66\x1e\xbc\x0d\xd0\xd6\xf1\x7f\x84\x30\x6f\x6f\x7c\x08\x23\x53\xda\xef\x83\xf4\xc7\x11\xf5\x20\xe2\x83\x09\xa4\xc3\xee\x90\x8d\xea\x5a\x6e\xbe\xad\xd0\x18\x91\x63\xbc\x57\x60\xb7\x58\xdb\x36\x95\xe4\xf3\xa5\xce\xb8\x9f\x03\x3a\x0c\x62\x9b\x4a\x42\x21\x24\xda\xa3\xb5\x9e\xa5\x8f\xc1\x52\x00\x4a\x87\x10\xa4\xe7\xe8\xbc\x19\xa1\xca\xb1\x5a\x09\xa3\x55\x85\xca\xc5\x97\x73\x58\x74\x4d\x0d\x78\xec\x85\x15\x37\xc2\xdf\xda\x33\x5b\x1e\x04\xa4\xc2\xd3\x1c\x9e\x16\xfb\x1a\xfe\x18\x2f\x7a\xd7\xe5\xd5\x7d\x3f\x94\x90\xfd\xf2\x53\x80\xe0\xc1\x9f\xdd\xe8\xaa\xe2\x2a\x4f\x01\xde\xf4\xb2\x0a\xe7\xdb\x9d\x2f\x9a\xea\xd2\x77\x01\x1c\xb2\xfa\x7b\x27\x05\xbb\x6f\xd4\x33\xe6\x3b\xe6\x77\x4f\xd6\xd8\x53\xbb\x6f\xd4\xa8\x70\x68\x6e\x74\x55\x0b\x79\x88\xf7\xdc\x32\xdb\x16\x08\x3d\x67\x96\xf6\xfe\x85\x1c\xa7\xbc\x51\xd9\xf2\x7f\x62\x94\xed\x84\xd3\x34\xcf\xe0\x7c\xe8\xbd\x14\x16\xbe\x24\x6f\x45\xa2\xc3\x38\xa1\x3b\xfa\x27\x00\x00\xff\xff\xca\x83\xa0\x7f\x5b\x05\x00\x00")

func srcLanguageFinalizeCli_mainGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeCli_mainGo,
		"src/LANGUAGE/finalize/cli/_main.go",
	)
}

func srcLanguageFinalizeCli_mainGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeCli_mainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/cli/_main.go", size: 1371, mode: os.FileMode(420), modTime: time.Unix(1524518300, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageHooks_hooks_debugGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\x41\x6b\xfa\x40\x10\x47\xcf\xd9\x4f\x31\xff\x39\xed\xfe\x0f\x11\x73\x14\x7a\xd0\x5a\x14\x7a\x50\x90\x9e\x4b\x4c\x76\x75\x71\xb3\x13\x26\xb3\x05\x91\x7c\xf7\x92\x2a\xc5\x20\x94\x1e\x7a\xda\xcb\x9b\xf7\x7e\xdb\x96\xd5\xa9\x3c\x58\x38\x12\x9d\x3a\xa5\x7c\xd3\x12\x0b\x68\x95\xa1\x6b\x04\x55\x86\xd4\xa1\x52\x19\x1e\xbc\x1c\xd3\x3e\xaf\xa8\x99\x54\x81\x52\xed\x28\xc5\x9a\xcf\x93\xe0\xf7\xfb\xe4\x43\x3d\x78\x50\x19\xa5\xe4\xdc\xde\x6c\x53\xe8\x84\x53\x25\x70\x51\xd9\x3d\x96\x2f\xad\x2b\x53\x90\x35\xd1\x49\xf5\xf7\x17\xc5\x2f\x2f\x5c\x8a\x15\xf8\xe8\x45\x9b\x01\xf5\x0e\xa8\xcb\x57\x56\x6c\xfc\xd0\xb8\xd8\xbe\x2f\x5f\x16\x6f\x2b\x34\xf0\xef\x09\x10\x07\x62\x6c\x9b\xd7\xf5\x60\xd2\xd7\x95\x97\xde\xfc\x08\x14\x5f\x40\xff\xdd\xd5\xc7\xdb\xf7\x0c\x2c\xac\x23\xb6\xcf\xd4\xb4\x3e\x58\x5d\x5d\x5f\x86\xff\x23\xd9\x4e\xca\x83\x65\x03\x96\x99\x78\x18\xe3\x1a\xc9\xb7\xec\xa3\x84\xa8\x71\xbd\xd9\xbc\xee\x60\x3a\x1b\xbb\xd0\xa8\x8c\xad\x24\x8e\x10\x7d\x78\x48\x17\x06\xe6\x4e\x2c\xff\x41\xb9\x98\x8d\x54\x0f\xe1\xcf\x00\x00\x00\xff\xff\x0c\x89\x96\xfa\x20\x02\x00\x00")

func srcLanguageHooks_hooks_debugGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageHooks_hooks_debugGo,
		"src/LANGUAGE/hooks/_hooks_debug.go",
	)
}

func srcLanguageHooks_hooks_debugGo() (*asset, error) {
	bytes, err := srcLanguageHooks_hooks_debugGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/hooks/_hooks_debug.go", size: 544, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageHooks_hooks_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xb1\x8e\x83\x30\x10\x04\xd0\xda\xfb\x15\x2b\x57\xf6\xe9\x04\x7f\x71\xa2\x06\xfa\x93\xcf\xb7\x59\x56\x80\x17\xe1\x75\x15\xe5\xdf\x23\xa2\x94\xe9\x46\x7a\x9a\x99\x23\xe5\x35\x31\xe1\xa2\xba\xd6\x5f\xa3\x6a\x00\xb2\x1f\x7a\x1a\x06\x70\x1d\x7a\x16\x5b\xda\x5f\x97\x75\xef\xb5\x54\xe9\x59\xca\xca\xea\x3f\x9b\xee\xc4\xc9\x03\x38\x7f\x2d\x49\x61\x0f\x11\xe0\xd6\x4a\xc6\x99\xaa\x0d\xd7\x49\x30\xfc\x7a\x6b\x37\x47\xbc\x83\x1b\x89\xa5\x1a\x9d\x3f\x49\xb6\x21\x95\xff\x8d\xce\x70\xe5\x08\x6e\x6c\x65\x3a\x28\xd7\x60\xdf\xe8\x5f\x75\x9c\x9a\x18\xf9\x08\x0f\x78\x06\x00\x00\xff\xff\x27\x86\xa8\x48\xbc\x00\x00\x00")

func srcLanguageHooks_hooks_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageHooks_hooks_suite_testGo,
		"src/LANGUAGE/hooks/_hooks_suite_test.go",
	)
}

func srcLanguageHooks_hooks_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageHooks_hooks_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/hooks/_hooks_suite_test.go", size: 188, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageIntegration_integration_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x6d\x6f\xdb\x38\x12\xfe\x2c\xfd\x8a\x39\x02\x2d\xa8\xd6\x90\x73\xbd\x3b\x5c\xef\x80\x14\xc8\x5b\x9b\x2c\x36\xae\x61\x3b\xdd\x5d\x14\x45\x41\x4b\x23\x99\x1b\x89\x54\xf9\x92\xc6\x1b\xf8\xbf\x2f\x48\x51\xb6\x6c\x27\x69\xda\xfd\xb2\x1f\x62\xd3\x7c\x79\x38\xcf\x33\x33\x9c\x49\xc3\xb2\x6b\x56\x22\x70\x61\xb0\x54\xcc\x70\x29\x3e\x1b\xd4\x26\x8e\x79\xdd\x48\x65\x80\xc6\x11\x41\x91\xc9\x9c\x8b\x72\xf8\xbb\x96\x82\xc4\x11\x29\x2a\x56\xfa\xef\xda\xb8\x2f\x81\x66\x68\x55\xe5\x86\x52\xb7\x9f\x43\xbc\xc5\xcc\x0d\x1b\x66\x16\xc3\x82\x57\xe8\x06\x6e\xc2\xf0\x1a\x49\x1c\x47\xa4\xe4\x66\x61\xe7\x69\x26\xeb\xe1\xbc\x62\xa2\x1c\x6a\xac\x6f\x50\x91\xed\xa5\xac\x92\x36\x2f\xa4\x15\xb9\x5a\x0e\x2b\x3e\x9f\x5b\x5e\xe5\xce\xea\x61\x66\x4d\xc5\xb4\x76\x58\x29\xf4\x8f\x48\xa1\xf9\xb0\xe4\xe2\xba\x94\xe4\xfe\x35\x59\x63\xc9\xbc\x11\x8e\x2b\x17\x25\x89\x93\x38\xbe\x61\x0a\xe6\xcd\x29\x57\xa0\x8d\xe2\xa2\x6c\x27\xba\xfb\x3e\xa0\xd2\x5c\x8a\xfe\x5a\x10\x2f\x3f\xee\xf6\x40\xb0\x29\x0d\x9b\x7b\x4b\xe3\x76\x6f\x1c\x17\x56\x64\xc0\x05\x37\x34\x81\xbb\x38\x72\x52\xa6\x53\x8f\xf9\x81\x29\xfa\x7c\xf7\xbe\x01\x90\x9b\x76\x44\x06\x40\xc8\xe6\x27\x18\x09\x56\x23\x50\x7f\x42\x03\x2f\x00\xeb\xc6\x2c\x13\x92\x04\xd4\x63\x29\x2b\x8f\xd9\x59\x75\xc2\xb2\x05\xe6\x03\x20\x99\x1f\x90\x01\x18\x65\x71\xfd\x7b\xc3\x75\x0d\xd1\x33\xac\x03\x39\xc5\x82\xd9\xca\x5c\x62\x2d\xd5\x72\x00\xa4\xf6\x03\x67\xd8\x3f\x5f\xbd\xbe\x74\xdf\x79\xbb\x03\xda\x15\x28\xa4\x82\xc6\x6a\x77\x01\x6b\x1a\xfd\x04\xec\x53\xae\xaf\x1d\x0e\xd7\xd7\x0e\xef\x5f\xaf\xff\xbd\x85\xeb\xe6\x1f\x44\x1d\x33\xa5\x91\x26\xf1\xaa\xf5\xe7\x67\x38\x84\xe9\x52\x64\x0b\x25\x05\xff\x03\xf3\x63\x2c\xa4\xc2\xa9\xe5\x06\xa9\xf3\x04\x4d\xe0\xe3\xa7\xf9\xd2\xa0\xf3\xc5\x70\x08\x13\x2b\x40\x8a\x0c\xe3\x88\x17\xfb\xbe\x3f\x3c\x04\x42\xdc\xce\x68\xcf\xf5\x03\x40\xa5\xe0\xff\x87\xeb\x10\x08\x0e\xbf\x12\xfc\x8b\xc5\x6a\xb9\x1f\x11\x34\x89\xa3\xe8\xec\xb6\xc1\xcc\x50\x54\x2a\x49\x47\xd2\xcc\x24\x3d\x67\x37\xf8\x3e\xcb\xac\x52\x98\xd3\x24\x89\xe3\x28\xca\x99\x61\x6b\x7c\x97\x83\xe9\x25\x53\x7a\xc1\x2a\xba\x67\xc6\xd3\x30\xa3\x48\xa1\xb1\x4a\x80\x43\x8e\xa3\x55\x1c\x77\x13\xad\x18\x77\xab\x78\x35\x00\xaf\x8f\xdb\x11\x66\x93\x2d\x8d\x80\x55\x15\x08\x99\xa3\x8e\x23\xa7\xb4\x33\x0f\x95\x92\xca\x4b\x57\xa1\xf0\x47\x13\x78\x03\x07\x5e\x31\xb7\x1e\xac\xbf\x12\x75\xb0\xbf\x65\xf6\xfc\x87\x69\xec\x7b\x68\x3f\x29\xbb\x64\x6c\x79\xfa\x04\x6f\xc5\xdc\xf8\xea\x2d\x17\xf9\x44\x4a\xe3\x5c\xf2\x14\x8f\x84\x3d\xeb\xbc\x92\xcd\xf2\xa4\x38\x97\x35\xd2\x24\x49\x67\x92\x4e\x6d\x96\x61\xb0\xb1\xdb\x34\x45\xcc\x27\x4c\xe4\xb2\xa6\xbd\xd9\x10\xf1\x53\x93\x4b\xeb\x3e\x5b\xbb\xde\xf9\xc7\xeb\x17\xc5\x0d\xaa\x78\x95\xdc\x1f\xca\x47\x85\x41\xb5\x15\xc9\x0f\xb8\xa7\x73\x65\xb2\x17\xe3\x3b\x3c\x26\x58\xcb\x1b\x1c\xef\x0a\x78\x4f\x94\xed\xb1\xdc\x41\x3a\xc5\x0a\x0d\xbe\x57\xcd\x82\x09\xcc\x27\xd2\x1a\xd4\xfb\xda\x38\x66\xfe\x39\x9c\xa1\x36\x17\x9b\x0a\x44\x0d\xbc\x08\x0f\x73\x3a\xf3\x56\x4f\xb0\xe4\xda\xa0\x7a\xcb\x78\x75\xce\x44\x5e\xa1\xa2\x6e\x9c\xc4\xd1\xc4\x8a\x69\x83\x99\xa6\x66\x00\xa4\x07\x02\x5e\x1a\xe2\x5f\x02\x7f\xc9\xd8\xea\xc5\x51\xd3\x1c\x89\xfc\x44\x8a\x82\xab\x9a\xb2\xa6\x81\x17\x9d\xc9\x47\x4d\xe3\xaf\x0a\x4c\x58\xd3\xa4\xee\xc4\x3d\x1e\x3d\xbb\x41\x61\x2c\xab\xaa\x65\x27\x3c\xfd\xf8\xa9\x2d\x0b\x83\x36\x05\x12\xb8\x83\x90\x50\x0e\xe7\x42\x68\xc3\x44\x86\x53\xc3\xbc\x0e\xb0\x1a\xc0\xab\x83\x17\xae\x12\xa6\x53\xcc\xa4\xc8\x93\x74\xba\x90\xb6\xca\xe9\xd9\x17\xcb\xaa\x35\xdc\x1d\x99\x5c\x8d\x46\x17\xa3\x77\x64\xd5\x13\xd9\x41\x06\x0a\x1b\x1f\xed\x66\xc2\xbe\xd8\x41\x86\x09\x6a\xc3\x94\xf9\x26\xf9\x6e\xdf\xdf\x87\x7f\xc7\xe0\xa8\xe1\xef\x14\x32\x83\x6a\xb6\x60\x82\xde\x6c\x15\xe6\x04\xe6\x52\x56\x8e\x0b\x6b\x78\xd0\x62\xba\xb1\xad\xff\x42\x1f\xad\x37\xec\xe6\xfd\x4c\xd2\x63\x1c\xf1\xca\xd3\xdd\xe0\xac\x11\xda\x4e\x25\xbd\x64\xd7\x48\x77\xaf\x79\x0c\x4a\xe1\x97\x07\xa0\x7c\xd9\x9a\x30\x51\x22\x25\x6f\x0e\x81\xc0\x4b\x08\xbc\x1e\xc7\xf3\x1a\x6f\x60\x7b\xd6\x6c\xe9\x75\xce\xf4\x8c\xe9\x6b\xba\x51\x27\x1c\xdd\xd1\x92\xbc\x4a\xff\xfb\x9f\xf4\xc0\x67\x4d\xef\xec\xa5\xad\x0c\xef\x15\xae\x6f\xa3\xfc\xef\x20\xa0\x04\x18\xad\x51\x99\x2b\x8d\x7a\xac\xe4\xed\xf2\xd4\x3a\xa5\xa6\x86\x95\x5c\x94\x17\xc5\x58\xa1\x46\x61\x68\xc1\x6f\x8d\x55\x38\x62\x35\xae\xbd\x79\x17\x47\x27\x52\x18\xbc\x35\x94\x7c\xe5\x66\x01\x4c\x80\x15\x7b\x0d\x4b\xff\x89\x8b\xda\x22\x7f\xc6\xb2\x45\xef\x65\x8c\x5c\x59\xda\xee\x84\xda\xe9\x68\x7a\xcd\x1b\x4a\x26\x56\x08\x2e\x4a\x08\xd0\xee\xfd\xf1\x5d\x45\x14\xad\xe2\x28\x5a\xf9\x42\x7c\x61\x28\xb1\x1a\x35\x30\x68\x1c\x0f\xc8\x3d\x11\xd0\x2d\x13\xd7\x83\x35\x2d\x97\x6d\x83\x22\xbf\x7b\x2f\x00\x47\xf8\xd5\xcb\xe1\x3b\x81\x87\xbd\x1c\x45\x39\x16\xa8\xda\x2b\xd3\x93\x4a\xfa\x06\xc7\xcd\xcf\x9b\xb7\xbc\x42\x07\xd9\x75\xd8\xe9\x4f\x92\x0b\x1a\x8a\xdc\xee\x9b\xf0\x92\x98\xba\x69\x39\x65\x75\xee\x8e\xb9\x2e\x3d\x3d\x91\x75\xcd\x44\x4e\x49\xd6\x90\xc1\x3d\xf5\xd3\xdd\x31\x80\xf6\x2e\x7f\x38\x14\xcf\x3a\x4f\x27\x56\x3c\xd1\x78\xd9\x95\x17\xda\x01\xb9\x35\xa3\x58\x51\xf0\x6c\x4f\x19\xf7\x8e\x2b\x81\x66\xd6\xae\x53\xef\xa7\x96\x95\x1f\x6e\xd3\x25\x21\x70\xb4\x53\x7d\x13\x43\xc9\x20\x1c\xf3\x04\xfc\x78\xf3\xb0\x9c\xcf\x66\xe3\xcf\xe3\xc9\xfb\x5f\x7f\x3b\x74\xc9\xd6\x6a\x7b\x35\xf9\x79\x00\x7e\x69\x7a\xdf\xda\xca\x83\x3c\xca\xb7\x25\xac\xcd\x95\xaa\xd6\xa4\xac\xaa\x42\x5b\xba\x46\xfa\x26\xc6\x4e\x3d\x6d\xbb\xc8\x53\x5f\x13\xdb\x12\xe9\xe9\xac\xe5\x2b\x6a\x93\x4e\x1b\xc5\x85\x29\x28\x79\xa6\xd3\x67\x4e\x8a\x60\x47\x7a\x2e\xb5\x11\xcc\x35\x27\x9b\xb9\xb1\xf4\x4f\x7b\x4b\x68\xd7\x65\xab\x24\x76\x7f\xdb\xc9\x3b\x92\xbb\x4e\x79\x20\x5d\x5d\x92\x2c\x98\x06\x21\x21\xd8\xb7\x9d\x0c\xbc\x80\x7f\xdc\x97\x87\xdb\x69\xb8\xce\xf1\x4d\x22\xba\xf6\xed\xc7\x43\xfe\xaf\x44\x7c\x17\x9d\xbd\x88\x7f\x38\xe0\x1f\x89\xf7\xef\x09\xf7\x4d\xb4\x7f\x47\xb0\xf7\x62\x7d\x1d\xea\x3e\x6a\x1f\x37\x39\xac\x04\xf3\xc2\xea\x99\xfb\x6f\xd2\xaf\xfb\x58\xf8\x33\x00\x00\xff\xff\x32\x15\x2e\xfe\x2a\x10\x00\x00")

func srcLanguageIntegration_integration_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageIntegration_integration_suite_testGo,
		"src/LANGUAGE/integration/_integration_suite_test.go",
	)
}

func srcLanguageIntegration_integration_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageIntegration_integration_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/integration/_integration_suite_test.go", size: 4138, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageIntegration_simple_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xcd\x6e\x9c\x30\x10\x3e\xe3\xa7\x98\xfa\x64\xaa\x08\x9e\x60\x0f\x24\xbb\x5a\x6d\x55\x25\x91\x76\x7b\xaa\xaa\x95\x81\x01\xa6\x01\xdb\xb2\xc7\xcd\xa2\x15\xef\x5e\x99\x64\x9b\x56\xea\x0d\xc6\xdf\x37\xf3\xfd\x38\xdd\xbc\xe8\x1e\x81\x0c\x63\xef\x35\x93\x35\x67\xc6\xc0\x42\xd0\xe4\xac\x67\x50\x22\x93\x4e\xf3\x50\x76\x34\x62\xfa\x90\x42\x64\xb2\x27\x1e\x62\x5d\x34\x76\x2a\x9b\xd1\xc6\xb6\xb3\xd1\xb4\x7e\x2e\x47\xaa\xeb\x48\x63\x9b\xd6\x96\x4d\xe4\x51\x87\x90\x08\x05\xfc\x4d\xb1\x26\x50\xd9\x93\x79\xe9\xad\xfc\xff\x9b\x9d\xb0\xd7\x52\xe4\x42\xfc\xd2\x1e\xce\xb0\x81\x2d\x86\xc6\x53\x8d\x4a\x1e\x69\x72\x23\xc2\xe1\x43\x31\x9c\x30\xb0\xbc\x83\x2e\x9a\x46\xe5\x70\x15\x59\x62\x69\xe7\xe0\xf3\xbb\x86\xa2\x72\x4e\x64\x55\xc7\xe8\x77\xba\x19\xd4\x07\x32\xa3\x6e\x45\x7e\xda\x80\xa1\x71\x9d\x64\xda\xb9\x62\x8b\x81\xbd\x9d\x55\x2e\xb2\x6c\x11\xeb\x0c\x56\x88\xc8\x96\x5c\x88\xac\x2c\xe1\xf4\xb4\x7d\x82\xd3\x40\x01\x52\x62\x40\x01\x1c\x9a\x96\x4c\x0f\x35\x36\x3a\x06\x04\x62\x68\xa2\xf7\x68\x78\x9c\xa1\xd3\x34\x86\x02\x0e\x2b\xf2\x67\x0c\x0c\xda\x00\x5e\x74\x72\x23\xb2\xe7\x03\x2b\x99\x8e\xb4\xe8\x46\x3b\x87\x7f\xec\xbc\x5f\xbf\x99\x79\xc4\x57\x75\xab\xa3\xf8\x62\xc9\xa8\xda\x6d\xc9\xdf\x81\xec\xe8\xc2\xd1\x63\x62\xcb\xb0\xe6\xb4\xb6\x29\xf3\xfc\x6d\x49\x71\x7f\x6b\x27\xc0\x06\xbe\xff\x08\xec\xc9\xf4\x57\x79\xbd\x7e\xad\x1e\xf7\xdf\xaa\xfd\x6e\x59\xce\x7f\x1a\x94\xc9\xf8\x73\x0c\x43\xe5\x5c\x65\xda\x07\x6b\x3a\xf2\x93\xd2\xce\xa5\x75\xbb\x8b\xc3\x86\xd3\x5f\xb1\x47\xbe\xb7\xed\xac\x64\x29\xf3\xbc\x38\x59\xf5\x60\x0d\x6b\x32\xc7\x58\xbf\x5d\x50\xf2\x68\x27\xe4\x21\x85\x63\x0d\xcc\x36\x7a\x78\xc5\x3a\x10\xe3\xaa\x6d\xc9\xc5\x92\x8b\xdf\x01\x00\x00\xff\xff\x84\x5f\x6d\x48\x8d\x02\x00\x00")

func srcLanguageIntegration_simple_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageIntegration_simple_testGo,
		"src/LANGUAGE/integration/_simple_test.go",
	)
}

func srcLanguageIntegration_simple_testGo() (*asset, error) {
	bytes, err := srcLanguageIntegration_simple_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/integration/_simple_test.go", size: 653, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupply_supplyGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x4d\x8b\xdb\x30\x10\x3d\x7b\x7e\xc5\xe0\x93\xbd\x14\xf9\xbe\xb7\xdd\x66\x59\x16\xd2\x06\x9a\x7e\x1c\x4a\x0f\x8a\x3d\x51\x44\x6d\x49\x8c\x46\xb0\x26\xe4\xbf\x17\x3b\xb6\x37\x49\x29\xf4\xb4\x39\x29\xf2\x9b\xf7\xe6\xbd\xd1\x04\x5d\xff\xd6\x86\x30\xa6\x10\xda\x1e\xc0\x76\xc1\xb3\x60\x01\x59\x6e\x7d\x0e\x90\xe5\xc6\xca\x21\xed\x54\xed\xbb\xaa\x6e\x7d\x6a\xf6\x3e\xb9\x86\xfb\xaa\xb5\xbb\x5d\xb2\x6d\x33\x30\xe4\x50\x02\x48\x1f\x08\xb7\xa2\x0d\x31\x5a\x27\xc4\x7b\x5d\x13\x1e\x21\xab\xaa\xaf\x9b\xd5\xe6\x1e\xb7\x44\xd8\x79\x26\xf4\x41\xac\x77\x11\xb5\xe0\x41\x24\xc4\xfb\xaa\xfa\x1f\x95\x6a\xd7\xfa\x5d\xd5\xe9\x28\xc4\x55\x1c\x85\x94\xf1\x90\x3d\x0e\x80\x95\xe5\xa2\xc4\x28\x6c\x9d\x81\x6c\x45\xe1\xaf\x8b\xf8\xd2\xbc\xde\xdc\x5c\x61\x4e\x93\x85\x4f\xda\xd9\x3d\x45\x79\x07\x13\xdd\x24\x35\xda\x78\x68\xdb\x15\x05\x72\x0d\xb9\xba\xff\x4e\x1c\x07\xfa\xe2\xdc\x5c\x89\x3f\x7f\xbd\x35\xbe\xd7\xa9\x95\x09\xb1\x00\x8a\x4b\x15\xf5\xc6\xf4\x01\x89\xd9\x73\x09\xd9\x8b\x8b\xa2\x2f\x45\xfe\x5d\x32\x93\x8e\xa5\x4b\xe5\xc6\xb5\xfd\xb5\xec\x2d\x72\xce\xf0\xa3\xef\x3a\xed\x9a\x77\x88\xb0\x3e\x2b\x8d\x09\x3e\xbd\x52\x9d\x84\x96\xde\xac\x57\x3f\xd8\x0a\xf1\xd5\x71\xfe\xaa\x94\xba\xb1\xb9\x49\x12\x92\x14\x8d\xe5\x05\x14\xd8\x1b\xd6\xdd\xf2\x5f\xb3\x89\x97\x95\x8b\xd6\x14\xf2\x1c\xc0\x76\xd8\x27\x4b\x23\x51\xaa\x65\xb0\xbf\xbc\xab\xf9\x00\xd9\xb4\x2d\x38\xad\x0d\x64\x73\x6e\x73\x80\x90\xad\xbd\xc1\xf1\x77\x77\x35\xac\xb5\x37\x43\xc1\x09\x60\x9f\x5c\x8d\x45\xc4\xbb\x59\xb2\xc4\x2f\xc9\x15\x93\xa9\x41\x38\x0e\x68\xf5\x48\xc6\xba\xad\x50\x28\xf2\x11\xd9\x5b\x67\xf0\x78\x5c\x3f\x7c\x7e\xfe\xf6\xf0\xfc\x74\x3a\xe5\x25\x0c\x33\xc2\xf3\x90\xa6\x91\xa3\x76\x3d\x36\xf3\xcb\xb0\x14\xf1\x40\x4c\x4a\x29\x80\x8c\x49\x12\x3b\x74\xb6\x85\x13\xfc\x09\x00\x00\xff\xff\x95\xdb\xe4\x4a\x49\x04\x00\x00")

func srcLanguageSupply_supplyGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupply_supplyGo,
		"src/LANGUAGE/supply/_supply.go",
	)
}

func srcLanguageSupply_supplyGo() (*asset, error) {
	bytes, err := srcLanguageSupply_supplyGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/_supply.go", size: 1097, mode: os.FileMode(420), modTime: time.Unix(1524667805, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupply_supply_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xc1\xca\xc2\x30\x10\x04\xe0\x73\xf6\x29\x96\x9c\x92\x9f\x9f\xf6\x2d\xc4\x73\xdb\xbb\xc4\xb8\xae\x4b\xdb\x24\x34\x9b\x83\x88\xef\x2e\x55\x8f\xde\x06\x3e\x66\xa6\x84\x38\x07\x26\xac\xad\x94\xe5\x7e\x52\xaa\x0a\x20\x6b\xc9\x9b\xa2\x03\xd3\xa1\x65\xd1\x5b\x3b\x77\x31\xaf\x7d\x4e\x55\x7a\x96\x34\x73\xb6\xbf\x2d\xaf\xc4\xc1\x02\x18\xbb\x2f\x49\x62\x0b\x1e\xe0\xda\x52\xc4\x89\xaa\x8e\xef\x17\xa7\xf8\xf7\xe5\x6e\xf2\xf8\x00\x33\x10\x4b\x55\xda\x0e\x41\x96\x63\x48\x97\x85\x36\xb7\x67\x0f\x66\x68\x69\x2c\x14\xab\xd3\x7f\xb4\x9f\x3e\x8e\x4d\x94\xac\x87\x27\xbc\x02\x00\x00\xff\xff\x0e\xd4\xc8\xb7\xbf\x00\x00\x00")

func srcLanguageSupply_supply_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupply_supply_suite_testGo,
		"src/LANGUAGE/supply/_supply_suite_test.go",
	)
}

func srcLanguageSupply_supply_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageSupply_supply_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/_supply_suite_test.go", size: 191, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupply_supply_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xc2\x30\x10\x86\xe7\xf8\x29\x4e\x9e\x6c\xa9\xc4\x3b\x52\x86\x4a\x30\x74\x62\x28\x3b\x32\xce\xe1\x58\x71\x7c\xae\x7d\x69\x41\x15\xef\x5e\x25\xb0\x20\x75\x3c\x7d\x77\xf7\x7f\x7f\xb6\x6e\xb4\x1e\xa1\xce\x39\xc7\xdb\x89\xb1\xb2\x10\x61\xca\x54\x18\x94\x68\x5a\x90\x3e\xf0\x30\x9f\x5b\x47\x93\xa1\x54\x83\xf1\x21\x8d\x9e\xe4\xff\x8c\x26\xf4\x56\x0a\x2d\x84\x31\x9e\xb6\x1e\x13\x16\xcb\x08\x13\xb9\xd1\x63\x82\x4d\xa5\xb9\x38\xec\x1e\x71\xad\x27\xd8\x6c\x7a\xac\x1c\x92\xe5\x40\xa9\x5b\xf6\xea\x6a\xf1\x60\x4f\xbd\xee\x45\xef\xdb\x16\x38\x41\x07\x3b\xac\xae\x84\x33\x2a\xf9\xb9\x62\xf9\x06\x97\x39\x39\xa5\xe1\x57\x34\x1f\xac\x24\x5e\xed\x94\x23\xc2\x72\xf6\x02\x9b\xfd\x35\xa3\x63\x75\xb1\xb1\xa2\x6e\x8f\xa4\xf6\x5f\xb3\x8d\xcf\x59\x8b\xe6\xae\x45\x63\x0c\x1c\x0f\xbb\xc3\x16\xde\xfb\x7e\x7d\x51\x61\xc0\x82\xc0\x04\x6e\x40\x37\x42\x48\x95\x6d\x8c\xd0\x63\xc6\xd4\x63\x72\xb7\x35\x62\x29\x52\xe1\x87\xca\x28\xee\x5a\xfc\x05\x00\x00\xff\xff\x96\x3c\x37\x05\x61\x01\x00\x00")

func srcLanguageSupply_supply_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupply_supply_testGo,
		"src/LANGUAGE/supply/_supply_test.go",
	)
}

func srcLanguageSupply_supply_testGo() (*asset, error) {
	bytes, err := srcLanguageSupply_supply_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/_supply_test.go", size: 353, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplyCli_cli_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xcd\xaa\xc2\x30\x10\x40\xe1\x75\xe6\x29\x86\xac\x92\xcb\xa5\x7d\x88\x82\xb8\x6e\xbb\x97\x18\xc7\x38\x34\x7f\x34\x93\x85\x88\xef\x2e\x05\x97\xee\x0e\x7c\x70\xaa\xf3\x9b\x0b\x84\xc9\x71\xbe\x08\x35\x01\xe0\x54\xcb\x2e\x68\x40\x0d\xa8\x03\xcb\xa3\x5f\x07\x5f\xd2\x58\x72\xe3\x31\x70\xde\x42\xd1\xbf\xad\x24\x0a\x4e\x03\x28\x7d\x9c\x38\x07\x0d\x16\xe0\xde\xb3\xc7\x95\x9a\x4c\x91\x8d\xe0\xdf\xd7\x86\xd5\xe2\x0b\xd4\x4c\x81\x9b\xd0\x7e\x72\x1c\xcf\x2e\xdf\x22\xed\xe6\x68\x0b\x6a\xee\x79\xa9\xe4\x9b\x91\x7f\xd4\x4b\xaf\x35\x3e\x71\x8a\x8c\x4b\x67\x21\x6d\xe1\x0d\x9f\x00\x00\x00\xff\xff\xe6\x5b\xbf\xd2\xbe\x00\x00\x00")

func srcLanguageSupplyCli_cli_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplyCli_cli_suite_testGo,
		"src/LANGUAGE/supply/cli/_cli_suite_test.go",
	)
}

func srcLanguageSupplyCli_cli_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageSupplyCli_cli_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/cli/_cli_suite_test.go", size: 190, mode: os.FileMode(420), modTime: time.Unix(1524515574, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplyCli_mainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x51\x6f\xda\x48\x10\xc7\x9f\xbd\x9f\x62\xce\xd2\x9d\x6c\x09\x99\x70\x77\x69\x5a\x2a\x1e\x08\x41\x91\xaa\x84\x4a\x45\x69\x55\x55\x55\xb5\xd8\x83\x19\xb1\xde\xb5\xd6\xeb\x50\x84\xf8\xee\xd5\x9a\xb5\xc1\x4d\x28\xa4\xea\x93\x93\xdd\x99\xd9\xdf\xcc\xfc\x67\xc8\x79\xbc\xe4\x29\x42\xc6\x49\x32\x46\x59\xae\xb4\x81\x80\x79\xdf\xc0\xdf\x6c\xee\x86\x93\xdb\x87\xe1\xed\x78\xbb\xed\x2e\x94\x5a\x16\x3e\xf3\xda\xa7\x45\x99\xe7\x62\x6d\x8f\x55\x75\x99\x73\xb3\xe8\xce\x49\xa0\xfd\xc3\x1e\x18\xca\xd0\x67\xcc\xf3\x53\x32\x8b\x72\x16\xc5\x2a\xeb\xc6\x42\x95\xc9\x5c\x95\x32\xd1\xeb\xae\xa0\xd9\xac\x24\x91\x58\x0e\x9f\x85\x8c\xcd\x4b\x19\x57\x34\x41\x08\x1b\xe6\x09\x95\xa6\xa8\xa1\x3f\x80\x43\xcb\x68\x82\xab\xbb\xea\x26\x50\x45\x34\x35\x89\x2a\x4d\xc8\x98\xd7\x18\xdc\x90\xee\x00\xea\xa7\x8e\xb7\x68\xae\x0f\x8c\x82\x90\x79\x34\xaf\x2c\xff\x1a\x80\x24\x61\xdf\x74\x8f\x46\x63\xad\x95\x0e\xfc\x07\xc9\x67\x02\xc1\x28\x48\xd0\xa0\xce\x48\x22\x34\x01\x21\x21\x8d\xb1\x51\x7a\xdd\x87\xbf\x0b\xbf\x7a\xd4\x39\x86\x21\xf3\x3c\x55\x44\xe3\xef\x64\x82\x37\x21\xf3\xb6\x8c\x79\x19\x97\x34\xc7\xc2\x3c\x4f\x37\xc1\xd5\xbd\x33\x08\xda\xb9\xec\x90\x3a\x60\x0b\x1a\x4d\xd4\xaa\x8a\x7e\x3e\xb9\x50\x3c\x39\x80\xae\x29\x7e\xcd\xdc\xbb\x70\xd0\x85\xe1\x47\x9a\x30\xad\x6e\x6c\x13\x86\x3a\x2d\xbe\xf4\xfa\x5f\xf7\xa8\xf5\x23\x7b\xd0\xfe\x00\x76\xa1\xa2\xd1\x02\xe3\x65\xd3\x88\x8f\x5c\x50\x12\x84\x6f\x7f\xce\xa6\x01\xe9\x39\x10\x55\x44\xf7\xcb\x84\xf4\x50\x88\xa0\x96\x59\xf4\x4e\x91\x0c\x5c\xdc\x1b\xcc\xab\xae\x76\xc0\x9f\x91\xf4\xc3\x0e\x5c\x5c\x5d\x5e\x86\x2f\xf3\x14\x34\xdb\x7b\x36\xf0\x83\x26\xa1\x68\x8a\x66\x98\xe7\x23\x1e\x2f\xd0\xfa\xd4\x39\xd5\xff\x87\x4f\x33\x39\xd6\x97\x02\x4d\x99\x03\xcf\x73\x88\xad\xb7\x55\xd3\xbe\x27\xad\x5e\xbc\xae\x4a\xf0\x0c\xcc\xd0\x8e\xe0\xfb\x47\xd4\x9a\x12\x3c\xc8\xa6\x78\x21\x0a\xb7\x71\x40\xb9\x40\xd1\x3a\x13\x60\x0b\x55\x1c\xe1\xb9\x72\x2d\xd9\xd1\xb4\x74\xf1\xa1\x94\xd7\x38\x57\x1a\x47\x2a\xcb\x49\xd4\x50\x67\x08\x76\xe7\x06\xce\xef\x84\x3a\xff\x75\x04\x7b\x71\xfd\xae\x3c\xce\xae\x51\xac\x91\x1b\x84\x19\xc9\x73\xe7\xbe\xf7\x5f\xab\x4e\x8e\x63\x8a\xc6\x4e\x0e\xc9\x74\x2c\x1f\x49\x2b\x99\xa1\x34\x2f\xdb\x45\x3b\xe5\xe0\xde\x1d\x1e\xb9\x26\x7b\x5b\x9c\x20\xfa\xbf\x9e\xea\x6a\x1e\xab\x0d\x1e\x4d\xed\x87\x50\xdb\x17\xef\x9b\xe5\xd0\x2c\x2b\xe6\x79\xbb\x49\xef\x03\xb8\x1c\xec\xd9\x48\x65\x19\x97\x49\x1f\xe0\x9f\x96\x00\xdc\xf9\x66\x6b\x8d\xee\x54\x6a\xbd\x00\xea\xc5\xd0\xaa\x87\x15\xcb\x39\x89\x57\x9f\x23\x52\xbc\x7c\x22\x04\x57\xe6\x4f\x9a\x0c\x8e\x94\x9c\x53\xfa\x39\x13\x81\x24\x71\xaa\xd5\xd5\x07\x56\x9a\x0c\xc9\x14\xe2\xca\xd5\x8e\xc2\x89\x92\xbe\x3a\x36\x9c\x23\x81\x5c\x96\x79\xbd\x2d\x9e\xd9\x71\x7f\x68\x1c\x77\xbf\x2f\x5b\xf6\x23\x00\x00\xff\xff\xa2\x16\x68\x3a\xd0\x07\x00\x00")

func srcLanguageSupplyCli_mainGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplyCli_mainGo,
		"src/LANGUAGE/supply/cli/_main.go",
	)
}

func srcLanguageSupplyCli_mainGo() (*asset, error) {
	bytes, err := srcLanguageSupplyCli_mainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/cli/_main.go", size: 2000, mode: os.FileMode(420), modTime: time.Unix(1524518317, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func srcLanguageVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageVendorGitkeep,
		"src/LANGUAGE/vendor/.gitkeep",
	)
}

func srcLanguageVendorGitkeep() (*asset, error) {
	bytes, err := srcLanguageVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/vendor/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522263014, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".envrc": Envrc,
	".gitignore": Gitignore,
	"README.md": readmeMd,
	"VERSION": version,
	"bin/compile": binCompile,
	"bin/detect": binDetect,
	"bin/finalize": binFinalize,
	"bin/release": binRelease,
	"bin/supply": binSupply,
	"fixtures/.gitkeep": fixturesGitkeep,
	"fixtures/simple_test/some_file.txt": fixturesSimple_testSome_fileTxt,
	"manifest.yml": manifestYml,
	"scripts/brats.sh": scriptsBratsSh,
	"scripts/build.sh": scriptsBuildSh,
	"scripts/install_go.sh": scriptsInstall_goSh,
	"scripts/install_tools.sh": scriptsInstall_toolsSh,
	"scripts/integration.sh": scriptsIntegrationSh,
	"scripts/unit.sh": scriptsUnitSh,
	"src/LANGUAGE/Gopkg.toml": srcLanguageGopkgToml,
	"src/LANGUAGE/finalize/_finalize.go": srcLanguageFinalize_finalizeGo,
	"src/LANGUAGE/finalize/_finalize_suite_test.go": srcLanguageFinalize_finalize_suite_testGo,
	"src/LANGUAGE/finalize/_finalize_test.go": srcLanguageFinalize_finalize_testGo,
	"src/LANGUAGE/finalize/cli/_cli_suite_test.go": srcLanguageFinalizeCli_cli_suite_testGo,
	"src/LANGUAGE/finalize/cli/_main.go": srcLanguageFinalizeCli_mainGo,
	"src/LANGUAGE/hooks/_hooks_debug.go": srcLanguageHooks_hooks_debugGo,
	"src/LANGUAGE/hooks/_hooks_suite_test.go": srcLanguageHooks_hooks_suite_testGo,
	"src/LANGUAGE/integration/_integration_suite_test.go": srcLanguageIntegration_integration_suite_testGo,
	"src/LANGUAGE/integration/_simple_test.go": srcLanguageIntegration_simple_testGo,
	"src/LANGUAGE/supply/_supply.go": srcLanguageSupply_supplyGo,
	"src/LANGUAGE/supply/_supply_suite_test.go": srcLanguageSupply_supply_suite_testGo,
	"src/LANGUAGE/supply/_supply_test.go": srcLanguageSupply_supply_testGo,
	"src/LANGUAGE/supply/cli/_cli_suite_test.go": srcLanguageSupplyCli_cli_suite_testGo,
	"src/LANGUAGE/supply/cli/_main.go": srcLanguageSupplyCli_mainGo,
	"src/LANGUAGE/vendor/.gitkeep": srcLanguageVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".envrc": &bintree{Envrc, map[string]*bintree{}},
	".gitignore": &bintree{Gitignore, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"VERSION": &bintree{version, map[string]*bintree{}},
	"bin": &bintree{nil, map[string]*bintree{
		"compile": &bintree{binCompile, map[string]*bintree{}},
		"detect": &bintree{binDetect, map[string]*bintree{}},
		"finalize": &bintree{binFinalize, map[string]*bintree{}},
		"release": &bintree{binRelease, map[string]*bintree{}},
		"supply": &bintree{binSupply, map[string]*bintree{}},
	}},
	"fixtures": &bintree{nil, map[string]*bintree{
		".gitkeep": &bintree{fixturesGitkeep, map[string]*bintree{}},
		"simple_test": &bintree{nil, map[string]*bintree{
			"some_file.txt": &bintree{fixturesSimple_testSome_fileTxt, map[string]*bintree{}},
		}},
	}},
	"manifest.yml": &bintree{manifestYml, map[string]*bintree{}},
	"scripts": &bintree{nil, map[string]*bintree{
		"brats.sh": &bintree{scriptsBratsSh, map[string]*bintree{}},
		"build.sh": &bintree{scriptsBuildSh, map[string]*bintree{}},
		"install_go.sh": &bintree{scriptsInstall_goSh, map[string]*bintree{}},
		"install_tools.sh": &bintree{scriptsInstall_toolsSh, map[string]*bintree{}},
		"integration.sh": &bintree{scriptsIntegrationSh, map[string]*bintree{}},
		"unit.sh": &bintree{scriptsUnitSh, map[string]*bintree{}},
	}},
	"src": &bintree{nil, map[string]*bintree{
		"LANGUAGE": &bintree{nil, map[string]*bintree{
			"Gopkg.toml": &bintree{srcLanguageGopkgToml, map[string]*bintree{}},
			"finalize": &bintree{nil, map[string]*bintree{
				"_finalize.go": &bintree{srcLanguageFinalize_finalizeGo, map[string]*bintree{}},
				"_finalize_suite_test.go": &bintree{srcLanguageFinalize_finalize_suite_testGo, map[string]*bintree{}},
				"_finalize_test.go": &bintree{srcLanguageFinalize_finalize_testGo, map[string]*bintree{}},
				"cli": &bintree{nil, map[string]*bintree{
					"_cli_suite_test.go": &bintree{srcLanguageFinalizeCli_cli_suite_testGo, map[string]*bintree{}},
					"_main.go": &bintree{srcLanguageFinalizeCli_mainGo, map[string]*bintree{}},
				}},
			}},
			"hooks": &bintree{nil, map[string]*bintree{
				"_hooks_debug.go": &bintree{srcLanguageHooks_hooks_debugGo, map[string]*bintree{}},
				"_hooks_suite_test.go": &bintree{srcLanguageHooks_hooks_suite_testGo, map[string]*bintree{}},
			}},
			"integration": &bintree{nil, map[string]*bintree{
				"_integration_suite_test.go": &bintree{srcLanguageIntegration_integration_suite_testGo, map[string]*bintree{}},
				"_simple_test.go": &bintree{srcLanguageIntegration_simple_testGo, map[string]*bintree{}},
			}},
			"supply": &bintree{nil, map[string]*bintree{
				"_supply.go": &bintree{srcLanguageSupply_supplyGo, map[string]*bintree{}},
				"_supply_suite_test.go": &bintree{srcLanguageSupply_supply_suite_testGo, map[string]*bintree{}},
				"_supply_test.go": &bintree{srcLanguageSupply_supply_testGo, map[string]*bintree{}},
				"cli": &bintree{nil, map[string]*bintree{
					"_cli_suite_test.go": &bintree{srcLanguageSupplyCli_cli_suite_testGo, map[string]*bintree{}},
					"_main.go": &bintree{srcLanguageSupplyCli_mainGo, map[string]*bintree{}},
				}},
			}},
			"vendor": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{srcLanguageVendorGitkeep, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

