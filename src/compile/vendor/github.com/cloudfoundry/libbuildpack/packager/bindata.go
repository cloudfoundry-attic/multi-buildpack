// Code generated by go-bindata.
// sources:
// scaffold/.envrc
// scaffold/.gitignore
// scaffold/README.md
// scaffold/VERSION
// scaffold/bin/compile
// scaffold/bin/detect
// scaffold/bin/finalize
// scaffold/bin/release
// scaffold/bin/supply
// scaffold/fixtures/.gitkeep
// scaffold/fixtures/simple_test/some_file.txt
// scaffold/manifest.yml
// scaffold/scripts/brats.sh
// scaffold/scripts/build.sh
// scaffold/scripts/install_go.sh
// scaffold/scripts/install_tools.sh
// scaffold/scripts/integration.sh
// scaffold/scripts/unit.sh
// scaffold/src/LANGUAGE/Gopkg.toml
// scaffold/src/LANGUAGE/brats/brats_suite_test.go
// scaffold/src/LANGUAGE/brats/brats_test.go
// scaffold/src/LANGUAGE/finalize/cli/cli_suite_test.go
// scaffold/src/LANGUAGE/finalize/cli/main.go
// scaffold/src/LANGUAGE/finalize/finalize.go
// scaffold/src/LANGUAGE/finalize/finalize_suite_test.go
// scaffold/src/LANGUAGE/finalize/finalize_test.go
// scaffold/src/LANGUAGE/hooks/hooks_suite_test.go
// scaffold/src/LANGUAGE/integration/integration_suite_test.go
// scaffold/src/LANGUAGE/integration/simple_test.go
// scaffold/src/LANGUAGE/supply/cli/cli_suite_test.go
// scaffold/src/LANGUAGE/supply/cli/main.go
// scaffold/src/LANGUAGE/supply/supply.go
// scaffold/src/LANGUAGE/supply/supply_suite_test.go
// scaffold/src/LANGUAGE/supply/supply_test.go
// scaffold/src/LANGUAGE/vendor/.gitkeep
// DO NOT EDIT!

package packager

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Envrc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xad\x28\xc8\x2f\x2a\x51\x70\xf7\x0f\x70\x0c\xf1\xb0\x55\x09\x08\x77\xe1\x82\x0b\x39\x79\xfa\x81\x45\xf4\xf5\x92\x32\xf3\x60\xc2\x10\x75\x60\x49\x2b\x15\x10\x07\x10\x00\x00\xff\xff\x4b\xa8\xfe\x63\x42\x00\x00\x00")

func EnvrcBytes() ([]byte, error) {
	return bindataRead(
		_Envrc,
		".envrc",
	)
}

func Envrc() (*asset, error) {
	bytes, err := EnvrcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".envrc", size: 66, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _Gitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\xc8\x4e\xe7\xd2\x4b\xca\xcc\xe3\x2a\x4e\x4e\x4c\x4b\xcb\xcf\x49\x89\x4f\x2a\xcd\xcc\x49\x29\x48\x4c\xce\xd6\xd5\xd2\xab\xca\x2c\x00\x04\x00\x00\xff\xff\x8b\xdd\xc0\x96\x21\x00\x00\x00")

func GitignoreBytes() ([]byte, error) {
	return bindataRead(
		_Gitignore,
		".gitignore",
	)
}

func Gitignore() (*asset, error) {
	bytes, err := GitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitignore", size: 33, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\x4d\x6f\xdb\x30\x0c\xbd\xfb\x57\x10\xe8\x61\x2b\xd0\xda\xe8\xb5\xb7\x7e\x6e\xc1\xda\xad\xe8\x92\xcb\x82\x22\x95\x65\x3a\xd6\x2a\x8b\x82\x28\x35\xf3\xbf\x1f\x28\x77\x4e\xd2\xf6\xb6\xc3\xb0\x8b\xa1\x0f\x3e\x8a\xef\xf1\xd1\x07\x07\x07\x70\x9e\x8c\x6d\xbc\xd2\x4f\xb0\x60\x0c\x70\x49\x3a\xf5\xe8\xa2\x8a\x86\x5c\x51\x4c\x11\xc6\xad\x21\x76\xb8\x0d\x2f\xe6\x04\xb5\x6c\x20\x76\x86\xc7\xa5\x9c\x1f\x41\x48\x2e\x87\xb6\x64\x2d\x6d\x04\xa8\xa9\xef\x95\x6b\xa0\x0d\xd4\xe7\xab\x29\xfa\x03\x43\x63\x02\xea\x48\x61\x38\x2d\x8a\x93\x12\xbe\x53\x0a\x1a\x73\x54\x89\xee\x39\x68\x68\x8d\x45\x30\x6e\x1f\xb8\x85\x95\xc5\xe3\xe3\x63\xad\xb8\x2b\x78\x84\x8e\x30\x39\x95\x1a\xd9\xf4\xde\x9a\x76\xc8\x70\x1f\x48\x23\xf3\x9f\x6c\x6d\x8a\x29\xe0\x11\x18\xc7\x51\x59\x0b\x4b\x49\xea\x9e\x1f\x3e\x76\x31\x7a\x3e\xad\xaa\x71\x5f\x3a\x8c\xd5\x21\x6c\x3a\xa3\x3b\xd8\x18\x6b\x41\xa5\x48\xbd\x8a\x46\x2b\x6b\x07\xd8\x7b\x17\x36\x1d\x3a\x18\x28\x81\xee\x94\x5b\xe3\x54\xa8\x41\x2e\x33\xc3\xd9\xcb\x6b\x13\x97\x63\xf9\xa8\x35\x86\x89\x49\x59\xb1\x0e\xc6\x47\xae\x5e\x4a\x5b\x45\x22\xcb\x25\x77\x99\x96\x64\x39\x7f\xd1\x7e\x47\x93\x09\xfe\x36\xf3\x18\x34\x81\x17\x9c\x15\xbd\xb0\x94\x1a\xb8\xa6\xe4\x9a\x30\x14\x0b\x6f\x49\xbd\x4a\x09\x91\x84\x4b\xd8\x0f\x05\x69\x26\x79\xb1\xc8\x28\x80\x47\x2d\x12\x9b\x08\xf5\x00\x4e\xf5\x58\x4c\xb5\xe8\x16\x74\x40\x15\xf1\x78\x9b\x74\x79\xbe\x98\xdd\x5c\xde\x9d\x5d\x7c\x59\x7d\x3d\xbb\xbd\x7a\xd8\x3d\xf8\x31\xbb\x5b\x5d\xcf\x6e\xae\x56\x77\x67\xf3\xcf\x0f\x70\x22\x09\x7c\xe2\x0e\xfa\x61\xa5\xbc\x87\xe5\x71\x0d\xaf\xe0\x23\x2d\xb1\xea\x1c\x39\x1a\xb7\x2e\x26\x97\x32\x24\x1e\xcd\xb4\xbc\x48\xd1\x2a\xe6\x6d\x73\xd7\x26\x76\xa9\x2e\x35\xf5\x95\x16\x76\xed\x48\xae\xb2\xa6\x9e\x4a\xad\xf4\x88\x3a\x84\x36\xa8\x1e\x37\x14\x9e\xa0\xa5\x20\x1e\x77\xe2\x6c\xe3\x22\xae\x43\x1e\x16\x88\xc8\x51\x5a\x3c\xa7\xbc\xfc\xf7\x73\xf1\xbf\x0d\xc6\x7d\x72\x90\x9c\x89\xa3\x92\xc5\x3b\xd3\x20\xb7\xbb\x43\x20\x88\x37\x2d\x78\x0f\xb8\x13\x34\xe1\x6f\x29\x88\x7e\x2d\x85\x7e\x44\x6b\xe5\xa0\x96\xfe\x24\xb1\xb7\x83\x4f\xd9\x20\xb0\xd4\x7f\xe5\x9c\x72\xb4\xe6\x3d\x7a\x0a\x62\x4e\x98\x31\x27\xe4\xe2\x9b\x47\x07\xca\x81\x91\xad\x3c\x97\xfd\xe2\x03\xfd\x44\x1d\x05\x03\x97\x86\xb5\x55\xa6\xc7\x50\xcc\xf7\xbc\x04\x86\x01\x7f\x79\x0c\x26\xff\xaa\x6d\x9e\x47\x47\x11\x06\x8c\x59\x0f\xd7\x60\x93\x7d\xea\x03\x35\x49\x67\x76\x89\xb1\x2c\x7e\x07\x00\x00\xff\xff\x60\xcc\xda\x0b\xf2\x05\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 1522, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _version = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x32\xd0\x33\xd0\x33\x00\x04\x00\x00\xff\xff\x86\x4b\x5b\x2e\x05\x00\x00\x00")

func versionBytes() ([]byte, error) {
	return bindataRead(
		_version,
		"VERSION",
	)
}

func version() (*asset, error) {
	bytes, err := versionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "VERSION", size: 5, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binCompile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x8b\x13\x31\x14\x85\xdf\xf3\x2b\x8e\xd9\x08\xbb\xc2\x74\x46\xdf\x57\xe8\x4e\x2b\x53\x54\xb6\x6c\x77\xdf\x84\x92\x4e\xee\x30\x97\xa6\x49\x48\x32\xd5\x2a\xfe\x77\x69\xcb\x76\x47\x51\xf0\xf1\x9e\xc0\x77\xf2\xdd\x7b\xf5\xaa\x1c\x52\x2c\x37\xec\x4a\x72\x7b\x6c\x74\xea\xc5\x15\x1e\x7b\x4e\x48\x6d\xe4\x90\xc1\x09\x1a\x86\x42\xa4\x56\x67\x32\xd8\x0c\xa7\x2c\x44\xbf\x67\x43\x06\x9d\x8f\x68\xfd\x2e\xe8\xcc\x1b\xb6\x9c\x0f\xf8\xca\xb9\x47\x43\xd1\x6f\x07\x68\x67\xe0\xad\xa1\x88\x3d\xc5\xc4\xde\x25\xf8\x0e\xb5\xf5\x83\xc1\x07\x3f\x38\x13\x0f\xe2\x0a\x8b\x73\x8d\x83\xb6\x99\xa2\xd3\x99\xf7\x84\xec\x71\xfc\x56\x1a\x42\xb0\x87\x13\xe8\x38\x76\xec\xb4\xe5\xef\x24\x44\xa2\x8c\x82\x06\x8f\xc0\x81\x3a\xcd\x56\x88\xbb\xa7\xc5\xa7\xd9\x7a\xb6\x78\xb8\x55\x6f\x45\x3d\xad\x9b\xf9\x79\x78\x77\x7e\x59\x4e\xeb\x8f\xeb\xe5\xf4\xb1\xb9\x55\xd7\x86\xa3\xd3\x3b\x82\xba\x8e\xa4\x8d\x65\xb7\x45\xd1\x41\xfd\xb8\x9b\xae\x9a\xf5\xea\xfe\xe9\xa1\x9e\xbf\x2e\xdf\xfc\xbc\xb9\x11\xb3\xf9\x72\x75\xc2\x48\x75\xe1\x97\x93\xf6\xa8\xd0\x9d\x0d\xa4\x10\xbb\xad\xe1\x88\x22\x40\x5d\x6a\x5f\x32\xa9\x9e\x19\x65\x25\xc7\xf1\x88\x17\xa2\xef\xd8\xd2\xc4\x48\x21\xa8\xed\x3d\x24\x7d\x0b\x3e\x66\x5c\xea\xbf\xa8\xe6\xfe\xf3\xfc\x8f\x66\xbc\xff\x07\xa6\xac\xaa\xaa\x5a\x27\xca\x85\xa1\x90\x0a\xc3\x71\x92\x7a\x29\x84\xfa\x7d\x13\xe5\x68\xc5\x23\x90\x84\x7c\x11\x91\x23\x01\x89\xea\xaf\x88\xe7\xb3\xfc\x37\xe4\x57\x00\x00\x00\xff\xff\x2f\x90\x23\x7d\x79\x02\x00\x00")

func binCompileBytes() ([]byte, error) {
	return bindataRead(
		_binCompile,
		"bin/compile",
	)
}

func binCompile() (*asset, error) {
	bytes, err := binCompileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/compile", size: 633, mode: os.FileMode(509), modTime: time.Unix(1520022284, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binDetect = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\xc5\x15\x9e\x0b\xb7\x6b\x51\x64\xca\xee\x25\x40\x66\xfd\x30\x10\x11\x5b\x12\x28\x3a\x4e\xde\x3e\xa0\xbd\x05\x9c\x78\xfc\xee\x03\x87\xaf\x71\xed\x32\x06\x2e\x23\x95\x07\x82\xef\xd9\x0d\xb0\x35\x91\x52\x54\xfc\x87\x95\xe7\xf4\x9d\x58\x4e\x6e\xb0\xc1\x25\x73\x47\x8f\xc2\x4d\x61\x90\x2c\x5c\xa8\x63\xcb\xa4\x99\x04\x55\x50\xaa\x42\x2b\x7c\x6b\xf3\x0b\x9a\x09\xbb\xa3\xf9\x78\xdf\xe3\x62\x17\x13\x4d\xe7\xe9\x0f\x57\x61\x25\xc4\x9a\x08\x99\x84\x8c\xa0\x27\x2b\x7e\xc0\xb7\x8f\x32\x77\xc4\xba\x34\xaf\x1c\x66\xc2\xc6\x9a\x77\xc0\xb7\x06\x5f\xd2\x51\xfb\x45\xb5\x37\x36\xee\xe4\xdc\x91\xb8\x77\x00\x00\x00\xff\xff\xad\x3a\x34\xb0\xe5\x00\x00\x00")

func binDetectBytes() ([]byte, error) {
	return bindataRead(
		_binDetect,
		"bin/detect",
	)
}

func binDetect() (*asset, error) {
	bytes, err := binDetectBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/detect", size: 229, mode: os.FileMode(509), modTime: time.Unix(1520022238, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binFinalize = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x5d\x6b\xdb\x30\x14\x7d\xbf\xbf\xe2\xce\xd5\xa0\x1d\xb8\x62\x5f\x2f\x03\x0f\xdc\x38\x73\xcc\xc2\x1c\x9c\x04\xfc\x96\x2a\xb6\x6c\x8b\x3a\x92\xd0\xc7\x18\x0b\xfe\xef\xc3\x71\xeb\x2d\xa3\x7a\x3a\x47\x3a\x9c\x73\x75\xcf\xcd\x1b\xea\xad\xa1\x47\x21\x29\x97\x3f\xf1\xc8\x6c\x07\x37\xb8\xeb\x84\x45\x5b\x19\xa1\x1d\x6a\xc3\x35\x33\xdc\x22\x93\x35\x56\x4a\x36\xa2\xf5\x23\x75\x1d\x47\xa6\x35\x36\xca\x60\xcf\xbc\xac\xba\x7b\x00\xcb\x1d\x86\xdc\x2b\xd4\x42\xf3\x86\x89\x1e\xe0\x61\x9f\xad\x93\x43\x92\x15\x11\x79\x0f\x8b\x78\xb1\x5a\x4e\xe4\x03\x24\xcb\xcd\x76\xc2\x1f\x27\x9c\x25\x65\x44\x3e\xc1\xa6\xc8\xbf\x65\xeb\x67\xd9\xf9\xf3\x97\x70\x00\xe0\xbf\xb4\x32\x0e\x2f\x66\x9b\x78\xf1\xfd\xf2\xf8\x58\x0b\x23\xd9\x89\x23\xb9\x35\x9c\xd5\xbd\x90\x4f\x18\x36\x48\xce\x0f\xf1\x76\x75\xd8\xe6\xfb\x62\xb1\x7c\x4b\xdf\x0d\x77\x8f\x60\x95\x37\x15\xc7\x80\x5c\x39\xd0\xe9\x8f\x96\x0a\x69\x1d\xeb\xfb\x43\xab\xee\x6d\x17\x80\xf2\x4e\x7b\x77\xa8\x85\x89\xc8\xed\xe9\xc9\xf1\x93\xc6\xb0\xc6\xd0\x61\x23\x24\xeb\xc5\x6f\x5e\x96\xe5\x1d\x00\xaf\x3a\x85\x41\x38\x9e\xaf\x58\x78\x29\x85\x6c\xb1\x55\x78\xf4\xa2\xaf\x67\x6d\x00\x69\x5e\xe4\xf9\x2e\x22\xa9\xca\xa6\xa0\x44\x18\xda\x2a\x4c\xf3\x4d\xbc\x5b\x45\xd7\x43\xe1\xff\xb2\x4b\x3b\xb3\x6b\xa8\x90\xfc\x9d\x8f\xbe\x84\xe0\xf9\xbc\x8e\x7f\xa4\xfb\x38\x5d\x0e\xc3\x7c\x4b\xab\x5e\x00\xbc\xaa\x7f\x5e\xc5\x98\x18\x60\x40\xe6\x66\x46\xf2\xd2\xcc\x8c\xb3\xa4\x1c\xf1\x3f\xcd\x04\xf0\x27\x00\x00\xff\xff\xef\xcb\x5f\x0b\x3b\x02\x00\x00")

func binFinalizeBytes() ([]byte, error) {
	return bindataRead(
		_binFinalize,
		"bin/finalize",
	)
}

func binFinalize() (*asset, error) {
	bytes, err := binFinalizeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/finalize", size: 571, mode: os.FileMode(509), modTime: time.Unix(1520022412, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binRelease = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8f\x31\x6b\xfb\x30\x10\x47\x77\x7f\x8a\xdf\x3f\x06\x67\x32\xe6\xdf\x31\x94\x2c\x85\xce\x1d\x3a\x06\xc2\x49\x77\xae\x44\x6d\x49\xe8\x4e\x49\xfc\xed\x8b\xd3\x8e\x6f\x78\xf0\x5e\xff\x6f\x6a\x5a\x27\x17\xd3\x24\xe9\x06\x47\x1a\xba\x1e\x3b\x56\x59\x84\x54\xf0\xea\x5a\x5c\x78\xe4\x58\xcf\x5d\x8f\xcf\x10\x15\xea\x6b\x2c\x86\x52\xf3\x2d\xb2\x28\x66\x11\x76\xe4\xbf\xb1\x8a\x11\x93\x11\x2c\xe3\x6d\xc9\x8d\xf1\x9e\x5b\xe2\xba\x21\x26\x8e\x9e\x2c\xa6\x2f\x84\x7c\x87\x05\x01\x95\x02\x0d\xb9\x2d\x0c\x27\x90\x87\xf8\x66\xc2\x5d\x27\x3e\x64\x8c\x82\xc3\x38\x8e\x97\xc4\x32\x53\x5b\xec\x5a\x6a\xf6\xa2\x7a\xb5\xad\x88\x9e\x2e\x09\xb8\x8b\x3b\xe1\x78\x1e\x5e\xf0\x34\x3e\x7e\x73\xb5\x88\x8f\xf3\x06\xc2\x9f\x09\x35\xaa\x06\x9f\xd7\x95\x12\x63\xce\x15\xb6\x4f\x3c\xb7\xca\x5e\x3d\x0c\x90\x47\x34\xfc\x3f\x1e\xba\x9f\x00\x00\x00\xff\xff\x03\x76\xa7\xd0\x10\x01\x00\x00")

func binReleaseBytes() ([]byte, error) {
	return bindataRead(
		_binRelease,
		"bin/release",
	)
}

func binRelease() (*asset, error) {
	bytes, err := binReleaseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/release", size: 272, mode: os.FileMode(509), modTime: time.Unix(1520022457, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binSupply = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x5f\xab\xe2\x30\x10\xc5\xdf\xe7\x53\xcc\xd6\x2c\xe8\x42\x37\xec\x9f\xd7\x2e\xd4\xb6\xd4\xb2\xb2\x95\xaa\xd0\xb7\x5a\x9b\xd8\x06\x6b\x12\x92\x74\xd9\x45\xfc\xee\x17\xad\xd7\x8b\x97\x9b\xa7\x33\xe1\x37\x73\x66\xce\xe4\x13\xdd\x0b\x49\xf7\xb5\xed\x60\x82\x9b\x4e\x58\xb4\x8d\x11\xda\xa1\x36\xea\xaf\x60\xdc\x22\xe3\x9a\x4b\xc6\x65\x23\xb8\xc5\x83\x32\x58\x4b\xac\xb5\x06\x00\xcb\x1d\xfa\x7c\x50\xa8\x85\xe6\x87\x5a\xf4\x00\xf3\x6d\xb6\x8c\xab\x38\x2b\x02\xf2\x0d\xa2\x30\x5a\x24\x63\xf1\x1d\xe2\x64\xb5\x1e\xf5\x8f\x51\x67\x71\x19\x90\x9f\x00\xfc\x9f\x56\xc6\xe1\xad\x73\x15\x46\xbf\x6f\xd0\x8e\x09\x23\xeb\x13\x47\x32\x35\xbc\x66\xbd\x90\x47\xf4\x0f\x48\xce\xf3\x70\xbd\xa8\xd6\xf9\xb6\x88\x92\xcf\xf4\xcb\x65\xb6\x03\xab\x06\xd3\x70\xf4\xc8\xd3\x04\x3a\x9e\x61\xa9\x90\xd6\xd5\x7d\x5f\xb5\xea\xab\xed\x3c\x50\x83\xd3\x83\xab\x98\x30\x01\x99\x9e\x8e\x8e\x9f\x34\xfa\x0c\x7d\x87\x76\xd0\xba\xff\x5f\x96\xe5\x0c\x78\xd3\x29\xf4\xfc\xeb\xfb\x85\xc5\x20\xa5\x90\x2d\xb6\x0a\xf7\x83\xe8\xd9\x1d\xf4\x20\xcd\x8b\x3c\xdf\x04\x24\x55\xd9\xe8\x11\x0b\x43\x5b\x85\x69\xbe\x0a\x37\x8b\xe0\x79\x1f\x7c\x8f\xdd\x72\x7f\xcc\xf4\x15\x92\xb7\xd5\xe8\x68\x81\xe7\xf3\x32\xfc\x93\x6e\xc3\x34\xb9\x5c\xee\x7f\xb4\xe9\x05\x7c\x80\xde\xcf\xbf\x5a\x79\xe8\x91\x47\xf4\xd7\xe2\x35\xfa\x87\xce\xe2\xd2\x83\x97\x00\x00\x00\xff\xff\xf3\x21\x3a\xf6\xfb\x01\x00\x00")

func binSupplyBytes() ([]byte, error) {
	return bindataRead(
		_binSupply,
		"bin/supply",
	)
}

func binSupply() (*asset, error) {
	bytes, err := binSupplyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/supply", size: 507, mode: os.FileMode(509), modTime: time.Unix(1520022521, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fixturesGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func fixturesGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_fixturesGitkeep,
		"fixtures/.gitkeep",
	)
}

func fixturesGitkeep() (*asset, error) {
	bytes, err := fixturesGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fixtures/.gitkeep", size: 0, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fixturesSimple_testSome_fileTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x48\xcd\xc9\xc9\x57\x08\xcf\x2f\xca\x49\xd1\xe3\x02\x04\x00\x00\xff\xff\x12\xc1\x8c\xfa\x0d\x00\x00\x00")

func fixturesSimple_testSome_fileTxtBytes() ([]byte, error) {
	return bindataRead(
		_fixturesSimple_testSome_fileTxt,
		"fixtures/simple_test/some_file.txt",
	)
}

func fixturesSimple_testSome_fileTxt() (*asset, error) {
	bytes, err := fixturesSimple_testSome_fileTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fixtures/simple_test/some_file.txt", size: 13, mode: os.FileMode(509), modTime: time.Unix(1519849181, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _manifestYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcf\xcd\x4a\xc3\x40\x14\xc5\xf1\xfd\x3c\x45\x5e\x20\xe9\xbe\xbb\x80\xa1\x08\x5a\xa1\xa2\xdb\xe1\x76\xee\x49\xbd\x78\x73\x33\xcc\x87\x10\x4b\xdf\x5d\x1a\x21\xba\x3b\x3f\xfe\xab\xd3\xb6\xad\x53\xb2\x4b\xa5\x0b\xf6\xcd\xf5\xfa\xd4\x1f\x0f\x6f\xfd\x61\xb8\xdd\x1c\x63\xa4\xaa\xc5\x7f\x21\x65\x99\x2d\xef\x1d\x23\xc2\x18\x16\x16\xcf\x88\x09\x81\x8a\xcc\xe6\x99\x0a\xfe\x57\xb9\xcb\x89\x05\xad\x0c\x3f\x8a\xde\xdd\x34\x6d\x73\x1a\xfa\x87\xe7\xa1\x9b\x78\xd5\xfb\x70\x7a\x7d\x7c\x39\xae\xfb\x2c\xb6\x63\x14\x84\xb2\x31\xcc\x53\x14\xc5\xe6\x5c\x63\xd4\x65\xe3\x28\x46\x2a\xdf\x7f\x3d\x41\x41\xf9\xd7\x13\x99\x8c\xc8\xa5\x5b\x26\x75\x31\xc1\x47\x0a\x9f\xeb\xc3\x1c\x92\xc4\x92\x77\xe7\x2a\xca\x5d\xfe\x70\x3f\x01\x00\x00\xff\xff\xc6\x78\x7d\xc3\x01\x01\x00\x00")

func manifestYmlBytes() ([]byte, error) {
	return bindataRead(
		_manifestYml,
		"manifest.yml",
	)
}

func manifestYml() (*asset, error) {
	bytes, err := manifestYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifest.yml", size: 257, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBratsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x51\x4b\xc3\x30\x10\xc7\xdf\xf3\x29\xce\xae\x0f\x2a\xa4\x51\x7c\x1b\xec\xa1\xd3\x31\x45\xdc\x64\xab\x4f\x22\x23\x4d\x6f\x6b\x68\x9a\x84\xdc\x75\x0a\x63\xdf\x5d\x1c\x0c\x86\x2f\x07\x77\xbf\x83\xfb\xdd\x7f\x74\xa5\x06\x4a\xaa\xb6\x5e\xa1\xdf\x43\xad\xa9\x15\x23\xa8\x90\x18\xb8\xd5\x7f\x05\xc1\x84\x3e\x5a\x87\x0d\xd4\xd6\xeb\x64\x91\x20\x6c\x4f\xa0\x1e\xac\x6b\xa2\x36\x1d\x81\x4e\x08\xdf\x21\x75\xd6\xef\x40\x13\xe0\x4f\x44\xc3\xd8\x08\x41\xc8\x20\x71\x08\x10\x6d\xc4\xad\xb6\x4e\x08\xd3\x40\x96\x5f\x43\x63\x93\xd7\x3d\x42\x96\x1f\xa6\xe5\xfa\x79\xb3\x5e\x7e\xac\x1e\x67\x9f\x77\x5f\xc7\x0c\x6e\x54\x51\x64\x82\xc2\x90\x0c\x42\x81\x7e\x9f\x8c\x28\x14\x99\x64\x23\x93\xb2\x9e\x58\x3b\xb7\xe1\x10\x1c\x15\xd4\x0a\x31\x7f\x59\xbc\xce\x97\x9b\xc5\xf2\x69\xb6\x9e\xe4\x87\xcb\x76\x2c\x1f\x8e\x67\x5e\x56\xd5\xec\xed\xbd\xba\x58\x39\x4f\xc6\xf2\xfe\x78\x32\xa3\x64\xd4\xad\xaa\x93\x66\x12\x02\x4d\x1b\x20\x5b\x0d\x1e\xa6\xe7\x57\x61\x35\x78\xb6\x3d\x42\x69\x0c\x46\xd6\xde\xe0\x29\x2e\xca\xc4\xce\xfa\x6e\x17\x40\x26\x90\x72\xeb\x74\x87\x25\x33\xf6\x91\x69\x92\xff\xbb\x06\xd2\x87\x06\x09\xf2\x4b\x51\xf1\x1b\x00\x00\xff\xff\xfe\x9d\xe5\x60\x8c\x01\x00\x00")

func scriptsBratsShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBratsSh,
		"scripts/brats.sh",
	)
}

func scriptsBratsSh() (*asset, error) {
	bytes, err := scriptsBratsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/brats.sh", size: 396, mode: os.FileMode(509), modTime: time.Unix(1520276966, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsBuildSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xb1\x4a\xc5\x30\x14\x80\xe1\x3d\x4f\x71\x8c\x77\xd0\x21\x8d\x2f\x70\x87\x2a\xa5\x0e\x62\xc1\xd2\x49\x44\xd2\xe4\xb4\x1e\x38\x26\x21\x31\xb5\x5a\xfa\xee\xa2\xe8\xe0\x78\xd7\x7f\xf8\xf8\xcf\xcf\x74\xc9\x49\x8f\xe4\x35\xfa\x05\x46\x93\x5f\x44\xc6\x37\x50\xb8\x96\x00\x91\x22\x4e\x86\x58\x08\xeb\x40\x1e\x2e\xc0\x51\xf2\xe6\x15\x41\x1e\xb6\xeb\xba\xbf\x7d\xee\xbb\xe1\xe1\xa6\x79\xbc\x7a\xda\x25\x5c\xea\xaa\x92\x22\x87\x92\x2c\x42\x85\x7e\x49\x56\x88\xb6\xeb\xfa\x23\x93\x2f\x2b\xcc\x01\xc6\x42\xec\x40\xb1\x9b\xd8\xcc\xf9\x28\x55\x06\xf5\x2e\x41\x05\xf8\x1e\xc8\x25\x46\xfe\x80\x6d\xbb\xab\xef\xdb\xa1\x6e\x9b\x7d\xff\x6d\xda\x32\x9d\x44\x4d\xe4\x0d\xd3\x27\xfe\xc7\xfe\xea\x0f\xf7\x15\x00\x00\xff\xff\x09\x7c\x6d\x88\xfa\x00\x00\x00")

func scriptsBuildShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBuildSh,
		"scripts/build.sh",
	)
}

func scriptsBuildSh() (*asset, error) {
	bytes, err := scriptsBuildShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/build.sh", size: 250, mode: os.FileMode(509), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsInstall_goSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xef\x6b\xdb\x30\x14\xfc\xae\xbf\xe2\xe2\x19\xba\x05\x64\xc7\x5d\xdc\xfc\x18\x19\x8c\xba\x94\x42\x5a\x83\x47\xb7\x0f\xa5\x0c\xd9\x92\x6d\x51\xd9\x32\xb2\xcc\x92\x6e\xfd\xdf\x87\x93\x65\x49\x0d\x83\xbe\x4f\x82\x77\xef\xbd\xbb\xd3\xbd\x1b\xf9\xa9\xac\xfd\x94\xb5\x25\x69\x85\x05\x15\x9d\x46\x23\x1b\x91\x33\xa9\x08\xb9\x8e\x7f\x7c\xbb\x4a\xbe\xde\xc4\x77\x2b\x27\xf0\x16\x5e\xe0\x10\xb1\x69\xb4\xb1\xb8\xd6\x37\x75\x6b\x99\x52\x91\x34\x2b\xc7\xb7\x55\xe3\x17\xda\x3d\xe2\x1d\x52\x3d\x71\x69\x40\x1b\xb8\xa7\x58\x42\x64\x8e\x07\x8c\x40\xf3\xd7\x0d\xbf\xd0\x3b\x2a\x85\xc6\xe3\x27\xd8\x52\xd4\xfd\xf5\xdb\x28\x5c\x39\x93\x70\x16\xcc\xe7\x17\x62\x91\x2e\x52\x36\x99\xcd\x66\x1f\xd3\x70\x7a\xce\x82\x40\x2c\xe6\xe1\x82\x4d\x1d\x72\x9f\xac\x57\xa5\xb5\x4d\xbb\xf4\xfd\xb4\x93\x8a\x37\x2c\x7b\x6a\xbd\x4c\xe9\x8e\xe7\xba\xab\xb9\xd9\x7a\xda\x14\x3e\x17\x8d\xa8\xb9\xa8\x33\x29\xda\xfe\x60\xa1\xdd\x5f\x47\xce\x2f\x9e\x92\x75\xb7\xa1\xac\xe2\x17\x53\xba\xeb\xdc\x46\xe1\x72\xb2\x9c\xbf\x78\x96\x19\xaf\x78\x26\x44\x64\xa5\x86\x43\xfb\xfa\x8c\x48\xff\xac\x95\x66\x1c\x85\xc6\xab\x45\x0e\xc9\x3a\xa3\x40\x5b\xd0\x35\x28\x35\xc2\x9a\x2d\x82\xf0\xf0\xa4\x5c\x28\xb6\xc5\x39\xdc\xfb\x64\x0d\xaa\xf1\xd7\xbf\x7f\x57\xa2\xf8\xfb\xdd\x3a\xfe\x12\xed\xf4\xbb\xef\x2b\x1e\xb6\x5d\x35\x40\xe1\x37\xb2\xce\x82\x72\x9c\xe1\xac\xb7\x33\xf8\xb0\xf3\xf6\x01\xee\xe9\x38\x46\x2b\xb8\x7b\x25\x78\x3c\x38\xbb\x57\x81\x7d\x8d\xc7\x57\x49\x12\x27\xe3\x31\x7a\x4c\x25\xdb\x8a\xd9\xac\x5c\xa2\xd0\x76\xb0\x4a\x6c\x1a\x91\x59\xc1\x0f\x0b\xfb\x34\x48\x8b\x80\xe4\x92\x10\xcb\x0c\x36\xcf\xf9\x90\x25\xbd\x1c\x04\xc0\x0c\x85\xf4\xd3\x6f\x0f\xc5\x7f\xa8\x5f\xea\x4e\x71\xd4\xda\x82\x1f\x3f\xe5\x84\xdf\x9f\x00\x00\x00\xff\xff\x59\xa9\xe5\x13\xe9\x02\x00\x00")

func scriptsInstall_goShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsInstall_goSh,
		"scripts/install_go.sh",
	)
}

func scriptsInstall_goSh() (*asset, error) {
	bytes, err := scriptsInstall_goShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/install_go.sh", size: 745, mode: os.FileMode(509), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsInstall_toolsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x4f\x4b\x03\x31\x10\x05\xf0\x7b\x3e\xc5\x74\x2d\xa5\x15\x36\xf1\xee\x49\x45\xf0\x26\x58\x3c\x95\x22\xf9\x33\xc9\x0e\x4d\x67\x96\x64\x53\x10\xf1\xbb\x4b\xc1\xf5\xa0\x1e\x7a\x99\xb9\x3c\x7e\xef\x5d\x2d\x8c\x23\x36\xce\xd6\x41\x55\x9c\xa0\xc7\x26\x30\xd2\x88\xd1\x52\x56\xca\x07\xe8\x96\x6b\x08\x54\xd8\x1e\x11\xba\xe5\xc7\xfd\xdd\xf6\xe9\x6d\xfb\xfc\xfa\xf2\xf0\xb8\xbb\xd9\x7f\x76\xb0\x31\x5a\x77\xaa\x4a\x2b\x1e\x41\x23\x9f\x8a\x57\x8a\x22\xec\x60\x01\x7d\x04\x7d\xe6\x13\xf1\x21\x09\xec\x6f\x61\x1a\x90\xd5\xda\x07\xa8\xc5\x9b\x6b\x73\x42\x0e\x52\x4c\xa2\x69\x68\x4e\x7b\x39\x1a\xe1\x4a\xdf\xf9\xf9\xc1\x6a\x05\x49\x80\xb8\x4e\x36\xe7\x8d\x8a\xf4\xdb\x77\x8d\x72\x18\xad\x3f\xf4\xe7\x63\x13\x96\x8b\xba\x7c\x96\x16\xa2\x34\x0e\xe5\xdd\x64\x72\x3f\x8c\x99\x99\xff\xe4\x3f\x6b\xbe\x02\x00\x00\xff\xff\x59\x76\x9d\xd6\x44\x01\x00\x00")

func scriptsInstall_toolsShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsInstall_toolsSh,
		"scripts/install_tools.sh",
	)
}

func scriptsInstall_toolsSh() (*asset, error) {
	bytes, err := scriptsInstall_toolsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/install_tools.sh", size: 324, mode: os.FileMode(509), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsIntegrationSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\xcf\x4f\x6b\x32\x31\x10\x06\xf0\x7b\x3e\xc5\xbc\xeb\x1e\xde\x16\x66\x23\x2d\xf4\x20\xec\x41\xad\xd8\x52\xaa\xc5\x5d\x4f\xa5\x48\xcc\x8e\x26\x18\x93\x25\x93\xb5\x07\xf1\xbb\x17\x5a\x84\xa5\x5f\xa0\xc7\xf9\x03\xcf\xef\x19\xfc\x93\x1d\x47\xb9\xb5\x5e\x92\x3f\xc1\x56\xb1\x11\x03\x58\x75\x9e\x21\x19\x02\xeb\x13\xed\xa3\x4a\x36\x78\x48\xc4\x89\x05\x53\x02\xa4\x2e\x40\x6b\x5b\xda\x29\xeb\x84\xd0\x0d\x64\xf9\x7f\x68\x6c\xf4\xea\x48\x90\xe5\xe7\xc9\xb8\x7a\xda\x54\xcb\xf5\x6a\x3a\x7b\x1f\x7e\x5c\x32\xb8\x91\x45\x91\x09\x0e\x5d\xd4\x04\x05\xf9\x53\xd4\xa2\x90\xac\xa3\x6d\x13\x4b\xeb\x39\x29\xe7\x36\x29\x04\xc7\x05\x1b\x21\xe6\xcf\x8b\x97\xf9\x72\xb3\x58\x3e\xce\xaa\x32\x3f\xf7\xc7\x11\xde\x5f\xae\xf7\x71\x5d\xcf\x5e\xdf\xea\xde\xcb\x75\x33\xc2\xbb\xcb\xb7\x8c\xa3\x96\xb7\xb2\xd7\x43\x08\xd2\x26\x40\xb6\xea\x3c\xac\xbd\x56\xda\x50\x03\x93\xce\xba\xa6\x55\xfa\x90\x89\xbd\xf5\x87\x7d\x00\x8c\x80\xb8\x73\xea\x40\xe3\x94\xe8\xd8\x26\x2e\xf3\x5f\x19\x80\x3e\x34\xc4\x90\xf7\x79\x80\xc8\x2e\x7c\x56\x2d\xe9\xda\x44\x62\x13\x5c\x53\x3e\x0c\x01\x11\x10\x7f\xd2\xca\x9d\x72\x4c\x7d\xc7\xf4\x0f\x14\xe2\x2b\x00\x00\xff\xff\x37\xfc\x7a\x68\xfb\x01\x00\x00")

func scriptsIntegrationShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsIntegrationSh,
		"scripts/integration.sh",
	)
}

func scriptsIntegrationSh() (*asset, error) {
	bytes, err := scriptsIntegrationShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/integration.sh", size: 507, mode: os.FileMode(509), modTime: time.Unix(1520277068, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scriptsUnitSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\xb1\x4a\x34\x31\x10\x00\xe0\x3e\x4f\x31\xff\xde\x15\xbf\xe2\x26\xbe\x80\x85\x8a\x60\xa7\xdc\x61\x25\x72\xcc\x66\xe7\x76\x87\x8d\x93\x30\x33\xb9\x46\x7c\x77\xc1\xca\xfe\xe3\xdb\xfd\x4b\xdd\x34\x4d\x2c\x89\xe4\x02\x13\xda\x1a\x76\x70\xe8\x62\xe0\x2b\x41\x17\x76\x70\x32\x37\x38\x57\x05\x5f\xd9\x60\xea\x5c\xe6\x86\x79\x0b\xc1\xc8\x61\xa4\x5e\xa1\x71\xa3\x33\x72\x09\x21\xcf\x30\xec\xff\xc3\xcc\x2a\xf8\x49\x30\xec\xbf\x1e\xee\x8f\xcf\xa7\xe3\xcb\xdb\xe1\xf1\xe9\xfd\xf6\xe3\x7b\x80\xab\x14\xe3\x10\xac\x76\xcd\x04\x91\xe4\xa2\x39\xc4\x64\x59\xb9\xb9\x25\x16\x73\x2c\xe5\xe4\xb5\x16\x8b\xb6\xfe\x96\xa6\x39\x5d\x27\x16\xa7\x45\xd1\xb9\x4a\x8a\x31\x2c\x2c\xdb\x52\x61\x54\x18\x6d\xe3\xf6\x8a\x79\xc3\x85\xee\x26\x45\xb7\x9b\x3f\x36\xfc\x04\x00\x00\xff\xff\x47\xb5\x22\x14\xe5\x00\x00\x00")

func scriptsUnitShBytes() ([]byte, error) {
	return bindataRead(
		_scriptsUnitSh,
		"scripts/unit.sh",
	)
}

func scriptsUnitSh() (*asset, error) {
	bytes, err := scriptsUnitShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/unit.sh", size: 229, mode: os.FileMode(509), modTime: time.Unix(1520277102, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageGopkgToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd0\x41\x4f\x02\x31\x10\x05\xe0\x7b\x7f\x45\xb3\x9c\xdd\xb2\x2c\x0b\x68\xc2\xd9\xbb\x57\xc2\x61\x3a\x9d\x2d\x13\xda\xce\xda\x76\x89\xf8\xeb\x0d\xf1\x20\x26\x9a\xe8\x79\xde\xfb\x26\x79\x0b\xfd\x42\x23\x65\x5d\x45\x9f\x6a\x9d\xca\x93\x31\x9e\xeb\x69\xb6\x2d\x4a\x34\x5e\x02\x24\x6f\x1c\x4d\xc6\x06\xb1\x26\x42\xa9\x94\x8d\x13\x2c\xe6\x59\xa6\xb3\x6f\xab\xc4\xd0\x46\xa7\x16\x7a\x94\xac\x1d\x55\xe0\x40\x4e\x7f\x1d\xb5\x13\x9c\x23\xa5\x0a\x95\x25\xb5\x4a\x65\x7a\x9d\x39\x93\xd3\x7b\x7d\x68\xbe\xfd\x12\x1f\xc8\x94\xd9\xa2\xc4\x08\xc9\x95\xe6\xa8\xd4\xe1\x80\x92\x4a\xcd\xc0\xa9\x1e\x8f\x2a\x41\x24\xbd\xd7\xf7\x3d\x0c\x32\xbb\x51\xe6\xe4\xf2\xd5\x04\xb6\x76\xe6\xe0\x26\xc0\x73\xa3\x6c\x86\x84\xa7\x5b\x9e\x13\xd7\x87\x6e\x18\x56\xdd\xe3\x7a\xb7\x6d\xfe\xe2\x4a\x2a\x6c\x3c\xa7\xb3\x97\x7b\xe9\x73\x82\x7f\x08\x12\xc9\xc3\x2f\x82\x5c\x28\x67\x76\xf4\x73\x9f\x02\xbc\x43\x0e\xc6\xcb\x94\xe5\xed\xda\xa8\x4c\x17\x2e\x2c\xe9\x96\x03\x40\x0b\xbb\x7e\xec\x37\x30\x0c\x80\x7d\x87\xd6\x6e\x3b\x5c\x6e\x86\xf5\x16\xfa\xd5\x0e\x97\xe8\xba\xcd\x72\xdd\xa8\x8f\x00\x00\x00\xff\xff\x68\xfb\x80\xdd\xe3\x01\x00\x00")

func srcLanguageGopkgTomlBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageGopkgToml,
		"src/LANGUAGE/Gopkg.toml",
	)
}

func srcLanguageGopkgToml() (*asset, error) {
	bytes, err := srcLanguageGopkgTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/Gopkg.toml", size: 483, mode: os.FileMode(436), modTime: time.Unix(1519842631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageBratsBrats_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x51\x6b\x23\x37\x10\x7e\xb6\x7e\xc5\xa0\x87\xa2\x3d\xcc\x6e\x2f\xd0\x52\x0a\x79\x48\xe2\xcb\x25\x85\x24\x87\x37\x69\x1f\x8e\x23\xc8\xd2\xac\x57\x44\x2b\xa9\xd2\x28\x3d\xf7\xc8\x7f\x2f\x5a\x7b\xef\x9c\xc6\xa1\xa5\xf4\x65\x2d\xa4\xf9\xbe\xd1\xf7\xcd\x68\x1c\xa4\x7a\x90\x6b\x84\x55\x94\x94\xee\x09\x13\x31\x66\x86\xe0\x23\x81\x60\x33\xde\x59\xb9\xe6\x6c\xc6\x7d\x2a\xdf\x20\xa9\x6f\x3a\x63\xb1\x2c\xca\x46\xa2\x68\xdc\x7a\x3c\x2b\x50\xe3\xc6\x60\x32\x03\x72\xc6\x66\x7c\x6d\xa8\xcf\xab\x5a\xf9\xa1\x51\xd6\x67\xdd\xf9\xec\x74\xdc\x34\xd6\xac\x56\xd9\x58\x5d\x92\x37\x63\xe6\x1e\x6d\xc0\xc8\xff\x2d\x46\x65\xb2\x32\xa5\x92\xa4\x86\x7d\x88\x77\xc9\x34\x6b\xe3\x1e\xd6\x9e\x1f\x3e\xf3\x03\xae\x25\x67\x15\x63\x5d\x76\x0a\x8c\x33\x24\x2a\xf8\xc2\x66\x45\x6a\xdd\x8e\x82\x7e\x95\x51\x7c\xb7\xcb\x51\x2f\xb0\x93\xd9\xd2\x15\x0e\x3e\x6e\xe6\xc0\x87\x71\xc1\xe7\xc0\xdf\x1e\xfd\x74\x55\x7e\xf5\x36\x02\xb6\x27\xd0\xf9\x08\x21\xa7\x1e\x35\xc8\x10\x12\xaf\xfe\x91\x7b\x61\xd2\x43\xe1\x31\xe9\xa1\xf0\x1d\xfd\xf0\xe3\x33\xde\xb2\xff\x2a\xeb\x07\x19\x13\x8a\x8a\x3d\x31\xf6\x28\x23\xdc\xc3\x31\xb4\x1b\xa7\xfa\xe8\x9d\xf9\x13\xf5\x29\x76\x3e\x62\x9b\x0d\xa1\x28\x82\x45\x05\x1f\x3f\xad\x36\x84\x45\x72\xd3\xc0\x32\x3b\xf0\x4e\x21\x9b\x45\xa4\x1c\x1d\xec\x95\xa3\xbe\x74\x86\x4e\xc3\x42\x92\x14\x55\x7d\x25\x63\xea\xa5\x2d\xa9\xe6\x30\x52\x69\x49\x72\xc7\x56\x3d\xa3\x03\x69\x2d\x38\xaf\x31\xb1\xd9\x3e\x5f\x61\xaa\xef\xdc\xb0\x63\x2a\xf8\x8a\xb1\xd9\xbb\xcf\x01\x15\x89\xc9\x94\x33\x1f\x36\x67\xdd\x85\x1f\x50\x54\x55\x7d\xeb\x45\x9b\x95\x42\xd4\xa2\xaa\xd8\x6c\x0a\x6a\x11\xf5\x52\x3a\xed\x07\xb1\xb7\xbb\xf3\xb3\x25\xed\x73\xf9\x62\x8c\x70\x0c\xef\xc7\x7e\xf8\x2d\x1a\xc2\xc8\x9e\xaa\xc3\x46\x9d\x74\x84\xf1\x99\x4f\xaf\x28\x9a\xd4\x57\x2f\x1c\xfc\x9b\x8e\x05\x5a\x24\xbc\x89\xa1\x97\x0e\xf5\xd2\x67\xc2\x74\x40\xd1\x41\xd4\xe9\xd4\xea\x62\xf7\xc4\xea\x25\x06\x2b\x15\x8a\x17\x7e\x9e\x49\xd5\xa3\x9e\x03\xbf\xff\xfa\x3e\x4a\xf3\xf0\x39\xbc\xad\xfe\xff\x6c\x77\x4e\xfd\x97\x7c\xbe\x50\x0e\xfe\xf1\xd5\xfb\x9f\x1b\x8b\x2f\xd0\x4f\xd3\x2b\xbd\xc5\x44\xa7\x05\x28\x08\xde\xec\x26\x4d\x7d\x3b\x56\x60\x89\x6b\x93\x08\xe3\xb9\x34\xf6\x42\x3a\x6d\x31\x8a\xb2\xae\xd8\x6c\x99\x5d\x1b\x50\x25\x41\x73\xe0\x23\x1c\xc6\x02\xf3\xf1\xb5\x8c\xc4\xa5\xd7\xb6\xc4\x8f\x18\x93\xf1\x0e\xb6\x0e\x54\xf0\x66\xb2\xe8\x24\x84\x92\x47\x9b\x38\x87\xd2\x4f\x3f\x1f\xc3\x7e\xa7\x9e\x9b\xcf\x94\x23\x8a\x69\x2c\xd6\xbf\x78\xe3\x5e\xaa\x3c\x0d\x8b\x42\xc0\xbb\x6d\x78\x2a\x96\x8d\x41\x7c\xcf\x25\x8c\xb1\x58\x70\xed\x49\x5c\xc8\x47\xbc\x51\x2a\xc7\xb8\xb5\x82\xcd\x8a\x28\xc1\x2f\x87\x60\x71\x40\x47\xdf\xae\x3e\x8e\x86\x8d\xcf\x11\xbe\x16\xa4\x2e\xe3\xa1\x69\xe0\xf6\x66\x71\x03\x67\x11\x25\x61\x99\x1a\xd1\x87\x68\xca\x5a\x63\x40\xa7\xd1\xa9\x0d\x4c\xba\xcb\xfd\x81\x3c\x50\x8f\x30\x5d\x12\xb4\x89\xa8\xc8\xc7\xcd\xc8\x06\x20\x4c\x8d\xf5\x2e\xc4\x22\x38\x44\x8d\xba\xa0\x34\x12\x2a\x02\xe9\x4a\x1a\x30\x0e\x56\xc6\x35\xdb\xcd\x72\xf7\xdd\x6c\x99\x7c\xbb\xc6\x3f\x84\x36\xf1\x5b\x19\x3e\xe4\xd4\x9f\x84\x20\x0a\x78\xdf\xf8\xb1\xc2\x3b\x73\x64\x08\x75\x89\x3b\xf4\x84\x1e\xd1\x51\x96\xd6\x6e\xc6\xa8\x4b\x97\x48\x3a\x85\x2d\x49\xc2\x34\x87\xa3\xef\xdf\x94\xbf\xa4\xba\x45\xe5\x9d\xae\xea\xb6\xf7\xd9\x6a\xf1\xee\xf7\x2c\xad\xf8\xf8\x69\x5b\xf1\x2f\x7c\x79\x77\x7d\x7d\x79\xfd\x9e\x3f\x95\xce\x63\x7f\x05\x00\x00\xff\xff\xa3\xb0\x9f\x5b\x19\x07\x00\x00")

func srcLanguageBratsBrats_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageBratsBrats_suite_testGo,
		"src/LANGUAGE/brats/brats_suite_test.go",
	)
}

func srcLanguageBratsBrats_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageBratsBrats_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/brats/brats_suite_test.go", size: 1817, mode: os.FileMode(436), modTime: time.Unix(1520347396, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageBratsBrats_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x6f\x9b\x4c\x10\xc6\xcf\xec\xa7\x18\x71\x82\x37\x31\xbe\xbc\xea\xad\x07\x1c\xbb\x51\xa4\xc8\x8e\x64\x27\x55\x55\x47\xc9\x02\x03\x8c\xb2\xec\xae\xf6\x8f\x6b\x1a\xf9\xbb\x57\x4b\x1c\xc7\x39\x58\xb5\x7a\xe0\xc0\xf2\xcc\x8f\x99\x67\x9e\xd5\xbc\x7c\xe1\x0d\x42\x61\xb8\xb3\x4f\x0e\xad\x63\x8c\x3a\xad\x8c\x83\x84\x45\x71\x43\xae\xf5\x45\x56\xaa\x6e\x5c\x0a\xe5\xab\x5a\x79\x59\x99\x7e\x2c\xa8\x28\x3c\x89\x2a\x94\x8f\x87\xda\x16\x85\x46\x13\x9f\x5b\x53\x7a\x27\xb8\xb5\x31\x8b\x32\x38\xae\x50\xd2\xd2\xb8\x21\xf9\xd2\xa8\x13\xdf\x54\x87\x0d\x8f\x59\xca\xd8\x78\x0c\xab\xc5\x74\x01\xab\x16\xa1\x56\x42\xa8\x5f\x24\x1b\x08\x33\x00\x59\xd0\x28\xab\xf0\x5e\x60\xc9\xbd\x45\x70\x2d\xf6\x50\x7a\x63\x50\x3a\xd1\x43\xcd\x49\x64\x01\xf1\x43\x79\x90\x88\x15\x38\x05\x1d\x7f\x19\x84\x1d\x68\x6e\x2d\x14\x3d\x50\xa7\x05\x76\x28\xdd\x80\x6e\x11\xae\x94\xee\x27\x61\x60\xa8\xbd\x2c\x1d\x29\x09\x24\xdf\xec\x7b\x33\xe2\xc9\x7a\x72\x38\x58\x99\x35\x8a\x6d\xb8\x81\x27\xf8\x0a\x77\x53\xb4\xa5\xa1\x02\x93\xf8\xf5\xf5\x36\x9f\x5f\xdf\xe7\xd7\xb3\xdd\x0e\x0e\x96\xc4\x97\x03\x31\x49\xe1\x95\x45\x47\x96\x66\xf7\x32\x68\xdc\xe4\x5d\xf8\x19\x10\x5f\x7e\xb4\x94\x7e\x2e\x9c\xa2\x16\xaa\x27\xd9\xe4\x32\xd7\xfa\x3b\xb9\x36\x97\xf7\xba\xe2\x0e\xab\x07\x34\x96\x94\x5c\xd4\xab\x16\x97\xbc\xc3\x0f\xf8\x29\xd8\xd2\xf1\x86\x64\x13\x28\x07\xf1\xaa\xe5\x6e\x89\xce\xce\x16\xb7\x67\x37\x75\xc4\xc9\xa7\xa8\x03\xe2\xc6\xce\x95\x5b\xb5\x78\xcb\x83\x69\xff\x42\xba\xf2\xd6\xa9\xee\xd0\xd7\x70\x64\xb0\x0a\x6b\xe3\xc2\xde\xc8\x29\x86\x34\xa0\x2c\x09\x6d\xf2\x7c\xcc\x5f\x8f\x7e\xae\xab\x75\xf6\x78\xb1\x1e\x09\x92\x7e\xbb\x1e\x6d\xbf\xfc\x3f\x1c\xf2\x51\xfd\x78\xb1\xce\x5c\xf3\xfb\xf9\x6f\x16\xef\xdd\x9d\x6d\xb1\xf4\x8e\x17\x02\xef\x8c\xaa\x49\xe0\xb2\x34\xa4\xcf\x1f\x68\x0f\x7b\x5f\xd6\x12\xa5\x25\x47\x1b\x9c\xc9\x0d\x19\x25\x43\x0a\x1f\xb8\xa1\xf0\x03\x7b\x72\x4f\xdf\x94\xc9\x85\x58\x7a\x1d\xee\xf0\x61\xd1\xf6\x74\x13\xfb\xd8\x6d\xde\x84\x60\x9d\x21\xd9\x5c\x02\xd7\x1a\xfe\xdb\xdf\xd2\x2c\xd7\x7a\x88\x65\x74\xe7\x6d\x9b\x6b\x9d\x70\xad\x53\xc6\xa2\x68\xd2\x27\x71\xa5\xd0\x02\x07\xd7\x92\x6c\x3e\x85\x38\x8a\x66\x5b\x8d\xa5\x1b\xd4\xd9\x4a\xcd\x95\x4b\x26\x38\x27\x91\xa4\x29\x8b\xa2\x5d\xca\xc2\xb3\x4b\xd9\x9f\x00\x00\x00\xff\xff\xf3\x0b\xad\xb4\x85\x04\x00\x00")

func srcLanguageBratsBrats_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageBratsBrats_testGo,
		"src/LANGUAGE/brats/brats_test.go",
	)
}

func srcLanguageBratsBrats_testGo() (*asset, error) {
	bytes, err := srcLanguageBratsBrats_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/brats/brats_test.go", size: 1157, mode: os.FileMode(436), modTime: time.Unix(1520264471, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeCliCli_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x6a\xc3\x30\x10\x80\xe1\x59\xf7\x14\x87\x26\xa9\x14\xfb\x21\x0c\xa6\xb3\xed\xbd\xa8\xea\x55\x3d\x2c\x9d\x8c\x75\x5a\x12\xf2\xee\xc1\x90\x31\xdb\x0f\x1f\xfc\x47\x88\x7b\x48\x84\x25\xb0\x7c\x2b\x35\x05\xe0\x72\xd4\x53\xd1\x81\x19\xd0\x26\xd6\xff\xfe\x33\xc4\x5a\xc6\x2a\x8d\xc7\xc4\xb2\xa7\x6a\xdf\x5b\x2d\x94\x82\x05\x30\xf6\x3a\xb1\x24\x0b\x1e\xe0\xaf\x4b\xc4\x8d\x9a\x4e\x99\x9d\xe2\xc7\xcb\x86\xcd\xe3\x1d\xcc\x42\x89\x9b\xd2\x39\x07\xce\x5f\x41\x7e\x33\x9d\xee\x6a\x0f\x66\xe9\xb2\x1e\x14\x9b\xd3\x4f\xb4\x33\x4b\xc8\x7c\x23\x9c\x32\xe3\xda\x59\xc9\x7a\x78\xc0\x33\x00\x00\xff\xff\x09\x2d\x2d\xe4\xc0\x00\x00\x00")

func srcLanguageFinalizeCliCli_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeCliCli_suite_testGo,
		"src/LANGUAGE/finalize/cli/cli_suite_test.go",
	)
}

func srcLanguageFinalizeCliCli_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeCliCli_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/cli/cli_suite_test.go", size: 192, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeCliMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xcd\x6a\x84\x30\x14\xc5\xf1\xb5\x79\x8a\x53\x17\xa2\x1b\x43\xb7\x05\x17\xd2\x8a\x9b\x52\xa1\x1f\x0f\x10\xe2\x4d\xbd\x6d\x4c\xc4\xc4\x52\x5a\x7c\xf7\x61\xe2\xcc\x62\xb6\xe7\x7f\xf8\x2d\x4a\x7f\xab\x4f\xc2\xac\xd8\x09\x21\x25\xf2\xe7\xf6\xa5\xff\x68\xfb\x4e\x1a\x76\xca\xf2\x1f\xe5\xe7\xfd\x7d\x78\x1a\x1e\xf0\x65\x8a\x9f\x09\x6f\x5a\x19\xe3\xed\x08\x8e\x81\xac\xc1\xe8\x29\xc0\xf9\x08\x47\x34\x22\x7a\x68\x3f\x2f\x6c\xa9\x16\x66\x73\x3a\xd1\x65\x85\x7f\x91\x49\x89\xc3\x79\x54\xd6\xe2\xea\xd7\xaf\x9b\xc3\x44\x2b\xa5\x03\xad\x2b\x9a\x9b\x56\x16\xa1\x4a\x89\x4d\xaa\x77\x0d\x1c\xdb\x8b\x97\xf9\x50\x77\xbf\x1c\xcb\xfb\xe3\xb3\x8b\x5d\x9c\x02\x00\x00\xff\xff\x33\x9d\x68\x79\xd4\x00\x00\x00")

func srcLanguageFinalizeCliMainGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeCliMainGo,
		"src/LANGUAGE/finalize/cli/main.go",
	)
}

func srcLanguageFinalizeCliMainGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeCliMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/cli/main.go", size: 212, mode: os.FileMode(436), modTime: time.Unix(1520262805, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeFinalizeGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x4d\x6f\xdb\x30\x0c\x3d\x9b\xbf\x82\xf0\xc9\x2e\x06\xf9\xde\x5b\xdb\x74\x45\x81\x6e\x19\xd6\x7d\x1c\x86\x1d\x14\x9b\x56\x84\xc9\x92\x40\x53\x40\xb3\x20\xff\x7d\xb0\x63\xbb\x49\x86\x01\x3b\xd5\x07\x43\xa6\x1e\xf9\xf8\x1e\xcd\xa8\xeb\x5f\xda\x10\xb6\xd6\x6b\x67\x7f\x13\x80\xed\x62\x60\xc1\x02\xb2\xdc\x86\x1c\x20\xcb\x8d\x95\x6d\xda\xa8\x3a\x74\x55\xed\x42\x6a\xda\x90\x7c\xc3\xbb\xca\xd9\xcd\x26\x59\xd7\x0c\x35\x72\x28\x01\x64\x17\x09\x9f\x45\x1b\x62\xb4\x5e\x88\x5b\x5d\x13\xee\x21\xab\xaa\x2f\xeb\xd5\xfa\x1a\x9f\x89\xb0\x0b\x4c\x18\xa2\xd8\xe0\x7b\xd4\x82\x5b\x91\xd8\x5f\x57\xd5\xff\xb0\x54\x1b\x17\x36\x55\xa7\x7b\x21\xae\xfa\x91\x48\x99\x00\xd9\xed\x00\x58\x59\x2e\x4a\xec\x85\xad\x37\x90\xad\x28\xfe\x15\xe8\x1f\x9b\x97\x8b\xc8\x19\xe6\x30\x49\xf8\xa0\xbd\x6d\xa9\x97\x37\x10\xd1\x4d\x54\xa3\x8c\x1b\xe7\x56\x14\xc9\x37\xe4\xeb\xdd\x37\xe2\x7e\x28\x5f\x1c\x9b\x2b\xf1\xc7\xcf\xd7\xc6\x5b\x9d\x9c\x4c\x88\x05\x50\x9c\xb2\xa8\xd7\x4a\xef\x90\x98\x03\x97\x90\x3d\xfa\x5e\xf4\x29\xc9\xbf\x53\xe6\xa2\x63\xea\x92\xb9\xf6\x6e\x77\x4e\x7b\x89\x9c\x3d\xbc\x0b\x5d\xa7\x7d\xf3\x06\x16\xd6\x47\xa6\xd1\xc1\xfb\x17\xaa\x93\xd0\xd2\x9b\x0d\xea\x3b\x5b\x21\x3e\x3b\xce\xb7\x4a\xa9\x0b\x99\xeb\x24\x31\x49\xd1\x58\x5e\x40\x91\x83\x61\xdd\x2d\xdf\x9a\x4d\x7f\x9a\xb9\x70\x4d\x26\xcf\x06\xbc\x9f\x36\x6a\xac\x94\x6a\x19\xf4\x2f\x3f\xd6\x7c\x80\x6c\x5a\x17\x9c\xf6\x06\xb2\xd9\x38\x3c\x1b\xcd\x14\x85\xec\x29\x18\x1c\x9f\xab\xb3\xfb\xa7\x60\x86\xec\x03\x40\x9b\x7c\x8d\x45\x8b\x57\x4b\x03\x25\x7e\x4e\xbe\x98\x34\x0e\x6d\xb4\x03\x5c\xdd\x92\xb1\xfe\x59\x28\x16\xf9\x5d\xf0\xad\x35\x69\xd0\x81\xfb\xfd\xd3\xcd\xc7\x87\xaf\x37\x0f\xf7\x87\x43\x5e\xc2\x30\x34\x3c\x4e\xed\x13\x53\xd4\x4c\xa8\x63\xc4\x36\x30\x3a\x9d\x7c\xbd\xc5\x2d\x31\x8d\x2f\xa5\x14\x40\xc6\x24\x89\x3d\x7a\xeb\xe0\x00\x7f\x02\x00\x00\xff\xff\xfb\x16\xbb\x22\x5f\x04\x00\x00")

func srcLanguageFinalizeFinalizeGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeFinalizeGo,
		"src/LANGUAGE/finalize/finalize.go",
	)
}

func srcLanguageFinalizeFinalizeGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeFinalizeGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/finalize.go", size: 1119, mode: os.FileMode(436), modTime: time.Unix(1520262715, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeFinalize_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xc1\xca\x83\x30\x10\x04\xe0\x73\xf6\x29\x96\x9c\x92\x9f\x1f\x7d\x0b\xe9\x59\xbd\x97\x34\x5d\xd3\x45\xdd\x88\xd9\x5c\x5a\xfa\xee\x45\xb0\xb7\xde\x06\x66\xf8\x66\x0b\x71\x0e\x89\x70\x62\x09\x0b\x3f\xe9\xaa\x54\x14\x80\xd7\x2d\xef\x8a\x0e\x4c\x83\x36\xb1\x3e\xea\xad\x89\x79\x6d\xb3\x14\x6e\x13\xcb\x9c\xb2\xfd\xdd\xe5\x95\x52\xb0\x00\xc6\x1e\x12\x4b\xb2\xe0\x01\xa6\x2a\x11\x47\x2a\xda\x9d\x3f\x4e\xf1\xef\x1c\x34\xa3\xc7\x17\x98\x9e\x12\x17\xa5\xbd\x0b\xbc\x5c\x82\xdc\x17\xda\xdd\x91\x3d\x98\xbe\xca\xb0\x51\x2c\x4e\xff\xd1\x7e\x05\x1c\x2a\x2b\x59\x0f\x6f\xf8\x04\x00\x00\xff\xff\x84\x15\xaf\xba\xc5\x00\x00\x00")

func srcLanguageFinalizeFinalize_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeFinalize_suite_testGo,
		"src/LANGUAGE/finalize/finalize_suite_test.go",
	)
}

func srcLanguageFinalizeFinalize_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeFinalize_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/finalize_suite_test.go", size: 197, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageFinalizeFinalize_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbb\x8a\xf3\x30\x10\x85\x6b\xeb\x29\x06\x55\x12\xfc\xb1\xfa\x80\x8b\x1f\x92\x85\xad\xd2\xa4\x0f\xca\x68\x2c\x0b\xdb\x1a\xaf\x2e\x7b\x25\xef\xbe\x38\xeb\x2d\x02\x5b\x0e\xdf\xe1\x3b\xc3\x59\x2c\x8e\xd6\x13\xf4\x21\xda\x29\x7c\xd2\xa5\x50\x2e\x42\x18\xe3\x79\xef\x29\x52\xb2\x85\x60\x66\x1c\x3d\x45\xd8\x65\xae\x09\xa9\xfb\x0d\xb7\x9e\x61\xb7\x73\x94\x4b\x88\xb6\x04\x8e\xdd\x9a\xcc\x77\xc7\x0f\xdb\xf4\xdd\xa3\x3e\xcc\x0b\xa7\x02\x4a\x34\x2d\x48\x1f\xca\x50\xaf\x2d\xf2\x6c\x38\xe6\x60\x7c\x88\xa3\x67\xf9\x37\xe3\x99\xbc\x95\x42\x0b\xf1\x6a\x13\x5c\xa0\x83\x03\x65\x4c\xe1\x4a\x4a\x3e\x6d\x1d\xf2\x1f\xf4\x35\xa2\xd2\xf0\x25\x9a\xe7\xa2\x64\xae\x88\x44\x2e\x3f\x80\xe6\xf8\xbe\x10\x16\xd5\xdb\x29\x93\x6e\xcf\xac\x8e\x2f\xd5\x4e\xdb\xad\x45\x73\xd3\xa2\x31\x06\xce\xa7\xc3\x69\x0f\xff\x9d\x83\xf5\xf5\x0c\x03\x25\x82\xc2\x80\x03\xe1\x08\xc8\xb1\x0f\xbe\x26\x02\x47\x0b\x45\x47\x11\x3f\xee\x25\xeb\x1a\x19\xde\x38\x8d\xe2\xa6\xc5\x77\x00\x00\x00\xff\xff\x7d\xd5\xa2\x39\x66\x01\x00\x00")

func srcLanguageFinalizeFinalize_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageFinalizeFinalize_testGo,
		"src/LANGUAGE/finalize/finalize_test.go",
	)
}

func srcLanguageFinalizeFinalize_testGo() (*asset, error) {
	bytes, err := srcLanguageFinalizeFinalize_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/finalize/finalize_test.go", size: 358, mode: os.FileMode(436), modTime: time.Unix(1520262871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageHooksHooks_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xb1\x8e\x83\x30\x10\x04\xd0\xda\xfb\x15\x2b\x57\xf6\xe9\x04\x7f\x71\xa2\x06\xfa\x93\xcf\xb7\x59\x56\x80\x17\xe1\x75\x15\xe5\xdf\x23\xa2\x94\xe9\x46\x7a\x9a\x99\x23\xe5\x35\x31\xe1\xa2\xba\xd6\x5f\xa3\x6a\x00\xb2\x1f\x7a\x1a\x06\x70\x1d\x7a\x16\x5b\xda\x5f\x97\x75\xef\xb5\x54\xe9\x59\xca\xca\xea\x3f\x9b\xee\xc4\xc9\x03\x38\x7f\x2d\x49\x61\x0f\x11\xe0\xd6\x4a\xc6\x99\xaa\x0d\xd7\x49\x30\xfc\x7a\x6b\x37\x47\xbc\x83\x1b\x89\xa5\x1a\x9d\x3f\x49\xb6\x21\x95\xff\x8d\xce\x70\xe5\x08\x6e\x6c\x65\x3a\x28\xd7\x60\xdf\xe8\x5f\x75\x9c\x9a\x18\xf9\x08\x0f\x78\x06\x00\x00\xff\xff\x27\x86\xa8\x48\xbc\x00\x00\x00")

func srcLanguageHooksHooks_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageHooksHooks_suite_testGo,
		"src/LANGUAGE/hooks/hooks_suite_test.go",
	)
}

func srcLanguageHooksHooks_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageHooksHooks_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/hooks/hooks_suite_test.go", size: 188, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageIntegrationIntegration_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x6d\x6f\xdb\x38\x12\xfe\x2c\xfd\x8a\x39\x02\x2d\xa8\xd6\x90\x73\xbd\x3b\x5c\xef\x80\x14\xc8\x5b\x9b\x2c\x36\xae\x61\x3b\xdd\x5d\x14\x45\x41\x4b\x23\x99\x1b\x89\x54\xf9\x92\xc6\x1b\xf8\xbf\x2f\x48\x51\xb6\x6c\x27\x69\xda\xfd\xb2\x1f\x62\xd3\x7c\x79\x38\xcf\x33\x33\x9c\x49\xc3\xb2\x6b\x56\x22\x70\x61\xb0\x54\xcc\x70\x29\x3e\x1b\xd4\x26\x8e\x79\xdd\x48\x65\x80\xc6\x11\x41\x91\xc9\x9c\x8b\x72\xf8\xbb\x96\x82\xc4\x11\x29\x2a\x56\xfa\xef\xda\xb8\x2f\x81\x66\x68\x55\xe5\x86\x52\xb7\x9f\x43\xbc\xc5\xcc\x0d\x1b\x66\x16\xc3\x82\x57\xe8\x06\x6e\xc2\xf0\x1a\x49\x1c\x47\xa4\xe4\x66\x61\xe7\x69\x26\xeb\xe1\xbc\x62\xa2\x1c\x6a\xac\x6f\x50\x91\xed\xa5\xac\x92\x36\x2f\xa4\x15\xb9\x5a\x0e\x2b\x3e\x9f\x5b\x5e\xe5\xce\xea\x61\x66\x4d\xc5\xb4\x76\x58\x29\xf4\x8f\x48\xa1\xf9\xb0\xe4\xe2\xba\x94\xe4\xfe\x35\x59\x63\xc9\xbc\x11\x8e\x2b\x17\x25\x89\x93\x38\xbe\x61\x0a\xe6\xcd\x29\x57\xa0\x8d\xe2\xa2\x6c\x27\xba\xfb\x3e\xa0\xd2\x5c\x8a\xfe\x5a\x10\x2f\x3f\xee\xf6\x40\xb0\x29\x0d\x9b\x7b\x4b\xe3\x76\x6f\x1c\x17\x56\x64\xc0\x05\x37\x34\x81\xbb\x38\x72\x52\xa6\x53\x8f\xf9\x81\x29\xfa\x7c\xf7\xbe\x01\x90\x9b\x76\x44\x06\x40\xc8\xe6\x27\x18\x09\x56\x23\x50\x7f\x42\x03\x2f\x00\xeb\xc6\x2c\x13\x92\x04\xd4\x63\x29\x2b\x8f\xd9\x59\x75\xc2\xb2\x05\xe6\x03\x20\x99\x1f\x90\x01\x18\x65\x71\xfd\x7b\xc3\x75\x0d\xd1\x33\xac\x03\x39\xc5\x82\xd9\xca\x5c\x62\x2d\xd5\x72\x00\xa4\xf6\x03\x67\xd8\x3f\x5f\xbd\xbe\x74\xdf\x79\xbb\x03\xda\x15\x28\xa4\x82\xc6\x6a\x77\x01\x6b\x1a\xfd\x04\xec\x53\xae\xaf\x1d\x0e\xd7\xd7\x0e\xef\x5f\xaf\xff\xbd\x85\xeb\xe6\x1f\x44\x1d\x33\xa5\x91\x26\xf1\xaa\xf5\xe7\x67\x38\x84\xe9\x52\x64\x0b\x25\x05\xff\x03\xf3\x63\x2c\xa4\xc2\xa9\xe5\x06\xa9\xf3\x04\x4d\xe0\xe3\xa7\xf9\xd2\xa0\xf3\xc5\x70\x08\x13\x2b\x40\x8a\x0c\xe3\x88\x17\xfb\xbe\x3f\x3c\x04\x42\xdc\xce\x68\xcf\xf5\x03\x40\xa5\xe0\xff\x87\xeb\x10\x08\x0e\xbf\x12\xfc\x8b\xc5\x6a\xb9\x1f\x11\x34\x89\xa3\xe8\xec\xb6\xc1\xcc\x50\x54\x2a\x49\x47\xd2\xcc\x24\x3d\x67\x37\xf8\x3e\xcb\xac\x52\x98\xd3\x24\x89\xe3\x28\xca\x99\x61\x6b\x7c\x97\x83\xe9\x25\x53\x7a\xc1\x2a\xba\x67\xc6\xd3\x30\xa3\x48\xa1\xb1\x4a\x80\x43\x8e\xa3\x55\x1c\x77\x13\xad\x18\x77\xab\x78\x35\x00\xaf\x8f\xdb\x11\x66\x93\x2d\x8d\x80\x55\x15\x08\x99\xa3\x8e\x23\xa7\xb4\x33\x0f\x95\x92\xca\x4b\x57\xa1\xf0\x47\x13\x78\x03\x07\x5e\x31\xb7\x1e\xac\xbf\x12\x75\xb0\xbf\x65\xf6\xfc\x87\x69\xec\x7b\x68\x3f\x29\xbb\x64\x6c\x79\xfa\x04\x6f\xc5\xdc\xf8\xea\x2d\x17\xf9\x44\x4a\xe3\x5c\xf2\x14\x8f\x84\x3d\xeb\xbc\x92\xcd\xf2\xa4\x38\x97\x35\xd2\x24\x49\x67\x92\x4e\x6d\x96\x61\xb0\xb1\xdb\x34\x45\xcc\x27\x4c\xe4\xb2\xa6\xbd\xd9\x10\xf1\x53\x93\x4b\xeb\x3e\x5b\xbb\xde\xf9\xc7\xeb\x17\xc5\x0d\xaa\x78\x95\xdc\x1f\xca\x47\x85\x41\xb5\x15\xc9\x0f\xb8\xa7\x73\x65\xb2\x17\xe3\x3b\x3c\x26\x58\xcb\x1b\x1c\xef\x0a\x78\x4f\x94\xed\xb1\xdc\x41\x3a\xc5\x0a\x0d\xbe\x57\xcd\x82\x09\xcc\x27\xd2\x1a\xd4\xfb\xda\x38\x66\xfe\x39\x9c\xa1\x36\x17\x9b\x0a\x44\x0d\xbc\x08\x0f\x73\x3a\xf3\x56\x4f\xb0\xe4\xda\xa0\x7a\xcb\x78\x75\xce\x44\x5e\xa1\xa2\x6e\x9c\xc4\xd1\xc4\x8a\x69\x83\x99\xa6\x66\x00\xa4\x07\x02\x5e\x1a\xe2\x5f\x02\x7f\xc9\xd8\xea\xc5\x51\xd3\x1c\x89\xfc\x44\x8a\x82\xab\x9a\xb2\xa6\x81\x17\x9d\xc9\x47\x4d\xe3\xaf\x0a\x4c\x58\xd3\xa4\xee\xc4\x3d\x1e\x3d\xbb\x41\x61\x2c\xab\xaa\x65\x27\x3c\xfd\xf8\xa9\x2d\x0b\x83\x36\x05\x12\xb8\x83\x90\x50\x0e\xe7\x42\x68\xc3\x44\x86\x53\xc3\xbc\x0e\xb0\x1a\xc0\xab\x83\x17\xae\x12\xa6\x53\xcc\xa4\xc8\x93\x74\xba\x90\xb6\xca\xe9\xd9\x17\xcb\xaa\x35\xdc\x1d\x99\x5c\x8d\x46\x17\xa3\x77\x64\xd5\x13\xd9\x41\x06\x0a\x1b\x1f\xed\x66\xc2\xbe\xd8\x41\x86\x09\x6a\xc3\x94\xf9\x26\xf9\x6e\xdf\xdf\x87\x7f\xc7\xe0\xa8\xe1\xef\x14\x32\x83\x6a\xb6\x60\x82\xde\x6c\x15\xe6\x04\xe6\x52\x56\x8e\x0b\x6b\x78\xd0\x62\xba\xb1\xad\xff\x42\x1f\xad\x37\xec\xe6\xfd\x4c\xd2\x63\x1c\xf1\xca\xd3\xdd\xe0\xac\x11\xda\x4e\x25\xbd\x64\xd7\x48\x77\xaf\x79\x0c\x4a\xe1\x97\x07\xa0\x7c\xd9\x9a\x30\x51\x22\x25\x6f\x0e\x81\xc0\x4b\x08\xbc\x1e\xc7\xf3\x1a\x6f\x60\x7b\xd6\x6c\xe9\x75\xce\xf4\x8c\xe9\x6b\xba\x51\x27\x1c\xdd\xd1\x92\xbc\x4a\xff\xfb\x9f\xf4\xc0\x67\x4d\xef\xec\xa5\xad\x0c\xef\x15\xae\x6f\xa3\xfc\xef\x20\xa0\x04\x18\xad\x51\x99\x2b\x8d\x7a\xac\xe4\xed\xf2\xd4\x3a\xa5\xa6\x86\x95\x5c\x94\x17\xc5\x58\xa1\x46\x61\x68\xc1\x6f\x8d\x55\x38\x62\x35\xae\xbd\x79\x17\x47\x27\x52\x18\xbc\x35\x94\x7c\xe5\x66\x01\x4c\x80\x15\x7b\x0d\x4b\xff\x89\x8b\xda\x22\x7f\xc6\xb2\x45\xef\x65\x8c\x5c\x59\xda\xee\x84\xda\xe9\x68\x7a\xcd\x1b\x4a\x26\x56\x08\x2e\x4a\x08\xd0\xee\xfd\xf1\x5d\x45\x14\xad\xe2\x28\x5a\xf9\x42\x7c\x61\x28\xb1\x1a\x35\x30\x68\x1c\x0f\xc8\x3d\x11\xd0\x2d\x13\xd7\x83\x35\x2d\x97\x6d\x83\x22\xbf\x7b\x2f\x00\x47\xf8\xd5\xcb\xe1\x3b\x81\x87\xbd\x1c\x45\x39\x16\xa8\xda\x2b\xd3\x93\x4a\xfa\x06\xc7\xcd\xcf\x9b\xb7\xbc\x42\x07\xd9\x75\xd8\xe9\x4f\x92\x0b\x1a\x8a\xdc\xee\x9b\xf0\x92\x98\xba\x69\x39\x65\x75\xee\x8e\xb9\x2e\x3d\x3d\x91\x75\xcd\x44\x4e\x49\xd6\x90\xc1\x3d\xf5\xd3\xdd\x31\x80\xf6\x2e\x7f\x38\x14\xcf\x3a\x4f\x27\x56\x3c\xd1\x78\xd9\x95\x17\xda\x01\xb9\x35\xa3\x58\x51\xf0\x6c\x4f\x19\xf7\x8e\x2b\x81\x66\xd6\xae\x53\xef\xa7\x96\x95\x1f\x6e\xd3\x25\x21\x70\xb4\x53\x7d\x13\x43\xc9\x20\x1c\xf3\x04\xfc\x78\xf3\xb0\x9c\xcf\x66\xe3\xcf\xe3\xc9\xfb\x5f\x7f\x3b\x74\xc9\xd6\x6a\x7b\x35\xf9\x79\x00\x7e\x69\x7a\xdf\xda\xca\x83\x3c\xca\xb7\x25\xac\xcd\x95\xaa\xd6\xa4\xac\xaa\x42\x5b\xba\x46\xfa\x26\xc6\x4e\x3d\x6d\xbb\xc8\x53\x5f\x13\xdb\x12\xe9\xe9\xac\xe5\x2b\x6a\x93\x4e\x1b\xc5\x85\x29\x28\x79\xa6\xd3\x67\x4e\x8a\x60\x47\x7a\x2e\xb5\x11\xcc\x35\x27\x9b\xb9\xb1\xf4\x4f\x7b\x4b\x68\xd7\x65\xab\x24\x76\x7f\xdb\xc9\x3b\x92\xbb\x4e\x79\x20\x5d\x5d\x92\x2c\x98\x06\x21\x21\xd8\xb7\x9d\x0c\xbc\x80\x7f\xdc\x97\x87\xdb\x69\xb8\xce\xf1\x4d\x22\xba\xf6\xed\xc7\x43\xfe\xaf\x44\x7c\x17\x9d\xbd\x88\x7f\x38\xe0\x1f\x89\xf7\xef\x09\xf7\x4d\xb4\x7f\x47\xb0\xf7\x62\x7d\x1d\xea\x3e\x6a\x1f\x37\x39\xac\x04\xf3\xc2\xea\x99\xfb\x6f\xd2\xaf\xfb\x58\xf8\x33\x00\x00\xff\xff\x32\x15\x2e\xfe\x2a\x10\x00\x00")

func srcLanguageIntegrationIntegration_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageIntegrationIntegration_suite_testGo,
		"src/LANGUAGE/integration/integration_suite_test.go",
	)
}

func srcLanguageIntegrationIntegration_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageIntegrationIntegration_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/integration/integration_suite_test.go", size: 4138, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageIntegrationSimple_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\x4d\x6b\x1b\x3d\x10\x3e\x4b\xbf\x62\x5e\x9d\xb4\x2f\x66\xf7\x5e\xf0\xc1\x8e\xdd\x90\x52\x9c\x40\xdd\x43\x29\xc5\xc8\xbb\xb3\xbb\x22\x5a\x49\x48\xa3\xc6\xc6\xf8\xbf\x17\x29\x71\x62\x97\x5e\x96\x95\xe6\x99\xd1\xf3\x31\x5e\xb5\xcf\x6a\x40\xd0\x96\x70\x08\x8a\xb4\xb3\x3b\xc2\x48\x9c\xeb\xc9\xbb\x40\x20\x39\x13\x5e\xd1\xd8\xf4\xda\x60\xfe\x11\x9c\x33\x31\x68\x1a\xd3\xbe\x6e\xdd\xd4\xb4\xc6\xa5\xae\x77\xc9\x76\xe1\xd8\x18\xbd\xdf\x27\x6d\xba\x3c\xb6\x69\x13\x19\x15\x63\x6e\xa8\xe1\xba\xc5\xd9\xa8\x9b\x41\xdb\xe7\xc1\x89\x7f\xd7\xdc\x84\x83\x12\xbc\xe2\xfc\xb7\x0a\xb0\x83\x39\xac\x30\xb6\x41\xef\x51\x8a\x6f\x7a\xf2\x06\xe1\xe1\x83\x31\x6c\x31\x92\x98\x41\x9f\x6c\x2b\x2b\x38\x71\x96\xbb\x94\xf7\xf0\xff\x1b\x87\x7a\xe1\x3d\x67\x8b\x9e\x30\xac\x55\x3b\xca\x0f\x24\xd3\x7d\x41\xfe\x37\x07\xab\x4d\xb9\x61\xca\xfb\x7a\x85\x91\x82\x3b\xca\x8a\x33\x76\xe6\xe5\x0e\x0a\x84\xb3\x73\xc5\x39\x6b\x1a\xd8\x3e\xae\x1e\x61\x3b\x22\xf4\xce\x18\xf7\xa2\xed\x00\xd9\x3a\xd0\x11\x3c\xda\x2e\x9f\xf7\xd8\xaa\x14\x11\x68\xc4\x23\xb4\x29\x04\xb4\x64\x8e\xd0\x2b\x6d\xea\x32\xe3\x87\x4b\x60\x11\x3b\x20\x07\x93\x7a\x2e\xc8\x09\xbc\x8a\x91\xb3\xa7\x3b\x67\x09\x0f\x24\x45\x7e\xbc\x75\x96\x94\xb6\x31\x23\x00\x0f\xaa\x98\x90\x43\xb9\x11\xce\x96\xd8\xbb\x80\x7f\x8b\x2c\x74\x47\x1d\x33\x37\x65\xdf\xdb\x5d\x9f\x4f\x57\xd9\xbf\x0a\x48\xb1\x68\x19\x11\xe2\xe5\x99\x03\xa5\x80\x4d\x2c\xd6\xbf\x2e\x08\xbb\x78\x72\xb1\x78\x83\x2f\xf2\xb2\x24\xf5\x17\xa7\xad\xdc\xfb\x95\x0e\x33\x10\x6f\xed\x51\xcc\x40\x5c\x8d\x10\x55\x75\x71\x7b\x79\x59\x9a\x08\x73\xf8\xf9\x2b\x52\xd0\x76\x38\x89\xd3\xe9\xeb\x62\x73\xff\x7d\x71\xbf\x3e\x9f\x77\xef\x8b\x25\x72\x1e\xec\x29\xc5\x71\xe1\xfd\xc2\x76\x77\xce\xf6\x3a\x4c\x52\x79\x5f\xd2\xca\x9f\x07\x92\x62\x54\x11\xa2\x9b\x70\x97\x59\xd5\x74\x20\xd0\xb6\xa8\xf2\x29\x8e\xd8\xe5\xd8\x6f\xbd\x63\x99\x7a\x9c\x01\x86\x00\x9f\xe6\xb9\x5e\x7f\xd6\x06\xa3\x14\x37\x63\x44\xa1\xbd\x3e\x78\x6c\x49\x62\x08\x55\xbd\x75\x72\x89\x1b\x6d\x64\x75\x5d\x2a\xd3\x72\x71\xe3\x48\x2e\x71\x3d\x79\x3a\xbe\x22\x32\xc5\x73\xc5\xcf\x15\xff\x13\x00\x00\xff\xff\xc5\xe0\x86\x5c\x80\x03\x00\x00")

func srcLanguageIntegrationSimple_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageIntegrationSimple_testGo,
		"src/LANGUAGE/integration/simple_test.go",
	)
}

func srcLanguageIntegrationSimple_testGo() (*asset, error) {
	bytes, err := srcLanguageIntegrationSimple_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/integration/simple_test.go", size: 896, mode: os.FileMode(436), modTime: time.Unix(1520277608, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplyCliCli_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xcd\xaa\xc2\x30\x10\x40\xe1\x75\xe6\x29\x86\xac\x92\xcb\xa5\x7d\x88\x82\xb8\x6e\xbb\x97\x18\xc7\x38\x34\x7f\x34\x93\x85\x88\xef\x2e\x05\x97\xee\x0e\x7c\x70\xaa\xf3\x9b\x0b\x84\xc9\x71\xbe\x08\x35\x01\xe0\x54\xcb\x2e\x68\x40\x0d\xa8\x03\xcb\xa3\x5f\x07\x5f\xd2\x58\x72\xe3\x31\x70\xde\x42\xd1\xbf\xad\x24\x0a\x4e\x03\x28\x7d\x9c\x38\x07\x0d\x16\xe0\xde\xb3\xc7\x95\x9a\x4c\x91\x8d\xe0\xdf\xd7\x86\xd5\xe2\x0b\xd4\x4c\x81\x9b\xd0\x7e\x72\x1c\xcf\x2e\xdf\x22\xed\xe6\x68\x0b\x6a\xee\x79\xa9\xe4\x9b\x91\x7f\xd4\x4b\xaf\x35\x3e\x71\x8a\x8c\x4b\x67\x21\x6d\xe1\x0d\x9f\x00\x00\x00\xff\xff\xe6\x5b\xbf\xd2\xbe\x00\x00\x00")

func srcLanguageSupplyCliCli_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplyCliCli_suite_testGo,
		"src/LANGUAGE/supply/cli/cli_suite_test.go",
	)
}

func srcLanguageSupplyCliCli_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageSupplyCliCli_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/cli/cli_suite_test.go", size: 190, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplyCliMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\xbd\x6e\x83\x30\x18\x85\xe1\x19\x5f\xc5\x29\x03\x82\x05\xab\x6b\x25\x06\xd4\x22\x96\xaa\x48\xfd\xb9\x00\xcb\x7c\x2e\x4e\x8c\x6d\x61\x13\x25\x8a\xb8\xf7\x28\x26\x43\xd6\xf3\x1e\x3d\x5e\xc8\xa3\xf8\x27\xcc\x42\x5b\xc6\x38\x47\xfe\xd9\x7e\xf5\x7f\x6d\xdf\xf1\xb0\x7a\x6f\x2e\xf9\x7d\xfd\x1d\x3e\x86\x37\x1c\x54\x71\x9a\xf0\x23\x85\x52\xce\x8c\xd0\x31\x90\x51\x18\x1d\x05\x58\x17\x61\x89\x46\x44\x07\xe9\x66\xaf\x0d\xd5\x4c\xad\x56\x26\xb8\xac\x70\x65\x19\xe7\xd8\x9d\x77\x61\x0c\x76\xbd\xfe\x5e\x2d\x26\x5a\x28\x65\x5a\x16\x34\x4f\xa5\x2c\x42\x95\x82\x56\xa9\xbd\x34\xb0\xda\x3c\xac\xcc\x85\xba\x3b\xeb\x58\xbe\xee\x9f\x8d\x6d\xec\x16\x00\x00\xff\xff\x61\x5e\x55\x4b\xce\x00\x00\x00")

func srcLanguageSupplyCliMainGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplyCliMainGo,
		"src/LANGUAGE/supply/cli/main.go",
	)
}

func srcLanguageSupplyCliMainGo() (*asset, error) {
	bytes, err := srcLanguageSupplyCliMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/cli/main.go", size: 206, mode: os.FileMode(436), modTime: time.Unix(1520262297, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplySupplyGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x53\x4d\x6f\xdb\x30\x0c\x3d\x9b\xbf\x82\xf0\xc9\x2e\x06\xf9\xde\x5b\xbb\x14\x45\x81\x6c\x01\x96\x7d\x1c\x86\x1d\x14\x9b\x51\x84\xd9\x92\x40\x51\x40\x8d\x20\xff\x7d\xb0\x63\xbb\x49\x86\x01\x3b\xd5\x27\x99\x7a\xe4\xe3\x7b\x14\x83\xae\x7f\x6b\x43\x18\x53\x08\x6d\x0f\x60\xbb\xe0\x59\xb0\x80\x2c\xb7\x3e\x07\xc8\x72\x63\xe5\x90\x76\xaa\xf6\x5d\x55\xb7\x3e\x35\x7b\x9f\x5c\xc3\x7d\xd5\xda\xdd\x2e\xd9\xb6\x19\x2a\xe4\x50\x02\x48\x1f\x08\xb7\xa2\x0d\x31\x5a\x27\xc4\x7b\x5d\x13\x1e\x21\xab\xaa\xaf\x9b\xd5\xe6\x1e\xb7\x44\xd8\x79\x26\xf4\x41\xac\x77\x11\xb5\xe0\x41\x24\xc4\xfb\xaa\xfa\x1f\x96\x6a\xd7\xfa\x5d\xd5\xe9\x28\xc4\x55\x1c\x89\x94\xf1\x90\x3d\x0e\x80\x95\xe5\xa2\xc4\x28\x6c\x9d\x81\x6c\x45\xe1\xaf\x40\x7c\x69\x5e\x6f\x22\x57\x98\xd3\x24\xe1\x93\x76\x76\x4f\x51\xde\x41\x44\x37\x51\x8d\x32\x1e\xda\x76\x45\x81\x5c\x43\xae\xee\xbf\x13\xc7\xa1\x7c\x71\x6e\xae\xc4\x9f\xbf\xde\x1a\xdf\xeb\xd4\xca\x84\x58\x00\xc5\x25\x8b\x7a\xab\xf4\x01\x89\xd9\x73\x09\xd9\x8b\x8b\xa2\x2f\x49\xfe\x9d\x32\x17\x1d\x53\x97\xcc\x8d\x6b\xfb\x6b\xda\x5b\xe4\xec\xe1\x47\xdf\x75\xda\x35\xef\x60\x61\x7d\x66\x1a\x1d\x7c\x7a\xa5\x3a\x09\x2d\xbd\x59\xaf\x7e\xb0\x15\xe2\xab\xe3\x7c\xab\x94\xba\x91\xb9\x49\x12\x92\x14\x8d\xe5\x05\x14\xd8\x1b\xd6\xdd\xf2\xaf\xd9\xc4\xcb\xcc\x85\x6b\x32\x79\x36\x60\x3b\xec\x93\xa5\xb1\x50\xaa\x65\x90\xbf\xbc\xab\xf9\x00\xd9\xb4\x2d\x38\xad\x0d\x64\xb3\x6f\x78\x35\x99\x29\x0a\xd9\xda\x1b\x1c\xbf\xbb\xab\xfb\xb5\x37\x43\xf6\x09\x60\x9f\x5c\x8d\x45\xc4\xbb\x99\xbf\xc4\x2f\xc9\x15\x93\xc2\xa1\x8b\x38\xa0\xd5\x23\x19\xeb\xb6\x42\xa1\xc8\x47\x64\x6f\x9d\xc1\xe3\x71\xfd\xf0\xf9\xf9\xdb\xc3\xf3\xd3\xe9\x94\x97\x30\x0c\x0c\xcf\x13\x9b\xe6\x8f\xda\xf5\xd8\xcc\xcf\xc4\x52\xc4\x03\x31\x29\xa5\x00\x32\x26\x49\xec\xd0\xd9\x16\x4e\xf0\x27\x00\x00\xff\xff\x70\x10\x12\x48\x56\x04\x00\x00")

func srcLanguageSupplySupplyGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplySupplyGo,
		"src/LANGUAGE/supply/supply.go",
	)
}

func srcLanguageSupplySupplyGo() (*asset, error) {
	bytes, err := srcLanguageSupplySupplyGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/supply.go", size: 1110, mode: os.FileMode(436), modTime: time.Unix(1520262033, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplySupply_suite_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xc1\xca\xc2\x30\x10\x04\xe0\x73\xf6\x29\x96\x9c\x92\x9f\x9f\xf6\x2d\xc4\x73\xdb\xbb\xc4\xb8\xae\x4b\xdb\x24\x34\x9b\x83\x88\xef\x2e\x55\x8f\xde\x06\x3e\x66\xa6\x84\x38\x07\x26\xac\xad\x94\xe5\x7e\x52\xaa\x0a\x20\x6b\xc9\x9b\xa2\x03\xd3\xa1\x65\xd1\x5b\x3b\x77\x31\xaf\x7d\x4e\x55\x7a\x96\x34\x73\xb6\xbf\x2d\xaf\xc4\xc1\x02\x18\xbb\x2f\x49\x62\x0b\x1e\xe0\xda\x52\xc4\x89\xaa\x8e\xef\x17\xa7\xf8\xf7\xe5\x6e\xf2\xf8\x00\x33\x10\x4b\x55\xda\x0e\x41\x96\x63\x48\x97\x85\x36\xb7\x67\x0f\x66\x68\x69\x2c\x14\xab\xd3\x7f\xb4\x9f\x3e\x8e\x4d\x94\xac\x87\x27\xbc\x02\x00\x00\xff\xff\x0e\xd4\xc8\xb7\xbf\x00\x00\x00")

func srcLanguageSupplySupply_suite_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplySupply_suite_testGo,
		"src/LANGUAGE/supply/supply_suite_test.go",
	)
}

func srcLanguageSupplySupply_suite_testGo() (*asset, error) {
	bytes, err := srcLanguageSupplySupply_suite_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/supply_suite_test.go", size: 191, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageSupplySupply_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x6a\x2b\x31\x10\x46\xeb\xd5\x53\x0c\x5b\x49\x70\xbd\xea\x0d\x5b\x5c\xb0\x8b\x54\x2e\xe2\xde\xc8\xa3\xb1\x2c\x76\x57\xa3\x68\xa4\x24\x26\xf8\xdd\x83\x7f\x1a\x43\xca\xe1\x0c\x9c\xf3\x65\x87\x93\x0b\x04\xd2\x72\x9e\x2f\x87\x4a\x52\x95\x8a\x4b\xe6\x52\x41\xab\x6e\x80\x3e\xc4\x7a\x6e\xc7\x01\x79\xb1\x9c\x24\xda\x10\xd3\x14\xb8\xff\x9b\xf1\x42\xc1\xf5\xca\x28\x65\x6d\xe0\x75\xa0\x44\xc5\x55\x82\x85\x71\x0a\x94\x60\x25\xdc\x0a\xd2\xf8\xd0\x0d\x81\x61\xb5\xf2\x24\x35\x26\x57\x23\xa7\xf1\xf6\x27\xf7\x8a\x07\x7b\xe6\x8d\x2f\x79\x9f\xae\xc0\x01\x46\xd8\x90\x60\x89\x47\xd2\xfd\xfb\x1d\xf7\xff\xe0\xd4\x12\x6a\x03\x3f\xaa\x7b\xab\xba\x97\x86\x48\xe4\xe5\x05\x74\xdb\xef\x4c\x58\xf5\xc9\xcd\x42\x66\xd8\xb3\xde\x7e\x34\x37\x3f\x6f\xa3\xba\xab\x51\x9d\xb5\xb0\xdf\x6d\x76\x6b\xf8\xef\x3d\xdc\xac\x02\x67\x2a\x04\x95\x01\xcf\x84\x13\xc4\x24\xd5\xcd\x33\x78\xca\x94\x3c\x25\xbc\xdc\x15\xb7\x11\x02\x5f\x5c\x26\x75\x35\xea\x37\x00\x00\xff\xff\x99\x65\x83\x6a\x5d\x01\x00\x00")

func srcLanguageSupplySupply_testGoBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageSupplySupply_testGo,
		"src/LANGUAGE/supply/supply_test.go",
	)
}

func srcLanguageSupplySupply_testGo() (*asset, error) {
	bytes, err := srcLanguageSupplySupply_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/supply/supply_test.go", size: 349, mode: os.FileMode(436), modTime: time.Unix(1520261583, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srcLanguageVendorGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func srcLanguageVendorGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_srcLanguageVendorGitkeep,
		"src/LANGUAGE/vendor/.gitkeep",
	)
}

func srcLanguageVendorGitkeep() (*asset, error) {
	bytes, err := srcLanguageVendorGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "src/LANGUAGE/vendor/.gitkeep", size: 0, mode: os.FileMode(436), modTime: time.Unix(1519228144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".envrc": Envrc,
	".gitignore": Gitignore,
	"README.md": readmeMd,
	"VERSION": version,
	"bin/compile": binCompile,
	"bin/detect": binDetect,
	"bin/finalize": binFinalize,
	"bin/release": binRelease,
	"bin/supply": binSupply,
	"fixtures/.gitkeep": fixturesGitkeep,
	"fixtures/simple_test/some_file.txt": fixturesSimple_testSome_fileTxt,
	"manifest.yml": manifestYml,
	"scripts/brats.sh": scriptsBratsSh,
	"scripts/build.sh": scriptsBuildSh,
	"scripts/install_go.sh": scriptsInstall_goSh,
	"scripts/install_tools.sh": scriptsInstall_toolsSh,
	"scripts/integration.sh": scriptsIntegrationSh,
	"scripts/unit.sh": scriptsUnitSh,
	"src/LANGUAGE/Gopkg.toml": srcLanguageGopkgToml,
	"src/LANGUAGE/brats/brats_suite_test.go": srcLanguageBratsBrats_suite_testGo,
	"src/LANGUAGE/brats/brats_test.go": srcLanguageBratsBrats_testGo,
	"src/LANGUAGE/finalize/cli/cli_suite_test.go": srcLanguageFinalizeCliCli_suite_testGo,
	"src/LANGUAGE/finalize/cli/main.go": srcLanguageFinalizeCliMainGo,
	"src/LANGUAGE/finalize/finalize.go": srcLanguageFinalizeFinalizeGo,
	"src/LANGUAGE/finalize/finalize_suite_test.go": srcLanguageFinalizeFinalize_suite_testGo,
	"src/LANGUAGE/finalize/finalize_test.go": srcLanguageFinalizeFinalize_testGo,
	"src/LANGUAGE/hooks/hooks_suite_test.go": srcLanguageHooksHooks_suite_testGo,
	"src/LANGUAGE/integration/integration_suite_test.go": srcLanguageIntegrationIntegration_suite_testGo,
	"src/LANGUAGE/integration/simple_test.go": srcLanguageIntegrationSimple_testGo,
	"src/LANGUAGE/supply/cli/cli_suite_test.go": srcLanguageSupplyCliCli_suite_testGo,
	"src/LANGUAGE/supply/cli/main.go": srcLanguageSupplyCliMainGo,
	"src/LANGUAGE/supply/supply.go": srcLanguageSupplySupplyGo,
	"src/LANGUAGE/supply/supply_suite_test.go": srcLanguageSupplySupply_suite_testGo,
	"src/LANGUAGE/supply/supply_test.go": srcLanguageSupplySupply_testGo,
	"src/LANGUAGE/vendor/.gitkeep": srcLanguageVendorGitkeep,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".envrc": &bintree{Envrc, map[string]*bintree{}},
	".gitignore": &bintree{Gitignore, map[string]*bintree{}},
	"README.md": &bintree{readmeMd, map[string]*bintree{}},
	"VERSION": &bintree{version, map[string]*bintree{}},
	"bin": &bintree{nil, map[string]*bintree{
		"compile": &bintree{binCompile, map[string]*bintree{}},
		"detect": &bintree{binDetect, map[string]*bintree{}},
		"finalize": &bintree{binFinalize, map[string]*bintree{}},
		"release": &bintree{binRelease, map[string]*bintree{}},
		"supply": &bintree{binSupply, map[string]*bintree{}},
	}},
	"fixtures": &bintree{nil, map[string]*bintree{
		".gitkeep": &bintree{fixturesGitkeep, map[string]*bintree{}},
		"simple_test": &bintree{nil, map[string]*bintree{
			"some_file.txt": &bintree{fixturesSimple_testSome_fileTxt, map[string]*bintree{}},
		}},
	}},
	"manifest.yml": &bintree{manifestYml, map[string]*bintree{}},
	"scripts": &bintree{nil, map[string]*bintree{
		"brats.sh": &bintree{scriptsBratsSh, map[string]*bintree{}},
		"build.sh": &bintree{scriptsBuildSh, map[string]*bintree{}},
		"install_go.sh": &bintree{scriptsInstall_goSh, map[string]*bintree{}},
		"install_tools.sh": &bintree{scriptsInstall_toolsSh, map[string]*bintree{}},
		"integration.sh": &bintree{scriptsIntegrationSh, map[string]*bintree{}},
		"unit.sh": &bintree{scriptsUnitSh, map[string]*bintree{}},
	}},
	"src": &bintree{nil, map[string]*bintree{
		"LANGUAGE": &bintree{nil, map[string]*bintree{
			"Gopkg.toml": &bintree{srcLanguageGopkgToml, map[string]*bintree{}},
			"brats": &bintree{nil, map[string]*bintree{
				"brats_suite_test.go": &bintree{srcLanguageBratsBrats_suite_testGo, map[string]*bintree{}},
				"brats_test.go": &bintree{srcLanguageBratsBrats_testGo, map[string]*bintree{}},
			}},
			"finalize": &bintree{nil, map[string]*bintree{
				"cli": &bintree{nil, map[string]*bintree{
					"cli_suite_test.go": &bintree{srcLanguageFinalizeCliCli_suite_testGo, map[string]*bintree{}},
					"main.go": &bintree{srcLanguageFinalizeCliMainGo, map[string]*bintree{}},
				}},
				"finalize.go": &bintree{srcLanguageFinalizeFinalizeGo, map[string]*bintree{}},
				"finalize_suite_test.go": &bintree{srcLanguageFinalizeFinalize_suite_testGo, map[string]*bintree{}},
				"finalize_test.go": &bintree{srcLanguageFinalizeFinalize_testGo, map[string]*bintree{}},
			}},
			"hooks": &bintree{nil, map[string]*bintree{
				"hooks_suite_test.go": &bintree{srcLanguageHooksHooks_suite_testGo, map[string]*bintree{}},
			}},
			"integration": &bintree{nil, map[string]*bintree{
				"integration_suite_test.go": &bintree{srcLanguageIntegrationIntegration_suite_testGo, map[string]*bintree{}},
				"simple_test.go": &bintree{srcLanguageIntegrationSimple_testGo, map[string]*bintree{}},
			}},
			"supply": &bintree{nil, map[string]*bintree{
				"cli": &bintree{nil, map[string]*bintree{
					"cli_suite_test.go": &bintree{srcLanguageSupplyCliCli_suite_testGo, map[string]*bintree{}},
					"main.go": &bintree{srcLanguageSupplyCliMainGo, map[string]*bintree{}},
				}},
				"supply.go": &bintree{srcLanguageSupplySupplyGo, map[string]*bintree{}},
				"supply_suite_test.go": &bintree{srcLanguageSupplySupply_suite_testGo, map[string]*bintree{}},
				"supply_test.go": &bintree{srcLanguageSupplySupply_testGo, map[string]*bintree{}},
			}},
			"vendor": &bintree{nil, map[string]*bintree{
				".gitkeep": &bintree{srcLanguageVendorGitkeep, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

