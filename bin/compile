#!/bin/bash
set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`

GO_VERSION="1.8.1"
GO_MD5="b05c0cbb28503d038a47d87a6b3b8e86"

URL=https://buildpacks.cloudfoundry.org/dependencies/go/go${GO_VERSION}.linux-amd64-c9de5bb9.tar.gz

echo "-----> Download go ${GO_VERSION}"
curl -s -L --retry 15 --retry-delay 2 $URL -o /tmp/go.tar.gz

DOWNLOAD_MD5=$(md5sum /tmp/go.tar.gz | cut -d ' ' -f 1)

if [[ $DOWNLOAD_MD5 != $GO_MD5 ]]; then
  echo "       **ERROR** MD5 mismatch: got $DOWNLOAD_MD5 expected $GO_MD5"
  exit 1
fi

tar xzf /tmp/go.tar.gz -C /tmp

export GOROOT=/tmp/go
export GOPATH=$BUILDPACK_DIR

if [ -f $GOROOT/bin/go ]; then
  echo "-----> Running go build compile"
  output_dir=$(mktemp -d -t compileXXX)
  $GOROOT/bin/go build -o $output_dir/compile compile
else
  echo "       **ERROR** Could not download go"
  exit 1
fi

unset GOROOT
unset GOPATH

$output_dir/compile $BUILD_DIR $CACHE_DIR
